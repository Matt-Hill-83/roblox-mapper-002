{
  "timestamp": "2025-07-11T05:39:41.948Z",
  "files": [
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/data/tempHarnessTestData.ts",
      "relativePath": "shared/data/tempHarnessTestData.ts",
      "name": "tempHarnessTestData.ts",
      "size": 687249,
      "lines": 23033,
      "lastModified": "2025-07-11T04:42:55.131Z",
      "content": "/**\n * Temporary Harness test data extracted from harness-files.json\n * This data represents real Harness repository files for testing visualization\n * Generated automatically from 1000 files\n */\n\ninterface HarnessFileData {\n  path: string;\n  service: string;\n  component: string;\n  language: string;\n  size: string;\n  type: string;\n  resourceDomain: string;\n  operationType: string;\n  apiPattern: string;\n  apiComplexity: string;\n  httpMethod: string;\n  directoryDepth: string;\n  fileExtension: string;\n  testStatus: string;\n  importCount: string;\n  exportCount: string;\n  lineCount: string;\n  commentDensity: string;\n  lastModified: string;\n  moduleType: string;\n  complexityScore: string;\n}\n\nexport const TEMP_HARNESS_TEST_DATA: HarnessFileData[] = [\n  {\n    \"path\": \"app/api/controller/pullreq/check_list.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"pullreq\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/secret/create.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"secret\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/account/register.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"has-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/events/git/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"messaging\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/user/create_access_token.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/services/gitspaceinfraevent/handler.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"request-handler\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/pipeline/resolver/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"pipeline\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/auth/session.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/secret/resolver.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/create.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"heavy-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"large-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"very-complex\"\n  },\n  {\n    \"path\": \"app/api/handler/space/list_gitspaces.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"git\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"NOTICE\",\n    \"service\": \"ce\",\n    \"component\": \"core\",\n    \"language\": \"other\",\n    \"size\": \"tiny\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"root-level\",\n    \"fileExtension\": \"no-extension\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"no-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"trivial\"\n  },\n  {\n    \"path\": \"app/api/handler/pullreq/comment_apply_suggestions.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/find.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/space/membership_update.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"space\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/pullreq/pr_list.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/check/check_recent_space.go\",\n    \"service\": \"platform\",\n    \"component\": \"model\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"validation\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/types/zerolog_adapter.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/events/git/tag.go\",\n    \"service\": \"platform\",\n    \"component\": \"messaging\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"tag\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PATCH\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"moderate-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/utils/git.go\",\n    \"service\": \"platform\",\n    \"component\": \"utils\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"git\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"shared-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/events/pullreq/events_code_comment_updated.go\",\n    \"service\": \"platform\",\n    \"component\": \"messaging\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/openapi/infra_provider.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/webhook/space_create.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"workspace\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/system/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"system\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/webhook/repo_create.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"webhook\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/principal/find_by_email.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"identity\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/render/header.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"has-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"moderate-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/events/user/events.go\",\n    \"service\": \"platform\",\n    \"component\": \"messaging\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/infraprovider/delete.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/diff.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"diff\",\n    \"apiPattern\": \"git-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/container/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/types/types.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"types\",\n    \"apiPattern\": \"data-model\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"moderate-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/user/update.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/serviceaccount/list_tokens.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/pullreq/revert.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"pullreq\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/auth/authn/jwt.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"very-complex\"\n  },\n  {\n    \"path\": \"app/api/handler/pullreq/codeowner.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/bootstrap/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/webhook/space_find.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"webhook\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/check/check_recent_space.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"workspace\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/infraprovider/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"asset\",\n    \"resourceDomain\": \"infrastructure\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/service/find.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"service\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/keywordsearch/search.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"search\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/webhook/repo_update.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"webhook\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/soft_delete.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/space/rule_list.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"space\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/pullreq/controller.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"medium\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"pullreq\",\n    \"operationType\": \"controller\",\n    \"apiPattern\": \"controller\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"heavy-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"large-file\",\n    \"commentDensity\": \"minimal-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"very-complex\"\n  },\n  {\n    \"path\": \"app/api/handler/gitspace/list_all_gitspaces.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"git\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/usergroup/controller.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"usergroup\",\n    \"operationType\": \"controller\",\n    \"apiPattern\": \"controller\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/space/list_executions.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"space\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/upload/controller.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"upload\",\n    \"operationType\": \"controller\",\n    \"apiPattern\": \"controller\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/label_value_define.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/space/import_repositories.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"import\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/webhook/space_update.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"workspace\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/infrastructure/find.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"very-complex\"\n  },\n  {\n    \"path\": \"app/api/controller/pullreq/file_view_delete.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"pullreq\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/move.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/user/delete.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"user\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/utils/resolve_features.go\",\n    \"service\": \"platform\",\n    \"component\": \"utils\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"shared-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/trigger/update.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/account/login.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"has-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/repo/list_paths.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/pipeline/file/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"pipeline\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/utils/script_templates/setup_git_credentials.sh\",\n    \"service\": \"platform\",\n    \"component\": \"utils\",\n    \"language\": \"shell\",\n    \"size\": \"tiny\",\n    \"type\": \"script\",\n    \"resourceDomain\": \"git\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"shell\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"no-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"shared-module\",\n    \"complexityScore\": \"trivial\"\n  },\n  {\n    \"path\": \"app/api/controller/keywordsearch/search.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"database\",\n    \"resourceDomain\": \"search\",\n    \"operationType\": \"search\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/events/pullreq/category.go\",\n    \"service\": \"platform\",\n    \"component\": \"messaging\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/get_commit_divergences.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/principal/list.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/events/pipeline/create.go\",\n    \"service\": \"platform\",\n    \"component\": \"messaging\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/githook/client.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"java\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"webhook\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"client\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/connector/update.go\",\n    \"service\": \"platform\",\n    \"component\": \"cli\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"connector\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/logutil/stateful_logger.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/secret/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/user/delete_favorite.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"user\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/pullreq/reviewer_list.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/infraprovider/list.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"database\",\n    \"resourceDomain\": \"infrastructure\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/container/embedded_docker_container_orchestrator.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"medium\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"heavy-imports\",\n    \"exportCount\": \"moderate-exports\",\n    \"lineCount\": \"huge-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"extremely-complex\"\n  },\n  {\n    \"path\": \"app/events/pullreq/events_comment_created.go\",\n    \"service\": \"platform\",\n    \"component\": \"messaging\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/space/create.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"space\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/pipeline/logger/zerolog.go\",\n    \"service\": \"platform\",\n    \"component\": \"pipeline\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/check/sanitizers.go\",\n    \"service\": \"platform\",\n    \"component\": \"cli\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"validation\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"validation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/pipeline/find.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/space/list_service_accounts.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"space\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"business-logic\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/events/gitspaceoperations/events.go\",\n    \"service\": \"platform\",\n    \"component\": \"messaging\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/services/gitspace/action_delete.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/space/list_templates.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/openapi/service.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"business-logic\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/user/update_admin.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"user\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/ide/media/vscodeweb/favicon.ico\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"other\",\n    \"size\": \"medium\",\n    \"type\": \"asset\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"deep\",\n    \"fileExtension\": \".ico\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"no-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"trivial\"\n  },\n  {\n    \"path\": \"app/pkg.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"root-level\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/create_commit_tag.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/utils/image.go\",\n    \"service\": \"platform\",\n    \"component\": \"utils\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"shared-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/trigger/update.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"trigger\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/pullreq/activity_list.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"pullreq\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"has-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/template/delete.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/pullreq/reviewer_list.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"pullreq\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/space/rule_update.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"space\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/services/gitspace/action_start.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \".github/workflows/ci-lint.yml\",\n    \"service\": \"ff\",\n    \"component\": \"config\",\n    \"language\": \"yaml\",\n    \"size\": \"small\",\n    \"type\": \"config\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"config\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"no-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"trivial\"\n  },\n  {\n    \"path\": \"app/api/handler/space/list_pipelines.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"pipeline\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/resource/resource.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/openapi/secret.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/pullreq/comment_create.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"medium\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"pullreq\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"large-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"extremely-complex\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/blame.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"blame\",\n    \"apiPattern\": \"git-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/pullreq/file_view_list.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/openapi/repo.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"large\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"moderate-exports\",\n    \"lineCount\": \"huge-file\",\n    \"commentDensity\": \"minimal-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/utils/script_templates/install_tools_intellij.sh\",\n    \"service\": \"tools\",\n    \"component\": \"utils\",\n    \"language\": \"shell\",\n    \"size\": \"small\",\n    \"type\": \"script\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"shell\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"no-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"shared-module\",\n    \"complexityScore\": \"trivial\"\n  },\n  {\n    \"path\": \"app/api/openapi/pipeline.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"medium\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"pipeline\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"large-file\",\n    \"commentDensity\": \"minimal-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/list_service_accounts.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"business-logic\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/check/check_report.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/services/gitspace/delete_all_for_spaces.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"workspace\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/space/label_delete.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"space\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/limiter/limiter.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"ratelimit\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"moderate-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/pipeline/checks/write.go\",\n    \"service\": \"platform\",\n    \"component\": \"pipeline\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/pullreq/reviewer_add.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"pullreq\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/pipeline/create.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"pipeline\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/request/label.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"moderate-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/services/gitspaceoperationsevent/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/githook/pre_receive_process.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"typescript\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"webhook\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/connector/delete.go\",\n    \"service\": \"platform\",\n    \"component\": \"utils\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"connector\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/pipeline_generate.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/space/soft_delete.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/repo/git_service_pack.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"git\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"business-logic\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/repo/rule_list.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/rebase.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/delete_tag.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/bootstrap/bootstrap.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"many-exports\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/api/request/pipeline.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"pipeline\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"many-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/check/check_recent.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/users/find.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"has-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/events/rule/events_rule.go\",\n    \"service\": \"platform\",\n    \"component\": \"messaging\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"CONTRIBUTING.md\",\n    \"service\": \"ce\",\n    \"component\": \"core\",\n    \"language\": \"markdown\",\n    \"size\": \"small\",\n    \"type\": \"docs\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"root-level\",\n    \"fileExtension\": \"documentation\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"no-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/request/publickey.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"moderate-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/user/publickey_create.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"user\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"very-complex\"\n  },\n  {\n    \"path\": \"app/api/openapi/rules.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"medium\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/pipeline/update.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/users/create_test.go\",\n    \"service\": \"test\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"test\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"test\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/auth/infraprovider.go\",\n    \"service\": \"platform\",\n    \"component\": \"test\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/lfs/download.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"asset\",\n    \"resourceDomain\": \"storage\",\n    \"operationType\": \"download\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/account/register_test.go\",\n    \"service\": \"test\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"test\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"test\",\n    \"apiPattern\": \"test\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"TEST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"moderate-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/webhook/repo_update.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/webhook/space_find_execution.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"workspace\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/router/router.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"has-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \".vscode/launch.json\",\n    \"service\": \"cd\",\n    \"component\": \"config\",\n    \"language\": \"json\",\n    \"size\": \"tiny\",\n    \"type\": \"config\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"root-level\",\n    \"fileExtension\": \"config\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"no-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/space/pr_list.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"space\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/pipeline/scheduler/scheduler.go\",\n    \"service\": \"platform\",\n    \"component\": \"pipeline\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/openapi/upload.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"upload\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/usergroup/list.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/request/infra_provider.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/services/gitspaceevent/service.go\",\n    \"service\": \"platform\",\n    \"component\": \"service\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"business-logic\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/users/update_test.go\",\n    \"service\": \"test\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"test\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"test\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/import.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"import\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/services/importer/repository.go\",\n    \"service\": \"platform\",\n    \"component\": \"repository\",\n    \"language\": \"go\",\n    \"size\": \"medium\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"data-access\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"heavy-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"large-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"extremely-complex\"\n  },\n  {\n    \"path\": \"app/api/openapi/common.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/gitspace/lookup_repo.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"xlarge\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"gitspace\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/container/devcontainer_config_utils.go\",\n    \"service\": \"platform\",\n    \"component\": \"utils\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"config\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"utility\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"moderate-exports\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"very-complex\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/get_commit.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/space/label_define.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/scm/scm_listing_provider.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \".testapi/space.http\",\n    \"service\": \"ci\",\n    \"component\": \"core\",\n    \"language\": \"other\",\n    \"size\": \"tiny\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"workspace\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"root-level\",\n    \"fileExtension\": \".http\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"no-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"trivial\"\n  },\n  {\n    \"path\": \"app/api/handler/pullreq/comment_delete.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/request/request.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/service/update_admin.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"service\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/request/auth.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"auth\",\n    \"operationType\": \"auth\",\n    \"apiPattern\": \"authentication\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/repo/label_value_list.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/middleware/nocache/nocache.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/pullreq/activity_list_test.go\",\n    \"service\": \"test\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"test\",\n    \"resourceDomain\": \"pullreq\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"test\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/utils/sort_features.go\",\n    \"service\": \"platform\",\n    \"component\": \"utils\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"shared-module\",\n    \"complexityScore\": \"very-complex\"\n  },\n  {\n    \"path\": \"app/api/controller/reposettings/general_update.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"reposettings\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/commit.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"commit\",\n    \"apiPattern\": \"git-operation\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"heavy-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/webhook/repo_find_execution.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"webhook\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/logs/tail.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"logging\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/rule_find.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/ide/jetbrains.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"large-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"very-complex\"\n  },\n  {\n    \"path\": \"app/services/gitspaceevent/handler.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"request-handler\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/pullreq/reviewer_add.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/openapi/principals.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/gitspace/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"xlarge\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"gitspace\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/reposettings/general_update.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/request/execution.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/events/rule/reader.go\",\n    \"service\": \"platform\",\n    \"component\": \"messaging\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/check/check_list.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/ide/common.go\",\n    \"service\": \"platform\",\n    \"component\": \"utils\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/events/pipeline/reader.go\",\n    \"service\": \"platform\",\n    \"component\": \"messaging\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/request/webhook.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"webhook\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"moderate-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/list_paths.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/repo/list_pipelines.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"pipeline\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/pullreq/comment_status.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/space/update.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"space\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/space/list_secrets.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/pullreq/pr_find.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/repo/codeowner_validate.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"validate\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/pipeline/converter/starlark/starlark.go\",\n    \"service\": \"platform\",\n    \"component\": \"pipeline\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/delete_branch.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/template/create.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"template\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/connector/create.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \".gitignore\",\n    \"service\": \"security\",\n    \"component\": \"core\",\n    \"language\": \"other\",\n    \"size\": \"tiny\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"git\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"root-level\",\n    \"fileExtension\": \"no-extension\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"no-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"trivial\"\n  },\n  {\n    \"path\": \"app/api/controller/space/purge.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"space\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/repo/label_define.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/pullreq/file_view_list.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"pullreq\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/git_info_refs.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/ide/vscodeweb.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"heavy-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"very-complex\"\n  },\n  {\n    \"path\": \"app/api/controller/service/create.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"service\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/openapi/plugin.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/user/delete_favorite.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/router/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"heavy-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/lfs/types.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"asset\",\n    \"resourceDomain\": \"storage\",\n    \"operationType\": \"types\",\n    \"apiPattern\": \"data-model\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"many-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/pipeline/triggerer/env.go\",\n    \"service\": \"platform\",\n    \"component\": \"pipeline\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/auth/connector.go\",\n    \"service\": \"platform\",\n    \"component\": \"model\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/orchestrator_resume.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"medium\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"large-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"very-complex\"\n  },\n  {\n    \"path\": \"app/api/controller/service/controller.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"service\",\n    \"operationType\": \"controller\",\n    \"apiPattern\": \"controller\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/repo/label_value_define.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/services/gitspace/update_config.go\",\n    \"service\": \"platform\",\n    \"component\": \"config\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"config\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/request/secret.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/pullreq/label_unassign.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/users/find_test.go\",\n    \"service\": \"test\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"test\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"test\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/pipeline/triggerer/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"pipeline\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/utils/script_templates/manage_user.sh\",\n    \"service\": \"platform\",\n    \"component\": \"utils\",\n    \"language\": \"shell\",\n    \"size\": \"small\",\n    \"type\": \"script\",\n    \"resourceDomain\": \"identity\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"shell\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"no-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"shared-module\",\n    \"complexityScore\": \"trivial\"\n  },\n  {\n    \"path\": \"app/events/gitspacedelete/events.go\",\n    \"service\": \"platform\",\n    \"component\": \"messaging\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/space/rule_list.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/lfs/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"storage\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/pipeline/controller.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"pipeline\",\n    \"operationType\": \"controller\",\n    \"apiPattern\": \"controller\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/infrastructure/trigger_infra_event.go\",\n    \"service\": \"platform\",\n    \"component\": \"messaging\",\n    \"language\": \"go\",\n    \"size\": \"medium\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"moderate-exports\",\n    \"lineCount\": \"large-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"very-complex\"\n  },\n  {\n    \"path\": \"app/api/controller/space/list_connectors.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"space\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/pipeline/commit/service.go\",\n    \"service\": \"platform\",\n    \"component\": \"service\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"business-logic\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/trigger/controller.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"trigger\",\n    \"operationType\": \"controller\",\n    \"apiPattern\": \"controller\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/services/gitspace/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/label_value_update.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/pipeline/runner/runner.go\",\n    \"service\": \"platform\",\n    \"component\": \"pipeline\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"heavy-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/types/script_template_payload.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"many-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/logs/controller.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"logging\",\n    \"operationType\": \"controller\",\n    \"apiPattern\": \"controller\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/gitspace/delete.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"rust\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"gitspace\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/request/context.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"has-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"many-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/repo/merge_check.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"merge\",\n    \"apiPattern\": \"git-operation\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/ide/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"moderate-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/request/git.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"git\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"has-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"many-exports\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/trigger/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"trigger\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/events/pipeline/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"messaging\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/utils/build_with_features.go\",\n    \"service\": \"build\",\n    \"component\": \"utils\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"shared-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/api/request/util.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"utility\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"has-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"many-exports\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"very-complex\"\n  },\n  {\n    \"path\": \"app/pipeline/triggerer/dag/dag_test.go\",\n    \"service\": \"test\",\n    \"component\": \"test\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"test\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"test\",\n    \"apiPattern\": \"test\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"TEST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"many-exports\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"very-complex\"\n  },\n  {\n    \"path\": \"app/services/gitspace/update_instance.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/auth/service_account.go\",\n    \"service\": \"platform\",\n    \"component\": \"utils\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"business-logic\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/users/delete.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"has-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/execution/controller.go\",\n    \"service\": \"platform\",\n    \"component\": \"model\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"execution\",\n    \"operationType\": \"controller\",\n    \"apiPattern\": \"controller\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/scm/scm.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/router/web_router.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/utils/download_features.go\",\n    \"service\": \"platform\",\n    \"component\": \"utils\",\n    \"language\": \"go\",\n    \"size\": \"medium\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"download\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"heavy-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"large-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"shared-module\",\n    \"complexityScore\": \"extremely-complex\"\n  },\n  {\n    \"path\": \"app/services/importer/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/secret/find.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/events/pullreq/events_reviewer.go\",\n    \"service\": \"platform\",\n    \"component\": \"messaging\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"review\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/pullreq/merge.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"merge\",\n    \"apiPattern\": \"git-operation\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/pipeline/scheduler/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"pipeline\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/usererror/translate.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"very-complex\"\n  },\n  {\n    \"path\": \"app/events/user/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"messaging\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/events/pullreq/events_label_assigned.go\",\n    \"service\": \"platform\",\n    \"component\": \"messaging\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/pullreq/label_list.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/logs/find.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/execution/list.go\",\n    \"service\": \"platform\",\n    \"component\": \"cli\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"execution\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/ide/vscode.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/services/codeowners/service_test.go\",\n    \"service\": \"test\",\n    \"component\": \"service\",\n    \"language\": \"go\",\n    \"size\": \"medium\",\n    \"type\": \"test\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"test\",\n    \"apiPattern\": \"test\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"TEST\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"huge-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/user/register.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"user\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/infrastructure/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/repo/content_paths_details.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/space/create.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/repo/label_find.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/paths/paths_test.go\",\n    \"service\": \"test\",\n    \"component\": \"test\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"test\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"test\",\n    \"apiPattern\": \"test\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"TEST\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/user/publickey_delete.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"user\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/trigger/common.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"trigger\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/webhook/repo_list.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"webhook\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/pullreq/pr_find.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"pullreq\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/check/check_list.go\",\n    \"service\": \"platform\",\n    \"component\": \"ui\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"validation\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/space/controller.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"space\",\n    \"operationType\": \"controller\",\n    \"apiPattern\": \"controller\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"heavy-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/webhook/repo_delete.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"webhook\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/services/gitspaceoperationsevent/handler.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"request-handler\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/system/list_config.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"config\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/openapi/connector.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/pullreq/suggestions.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"pullreq\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"has-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/space/rule_update.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/pullreq/pr_state.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"pullrequest\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/events/gitspaceinfra/reporter.go\",\n    \"service\": \"platform\",\n    \"component\": \"repository\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/ide/media/vscodeweb/pwa-icon-512.png\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"other\",\n    \"size\": \"tiny\",\n    \"type\": \"asset\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"deep\",\n    \"fileExtension\": \".png\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"no-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"trivial\"\n  },\n  {\n    \"path\": \"app/pipeline/converter/converter.go\",\n    \"service\": \"platform\",\n    \"component\": \"pipeline\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/pullreq/comment_apply_suggestions.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"medium\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"pullreq\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"heavy-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"large-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"very-complex\"\n  },\n  {\n    \"path\": \"app/router/web.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/repo/import_progress.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"import\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"Dockerfile\",\n    \"service\": \"ff\",\n    \"component\": \"core\",\n    \"language\": \"docker\",\n    \"size\": \"small\",\n    \"type\": \"build\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"root-level\",\n    \"fileExtension\": \"no-extension\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"no-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"trivial\"\n  },\n  {\n    \"path\": \"app/api/handler/serviceaccount/create.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/migrate/label.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/pipeline/resolver/manager.go\",\n    \"service\": \"platform\",\n    \"component\": \"service\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"business-logic\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"very-complex\"\n  },\n  {\n    \"path\": \"app/pipeline/converter/jsonnet/jsonnet.go\",\n    \"service\": \"platform\",\n    \"component\": \"pipeline\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/pullreq/comment_delete.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"pullreq\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/pipeline/commit/gitness.go\",\n    \"service\": \"platform\",\n    \"component\": \"pipeline\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"git\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/space/purge.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/template/find.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"template\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/gitspace/controller.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"python\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"gitspace\",\n    \"operationType\": \"controller\",\n    \"apiPattern\": \"controller\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/repo/import.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"import\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/service/list.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"service\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/services/codecomments/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/webhook/repo_find.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/auth/authz/membership.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"very-complex\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/update_public_access.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/events/gitspace/category.go\",\n    \"service\": \"platform\",\n    \"component\": \"messaging\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/request/check.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/space/label_value_list.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/principal/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"identity\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/system/controller.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"system\",\n    \"operationType\": \"controller\",\n    \"apiPattern\": \"controller\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/webhook/space_update.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"webhook\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/runarg/runArgs.yaml\",\n    \"service\": \"platform\",\n    \"component\": \"config\",\n    \"language\": \"yaml\",\n    \"size\": \"medium\",\n    \"type\": \"config\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"config\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"huge-file\",\n    \"commentDensity\": \"no-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/system/health.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"has-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/utils/user.go\",\n    \"service\": \"platform\",\n    \"component\": \"utils\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"identity\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"shared-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/template/create.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/template/delete.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"template\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/pullreq/revert.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/check/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"ui\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"validation\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/space/label_list.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"space\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/utils/script_template.go\",\n    \"service\": \"platform\",\n    \"component\": \"utils\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"shared-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/gitspace/events.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"large\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"gitspace\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/repo/purge.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/repo/rule_update.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/space/label_value_update.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/usergroup/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"usergroup\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/template/find.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/services/gitspacedeleteevent/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/rule_update.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/repo/create.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/space/label_value_update.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"space\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/pullreq/file_view_add.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"pullreq\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/plugin/list.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"plugin\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/pullreq/pr_list.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"pullreq\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/get_branch.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/repo/label_delete.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/events/gitspaceinfra/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"messaging\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/repo/create_branch.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/auth/authz/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/gitspace/action.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"typescript\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"gitspace\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/api/openapi/account.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/events/gitspaceinfra/events.go\",\n    \"service\": \"platform\",\n    \"component\": \"messaging\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/events/pullreq/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"messaging\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/request/principal.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"many-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/events/gitspaceinfra/category.go\",\n    \"service\": \"platform\",\n    \"component\": \"messaging\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/platformconnector/platformconnector.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/space/list_repositories.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"space\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/execution/delete.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/events/user/reporter.go\",\n    \"service\": \"platform\",\n    \"component\": \"repository\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/space/move.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/router/api.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"medium\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"heavy-imports\",\n    \"exportCount\": \"many-exports\",\n    \"lineCount\": \"huge-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/githook/pre_receive.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"java\",\n    \"size\": \"medium\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"webhook\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"large-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"very-complex\"\n  },\n  {\n    \"path\": \"app/api/render/render.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"has-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"moderate-exports\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/space/pr_count.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"space\",\n    \"operationType\": \"pullrequest\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/check.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/ide/factory.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/middleware/principal/principal.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/request/archive_test.go\",\n    \"service\": \"test\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"test\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"test\",\n    \"apiPattern\": \"test\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"TEST\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/repo/update.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/space/usage.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"space\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/pullreq/pr_diff.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"pullreq\",\n    \"operationType\": \"diff\",\n    \"apiPattern\": \"git-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/repo/get_commit.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/label_update.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/space/label_save.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/reposettings/controller.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"reposettings\",\n    \"operationType\": \"controller\",\n    \"apiPattern\": \"controller\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/container/response/delete.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/space/rule_find.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/execution/list.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/pipeline/converter/starlark/write.go\",\n    \"service\": \"platform\",\n    \"component\": \"pipeline\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"very-complex\"\n  },\n  {\n    \"path\": \"app/api/handler/users/create.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"has-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/container/runarg_utils.go\",\n    \"service\": \"platform\",\n    \"component\": \"utils\",\n    \"language\": \"go\",\n    \"size\": \"medium\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"utility\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"large-file\",\n    \"commentDensity\": \"minimal-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"extremely-complex\"\n  },\n  {\n    \"path\": \"app/api/controller/infraprovider/delete_config.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"asset\",\n    \"resourceDomain\": \"infrastructure\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/jwt/jwt.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"many-exports\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/space/membership_add.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/repo/pipeline_generate.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"pipeline\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/space/label_update.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/trigger/create.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/pipeline/manager/setup.go\",\n    \"service\": \"platform\",\n    \"component\": \"pipeline\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/squash.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/pullreq/branch_change_target.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"branch\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PATCH\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/repo/move.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/container/container_orchestrator.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/events/gitspacedelete/reader.go\",\n    \"service\": \"platform\",\n    \"component\": \"messaging\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/cron/nightly.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"has-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/upload/upload.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"upload\",\n    \"operationType\": \"upload\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/pipeline/converter/service.go\",\n    \"service\": \"platform\",\n    \"component\": \"service\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"business-logic\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/services/gitspacedeleteevent/handler.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"request-handler\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/router/router_test.go\",\n    \"service\": \"test\",\n    \"component\": \"test\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"test\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"test\",\n    \"apiPattern\": \"test\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"TEST\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/connector/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"ui\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"connector\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/reposettings/general_find.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"reposettings\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/request/context_test.go\",\n    \"service\": \"test\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"test\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"test\",\n    \"apiPattern\": \"test\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"TEST\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/usererror/usererror_test.go\",\n    \"service\": \"test\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"test\",\n    \"resourceDomain\": \"identity\",\n    \"operationType\": \"error\",\n    \"apiPattern\": \"test\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"INTERNAL\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/webhook/repo_retrigger_execution.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/migrate/controller.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"migration\",\n    \"operationType\": \"controller\",\n    \"apiPattern\": \"controller\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"heavy-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/auth/repo.go\",\n    \"service\": \"platform\",\n    \"component\": \"ui\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/repo/update_public_access.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/pullreq/review_submit.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"submit\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/principal/types.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"identity\",\n    \"operationType\": \"types\",\n    \"apiPattern\": \"data-model\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/webhook/space_create.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"webhook\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/ide/media/vscodeweb/favicon.svg\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"other\",\n    \"size\": \"small\",\n    \"type\": \"asset\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"deep\",\n    \"fileExtension\": \"markup\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"no-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"trivial\"\n  },\n  {\n    \"path\": \"app/api/controller/githook/post_receive.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"rust\",\n    \"size\": \"medium\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"webhook\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"heavy-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"large-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"extremely-complex\"\n  },\n  {\n    \"path\": \"app/api/openapi/webhook.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"medium\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"webhook\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"large-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/connector/scm/scm.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/middleware/address/address.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"has-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/services/cleanup/deleted_repos.go\",\n    \"service\": \"platform\",\n    \"component\": \"repository\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"README.md\",\n    \"service\": \"ff\",\n    \"component\": \"core\",\n    \"language\": \"markdown\",\n    \"size\": \"small\",\n    \"type\": \"docs\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"root-level\",\n    \"fileExtension\": \"documentation\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"no-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"trivial\"\n  },\n  {\n    \"path\": \"app/api/controller/space/label_find.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"space\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/openapi/system.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/auth/auth.go\",\n    \"service\": \"platform\",\n    \"component\": \"service\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"auth\",\n    \"operationType\": \"auth\",\n    \"apiPattern\": \"authentication\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"moderate-exports\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/repo/rule_find.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/events/gitspaceinfra/reader.go\",\n    \"service\": \"platform\",\n    \"component\": \"messaging\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/webhook/space_delete.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"webhook\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/system/version.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"has-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/repo/rule_delete.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/pipeline/manager/manager.go\",\n    \"service\": \"platform\",\n    \"component\": \"service\",\n    \"language\": \"go\",\n    \"size\": \"medium\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"business-logic\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"heavy-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"large-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"very-complex\"\n  },\n  {\n    \"path\": \"app/api/controller/space/export.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"space\",\n    \"operationType\": \"export\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/connector/connector.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \".local.env\",\n    \"service\": \"cd\",\n    \"component\": \"core\",\n    \"language\": \"other\",\n    \"size\": \"tiny\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"root-level\",\n    \"fileExtension\": \".env\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"no-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"trivial\"\n  },\n  {\n    \"path\": \"app/api/handler/gitspace/lookup_repo.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/scm/types.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"types\",\n    \"apiPattern\": \"data-model\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/space/membership_update.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/serviceaccount/find.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/pullreq/label_assign.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/infraprovider/create_config.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"xlarge\",\n    \"type\": \"config\",\n    \"resourceDomain\": \"infrastructure\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/space/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"space\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"heavy-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/auth/secret.go\",\n    \"service\": \"platform\",\n    \"component\": \"service\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/utils/environment.go\",\n    \"service\": \"platform\",\n    \"component\": \"utils\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"shared-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/events/repo/category.go\",\n    \"service\": \"platform\",\n    \"component\": \"messaging\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/gitspace/events.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/lfs/transfer.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/webhook/repo_delete.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/logutil/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/container/types.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"types\",\n    \"apiPattern\": \"data-model\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/user/delete_token.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"user\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/pullreq/reviewer_list_combined.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/gitspace/logs_stream.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"large\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"gitspace\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/pullreq/label_assign.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"pullreq\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/pullreq/pr_metadata.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"pullrequest\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/webhook/space_find_execution.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"webhook\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/lfs/download.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"download\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/system/health_test.go\",\n    \"service\": \"test\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"test\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"test\",\n    \"apiPattern\": \"test\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"TEST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/scm/gitness_scm.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"git\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"heavy-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/services/infraprovider/create_template.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/services/gitspaceevent/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/pipeline/runner/poller.go\",\n    \"service\": \"platform\",\n    \"component\": \"pipeline\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/middleware/encode/encode.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"has-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"very-complex\"\n  },\n  {\n    \"path\": \"app/connector/scm/provider.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/template/validate.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"template\",\n    \"operationType\": \"validate\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/repo/list_commit_tags.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/events/gitspaceoperations/reporter.go\",\n    \"service\": \"platform\",\n    \"component\": \"repository\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/space/label_update.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"space\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/migrate/update_state.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"migration\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/serviceaccount/delete_token.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"serviceaccount\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/utils/script_templates/install_tools_vs_code_web.sh\",\n    \"service\": \"tools\",\n    \"component\": \"utils\",\n    \"language\": \"shell\",\n    \"size\": \"small\",\n    \"type\": \"script\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"shell\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"no-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"shared-module\",\n    \"complexityScore\": \"trivial\"\n  },\n  {\n    \"path\": \"app/gitspace/secret/enum/types.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"types\",\n    \"apiPattern\": \"data-model\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/execution/cancel.go\",\n    \"service\": \"platform\",\n    \"component\": \"service\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"execution\",\n    \"operationType\": \"cancel\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/webhook/repo_list_executions.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"webhook\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/gitspace/list_all.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"xlarge\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"gitspace\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/repo/blame.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"blame\",\n    \"apiPattern\": \"git-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/pullreq/codeowner.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"pullreq\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/connector/delete.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/auth/authz/authz.go\",\n    \"service\": \"platform\",\n    \"component\": \"security\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"auth\",\n    \"operationType\": \"auth\",\n    \"apiPattern\": \"authentication\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/repo/delete_tag.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/repo/find.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/utils/script_templates/set_env.sh\",\n    \"service\": \"platform\",\n    \"component\": \"utils\",\n    \"language\": \"shell\",\n    \"size\": \"tiny\",\n    \"type\": \"script\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"shell\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"no-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"shared-module\",\n    \"complexityScore\": \"trivial\"\n  },\n  {\n    \"path\": \"app/api/controller/space/list_secrets.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"space\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/execution/find.go\",\n    \"service\": \"platform\",\n    \"component\": \"repository\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"execution\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/router/git.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"git\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"heavy-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/services/codecomments/migrator.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"has-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"very-complex\"\n  },\n  {\n    \"path\": \"app/api/controller/gitspace/update.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"large\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"gitspace\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/render/sse.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/migrate/label.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"migration\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/openapi/gitspace.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"medium\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"git\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/check/check_recent.go\",\n    \"service\": \"platform\",\n    \"component\": \"service\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"validation\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/migrate/pullreq.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"migration\",\n    \"operationType\": \"pullrequest\",\n    \"apiPattern\": \"git-operation\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/user/publickey_list.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/events/gitspacedelete/category.go\",\n    \"service\": \"platform\",\n    \"component\": \"messaging\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/user/logout.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"user\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/pipeline/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"pipeline\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/services/cleanup/webhook_executions.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"webhook\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/pullreq/reviewer_delete.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/events/pipeline/events.go\",\n    \"service\": \"platform\",\n    \"component\": \"messaging\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/space/find.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"space\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/gitspace/find.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/create_branch.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/services/exporter/harness_code_client.go\",\n    \"service\": \"platform\",\n    \"component\": \"client\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"client\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"very-complex\"\n  },\n  {\n    \"path\": \"app/api/handler/repo/list_branches.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/space/membership_add.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"space\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/trigger/create.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"trigger\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/migrate/rules.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/render/render_test.go\",\n    \"service\": \"test\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"test\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"test\",\n    \"apiPattern\": \"test\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"TEST\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"many-exports\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/services/cleanup/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/services/cleanup/tokens.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/label_define.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/utils/tools.go\",\n    \"service\": \"tools\",\n    \"component\": \"utils\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"moderate-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"shared-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/gitspace/create.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/space/label_save.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"space\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/rule_create.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/events/gitspace/events.go\",\n    \"service\": \"platform\",\n    \"component\": \"messaging\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/template/update.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"template\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \".testapi/http-client.env.json\",\n    \"service\": \"ff\",\n    \"component\": \"config\",\n    \"language\": \"json\",\n    \"size\": \"tiny\",\n    \"type\": \"config\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"client\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"root-level\",\n    \"fileExtension\": \"config\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"no-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/events/git/reporter.go\",\n    \"service\": \"platform\",\n    \"component\": \"repository\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/webhook/space_retrigger_execution.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"workspace\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/label_value_list.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/pipeline/canceler/canceler.go\",\n    \"service\": \"platform\",\n    \"component\": \"pipeline\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"cancel\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \".testapi/diff.http\",\n    \"service\": \"ce\",\n    \"component\": \"core\",\n    \"language\": \"other\",\n    \"size\": \"tiny\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"diff\",\n    \"apiPattern\": \"git-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"root-level\",\n    \"fileExtension\": \".http\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"no-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"trivial\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/utils/script_templates/setup_ssh_server.sh\",\n    \"service\": \"platform\",\n    \"component\": \"utils\",\n    \"language\": \"shell\",\n    \"size\": \"small\",\n    \"type\": \"script\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"shell\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"no-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"shared-module\",\n    \"complexityScore\": \"trivial\"\n  },\n  {\n    \"path\": \"app/pipeline/commit/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"pipeline\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/webhook/repo_list.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/account/cookie.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/space/rule_delete.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/repo/restore.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/space/list_connectors.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/lfs/controller.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"database\",\n    \"resourceDomain\": \"storage\",\n    \"operationType\": \"controller\",\n    \"apiPattern\": \"controller\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/repo/get_branch.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/principal/find_by_email.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/principal/list.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"identity\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/middleware/authn/authn.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"auth\",\n    \"operationType\": \"auth\",\n    \"apiPattern\": \"authentication\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/request/time.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/services/importer/id.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/users/list.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"has-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/config/url.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"config\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"config-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/scm/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"moderate-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/repo/git_info_refs.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"git\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/pullreq/pr_create.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"medium\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"pullreq\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"heavy-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"huge-file\",\n    \"commentDensity\": \"minimal-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"extremely-complex\"\n  },\n  {\n    \"path\": \"app/api/handler/user/publickey_edit.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/auth/authz/public_access.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/webhook/space_retrigger_execution.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"webhook\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/plugin/list.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/pullreq/pr_state.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"pullreq\",\n    \"operationType\": \"pullrequest\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"very-complex\"\n  },\n  {\n    \"path\": \"app/api/auth/service.go\",\n    \"service\": \"platform\",\n    \"component\": \"model\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"business-logic\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/infrastructure/infra_post_exec.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/openapi/resource.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/request/archive.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"has-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/pullreq/usergroup_reviewer_delete.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"pullreq\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/githook/env.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/label_delete.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/request/common.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"many-exports\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/pipeline/triggerer/skip.go\",\n    \"service\": \"platform\",\n    \"component\": \"pipeline\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/plugin/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"plugin\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/utils/script_templates/install_git.sh\",\n    \"service\": \"platform\",\n    \"component\": \"utils\",\n    \"language\": \"shell\",\n    \"size\": \"small\",\n    \"type\": \"script\",\n    \"resourceDomain\": \"git\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"shell\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"no-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"shared-module\",\n    \"complexityScore\": \"trivial\"\n  },\n  {\n    \"path\": \"app/api/controller/pullreq/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"pullreq\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"heavy-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/openapi/user.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"medium\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"identity\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/request/pullreq.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"pullreq\",\n    \"operationType\": \"pullrequest\",\n    \"apiPattern\": \"git-operation\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"many-exports\",\n    \"lineCount\": \"large-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"very-complex\"\n  },\n  {\n    \"path\": \"app/api/openapi/users.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"identity\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/repo/default_branch.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"branch\",\n    \"apiPattern\": \"git-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PATCH\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/user/membership_spaces.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"user\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/pullreq/pr_diff.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"diff\",\n    \"apiPattern\": \"git-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/space/import.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"space\",\n    \"operationType\": \"import\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/services/importer/pipelines.go\",\n    \"service\": \"platform\",\n    \"component\": \"pipeline\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"pipeline\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"heavy-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/events/rule/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"messaging\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/keywordsearch/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"asset\",\n    \"resourceDomain\": \"search\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/events/pipeline/execute.go\",\n    \"service\": \"platform\",\n    \"component\": \"messaging\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/events/gitspace/reader.go\",\n    \"service\": \"platform\",\n    \"component\": \"messaging\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/pipeline/scheduler/queue.go\",\n    \"service\": \"platform\",\n    \"component\": \"messaging\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"large-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"extremely-complex\"\n  },\n  {\n    \"path\": \"app/api/controller/migrate/error.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"migration\",\n    \"operationType\": \"error\",\n    \"apiPattern\": \"error-handling\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"INTERNAL\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/user/membership_spaces.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"workspace\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/space/rule_find.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"space\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/user/login.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"user\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/git_service_pack.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"business-logic\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/serviceaccount/delete.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/gitspace/update.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/secret/delete.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"secret\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/githook/print.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"kotlin\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"webhook\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/services/gitspaceinfraevent/service.go\",\n    \"service\": \"platform\",\n    \"component\": \"service\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"business-logic\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/openapi/openapi.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"has-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/import_progress.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"import\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/platformconnector/gitnessplatformconnector.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"git\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/repo/label_value_update.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/router/logging.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/githook/pre_receive.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/request/connector.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/webhook/repo_find_execution.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/lfs/upload.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"storage\",\n    \"operationType\": \"upload\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/events/rule/events.go\",\n    \"service\": \"platform\",\n    \"component\": \"messaging\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/repo/summary.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/logs/find.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"logging\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/pullreq/pr_update.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/runarg/provider.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/service/update.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"service\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/user/list_tokens.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"user\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/pullreq/branch_restore.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"branch\",\n    \"apiPattern\": \"git-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PATCH\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/container/response/status.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/space/label_find.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/events/pipeline/reporter.go\",\n    \"service\": \"platform\",\n    \"component\": \"repository\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/serviceaccount/list_token.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"serviceaccount\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/upload/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"upload\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/pullreq/pr_branch_candidates.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"pullreq\",\n    \"operationType\": \"branch\",\n    \"apiPattern\": \"git-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PATCH\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/repo/list_service_accounts.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"business-logic\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/repo/squash.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/label_find.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/logs/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"logging\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/usergroup/list.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"usergroup\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/middleware/logging/logging.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/repo/label_save.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"Dockerfile.uiv2\",\n    \"service\": \"security\",\n    \"component\": \"core\",\n    \"language\": \"other\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"root-level\",\n    \"fileExtension\": \".uiv2\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"no-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"trivial\"\n  },\n  {\n    \"path\": \"app/events/pipeline/update.go\",\n    \"service\": \"platform\",\n    \"component\": \"messaging\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/trigger/delete.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"trigger\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/trigger/list.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/reposettings/security_find.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/server/server_test.go\",\n    \"service\": \"test\",\n    \"component\": \"test\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"test\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"test\",\n    \"apiPattern\": \"test\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"TEST\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/reposettings/security_update.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/space/update_public_access.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/connector/controller.go\",\n    \"service\": \"platform\",\n    \"component\": \"service\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"connector\",\n    \"operationType\": \"controller\",\n    \"apiPattern\": \"controller\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/connector/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/events/rule/reporter.go\",\n    \"service\": \"platform\",\n    \"component\": \"repository\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/services/branch/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/space/label_value_list.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"space\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/serviceaccount/create_token.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/cron/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/purge.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/webhook/repo_create.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/auth/template.go\",\n    \"service\": \"platform\",\n    \"component\": \"repository\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/render/header_test.go\",\n    \"service\": \"test\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"test\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"test\",\n    \"apiPattern\": \"test\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"TEST\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/orchestrator_trigger.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"medium\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"heavy-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"large-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"extremely-complex\"\n  },\n  {\n    \"path\": \"app/api/handler/user/find.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/pipeline/triggerer/dag/dag.go\",\n    \"service\": \"platform\",\n    \"component\": \"pipeline\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"has-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/webhook/controller.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"webhook\",\n    \"operationType\": \"controller\",\n    \"apiPattern\": \"controller\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/execution/create.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/reposettings/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"reposettings\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/githook/post_receive.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/infraprovider/create.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/gitspace/find_all.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"large\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"gitspace\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/users/update.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"has-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/pipeline/scheduler/canceler.go\",\n    \"service\": \"platform\",\n    \"component\": \"pipeline\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"cancel\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/trigger/list.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"trigger\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/pullreq/label_unassign.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"pullreq\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/githook/git.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"kotlin\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"webhook\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/openapi/openapi_test.go\",\n    \"service\": \"test\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"test\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"test\",\n    \"apiPattern\": \"test\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"TEST\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/space/list_service_accounts.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"business-logic\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/connector/find.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/connector/create.go\",\n    \"service\": \"platform\",\n    \"component\": \"model\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"connector\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/openapi/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/migrate/create_repo.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/request/space.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"workspace\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"moderate-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/services/gitspace/gitspace.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"git\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \".testapi/login.http\",\n    \"service\": \"security\",\n    \"component\": \"core\",\n    \"language\": \"other\",\n    \"size\": \"tiny\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"root-level\",\n    \"fileExtension\": \".http\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"no-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"trivial\"\n  },\n  {\n    \"path\": \"app/events/gitspaceoperations/reader.go\",\n    \"service\": \"platform\",\n    \"component\": \"messaging\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/openapi/template.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/no_op_checks.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/pullreq/comment_status.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"pullreq\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/events/rule/category.go\",\n    \"service\": \"platform\",\n    \"component\": \"messaging\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/pullreq/pr_update.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"pullreq\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/events/repo/events.go\",\n    \"service\": \"platform\",\n    \"component\": \"messaging\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/webhook/space_list_executions.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"webhook\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/webhook/preprocessor.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"webhook\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/webhook/space_delete.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"workspace\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/pullreq/usergroup_reviewer_add.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"identity\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/server/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/space/export_progress.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"export\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/runarg/resolver.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/utils/script_templates/install_vscode_web.sh\",\n    \"service\": \"platform\",\n    \"component\": \"utils\",\n    \"language\": \"shell\",\n    \"size\": \"tiny\",\n    \"type\": \"script\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"shell\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"no-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"shared-module\",\n    \"complexityScore\": \"trivial\"\n  },\n  {\n    \"path\": \"app/events/pullreq/events_code_comment_status.go\",\n    \"service\": \"platform\",\n    \"component\": \"messaging\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/list_pipelines.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/router/interface.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/usererror/usererror.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"identity\",\n    \"operationType\": \"error\",\n    \"apiPattern\": \"error-handling\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"INTERNAL\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"has-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"many-exports\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/space/restore.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"space\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"very-complex\"\n  },\n  {\n    \"path\": \"app/api/request/gitspace.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"git\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"moderate-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/infraprovider/create_resources.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"database\",\n    \"resourceDomain\": \"infrastructure\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/space/events.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/space/list_infraproviders.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/events/user/events_user.go\",\n    \"service\": \"platform\",\n    \"component\": \"messaging\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"identity\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"moderate-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/repo/create_commit_tag.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/auth/authz/membership_cache.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/ide/script/find_vscode_web_path.sh\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"shell\",\n    \"size\": \"tiny\",\n    \"type\": \"script\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"shell\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"no-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"trivial\"\n  },\n  {\n    \"path\": \"app/api/handler/reposettings/general_find.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/webhook/repo_retrigger_execution.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"webhook\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/limiter/gitspace.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"ratelimit\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/label_value_delete.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/events/gitspacedelete/reporter.go\",\n    \"service\": \"platform\",\n    \"component\": \"repository\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/request/token.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/scm/scm_auth_file_provider.go\",\n    \"service\": \"platform\",\n    \"component\": \"security\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"auth\",\n    \"operationType\": \"auth\",\n    \"apiPattern\": \"authentication\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/container/response/start.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/request/template.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/user/find_email.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"user\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/helper.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"utility\",\n    \"apiPattern\": \"utility\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"INTERNAL\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"moderate-exports\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/space/helper.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"space\",\n    \"operationType\": \"utility\",\n    \"apiPattern\": \"utility\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"INTERNAL\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/pullreq/branch_delete.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/list_branches.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"very-complex\"\n  },\n  {\n    \"path\": \"app/services/gitspaceservice/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/pipeline/delete.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/account/login_test.go\",\n    \"service\": \"test\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"test\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"test\",\n    \"apiPattern\": \"test\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"TEST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"moderate-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/middleware/authz/authz.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"auth\",\n    \"operationType\": \"auth\",\n    \"apiPattern\": \"authentication\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/template/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"template\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/pipeline/resolver/resolve.go\",\n    \"service\": \"platform\",\n    \"component\": \"pipeline\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/secret/create.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/serviceaccount/delete_token.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/events/pullreq/events.go\",\n    \"service\": \"platform\",\n    \"component\": \"messaging\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/auth/user.go\",\n    \"service\": \"platform\",\n    \"component\": \"cli\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"identity\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \".dockerignore\",\n    \"service\": \"ci\",\n    \"component\": \"core\",\n    \"language\": \"other\",\n    \"size\": \"tiny\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"root-level\",\n    \"fileExtension\": \"no-extension\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"no-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"trivial\"\n  },\n  {\n    \"path\": \"app/api/controller/connector/find.go\",\n    \"service\": \"platform\",\n    \"component\": \"test\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"connector\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/secret/password_resolver.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/pipeline/manager/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"pipeline\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/user/list.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"user\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/secret/find.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"secret\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/openapi/check.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/pullreq/file_view_add.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/pipeline/converter/starlark/args.go\",\n    \"service\": \"platform\",\n    \"component\": \"pipeline\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/lfs/transfer.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"database\",\n    \"resourceDomain\": \"storage\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/pullreq/comment_update.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/webhook/space_find.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"workspace\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/trigger/find.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"trigger\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/ide/ide.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/migrate/update_state.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/migrate/webhooks.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"migration\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/request/repo.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"moderate-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/secret/controller.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"secret\",\n    \"operationType\": \"controller\",\n    \"apiPattern\": \"controller\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/reposettings/security_find.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"reposettings\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/repo/content_get.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/space/pr_list.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/repo/raw.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/user/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"user\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/lfs/errors.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"storage\",\n    \"operationType\": \"error\",\n    \"apiPattern\": \"error-handling\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"INTERNAL\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/pipeline/manager/client.go\",\n    \"service\": \"platform\",\n    \"component\": \"client\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"client\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/utils/script_templates/setup_jetbrains_plugins.sh\",\n    \"service\": \"platform\",\n    \"component\": \"utils\",\n    \"language\": \"shell\",\n    \"size\": \"tiny\",\n    \"type\": \"script\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"shell\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"no-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"shared-module\",\n    \"complexityScore\": \"trivial\"\n  },\n  {\n    \"path\": \"app/events/user/category.go\",\n    \"service\": \"platform\",\n    \"component\": \"messaging\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/events/repo/reader.go\",\n    \"service\": \"platform\",\n    \"component\": \"messaging\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/repo/rule_create.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/migrate/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"migration\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/label_list.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/pullreq/comment_create.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/space/events.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"space\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/openapi/space.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"medium\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"workspace\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"huge-file\",\n    \"commentDensity\": \"minimal-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/services/gitspace/action_cleanup.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/space/update_public_access.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"space\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/template/controller.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"template\",\n    \"operationType\": \"controller\",\n    \"apiPattern\": \"controller\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/serviceaccount/controller.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"serviceaccount\",\n    \"operationType\": \"controller\",\n    \"apiPattern\": \"controller\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/utils/script_templates/install_tools_vs_code.sh\",\n    \"service\": \"tools\",\n    \"component\": \"utils\",\n    \"language\": \"shell\",\n    \"size\": \"tiny\",\n    \"type\": \"script\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"shell\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"no-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"shared-module\",\n    \"complexityScore\": \"trivial\"\n  },\n  {\n    \"path\": \"app/api/controller/user/create_favorite.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"user\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/githook/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"java\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"webhook\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"moderate-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/list_commits.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/utils/script_templates/supported_os_distribution.sh\",\n    \"service\": \"platform\",\n    \"component\": \"utils\",\n    \"language\": \"shell\",\n    \"size\": \"tiny\",\n    \"type\": \"script\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"shell\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"no-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"shared-module\",\n    \"complexityScore\": \"trivial\"\n  },\n  {\n    \"path\": \"app/api/handler/infraprovider/find.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/summary.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/principal/find.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"identity\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/pipeline/file/gitness.go\",\n    \"service\": \"platform\",\n    \"component\": \"pipeline\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"git\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/events/gitspacedelete/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"messaging\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/repo/commit.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"commit\",\n    \"apiPattern\": \"git-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/migrate/rules.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"migration\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/default_branch.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"branch\",\n    \"apiPattern\": \"git-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PATCH\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/auth/anonymous.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/principal/find.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/services/gitspaceoperationsevent/service.go\",\n    \"service\": \"platform\",\n    \"component\": \"service\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"business-logic\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/pullreq/label_list.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"pullreq\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/gitspace/action.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/auth/authn/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/cron/nightly_test.go\",\n    \"service\": \"test\",\n    \"component\": \"test\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"test\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"test\",\n    \"apiPattern\": \"test\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"TEST\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/auth/gitspace.go\",\n    \"service\": \"platform\",\n    \"component\": \"utils\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"git\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/content_get.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"many-exports\",\n    \"lineCount\": \"large-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"very-complex\"\n  },\n  {\n    \"path\": \"app/api/render/platform/render.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/space/list_gitspaces.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"space\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/githook/update.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/render/util.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"utility\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"has-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/execution/find.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/utils/script_templates/setup_jetbrains_ide.sh\",\n    \"service\": \"platform\",\n    \"component\": \"utils\",\n    \"language\": \"shell\",\n    \"size\": \"small\",\n    \"type\": \"script\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"shell\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"no-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"shared-module\",\n    \"complexityScore\": \"trivial\"\n  },\n  {\n    \"path\": \"app/api/controller/webhook/space_list.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"webhook\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/space/label_value_define.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"space\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/secret/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"secret\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/pullreq/file_view_delete.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/list_commit_tags.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/connector/test.go\",\n    \"service\": \"test\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"test\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"test\",\n    \"apiPattern\": \"test\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"TEST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/pipeline/find.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"pipeline\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/pipeline/manager/updater.go\",\n    \"service\": \"platform\",\n    \"component\": \"pipeline\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/space/list.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/connector/test.go\",\n    \"service\": \"test\",\n    \"component\": \"repository\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"test\",\n    \"resourceDomain\": \"connector\",\n    \"operationType\": \"test\",\n    \"apiPattern\": \"test\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"TEST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/check/check_report.go\",\n    \"service\": \"platform\",\n    \"component\": \"utils\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"validation\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"has-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"very-complex\"\n  },\n  {\n    \"path\": \"app/api/handler/space/list_repos.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/repo/rebase.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/lfs/authenticate.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"storage\",\n    \"operationType\": \"auth\",\n    \"apiPattern\": \"authentication\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/pullreq/branch_delete.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"pullreq\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/space/pr_count.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"pullrequest\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/repo/list_commits.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/repo/archive.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/serviceaccount/create.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"serviceaccount\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/secret/update.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"secret\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/services/gitspace/actions.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"very-complex\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/utils/secret.go\",\n    \"service\": \"platform\",\n    \"component\": \"utils\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"shared-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/events/repo/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"messaging\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/space/restore.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/paths/paths.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"has-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"moderate-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/events/pullreq/events_branch.go\",\n    \"service\": \"platform\",\n    \"component\": \"messaging\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"branch\",\n    \"apiPattern\": \"git-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PATCH\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"moderate-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/utils/script/os_info.sh\",\n    \"service\": \"platform\",\n    \"component\": \"utils\",\n    \"language\": \"shell\",\n    \"size\": \"tiny\",\n    \"type\": \"script\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"shell\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"no-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"shared-module\",\n    \"complexityScore\": \"trivial\"\n  },\n  {\n    \"path\": \"app/api/controller/serviceaccount/delete.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"serviceaccount\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/lfs/upload.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"upload\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/events/gitspace/reporter.go\",\n    \"service\": \"platform\",\n    \"component\": \"repository\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/auth/metadata.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"moderate-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/space/membership_list.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"space\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/pullreq/usergroup_reviewer_add.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"pullreq\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/trigger/find.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/infraprovider/find.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"infrastructure\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/webhook/space_list_executions.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"workspace\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/render/util_test.go\",\n    \"service\": \"test\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"test\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"test\",\n    \"apiPattern\": \"test\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"TEST\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/user/list_tokens.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/utils/script_templates/setup_vscode_extensions.sh\",\n    \"service\": \"platform\",\n    \"component\": \"utils\",\n    \"language\": \"shell\",\n    \"size\": \"tiny\",\n    \"type\": \"script\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"shell\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"no-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"shared-module\",\n    \"complexityScore\": \"trivial\"\n  },\n  {\n    \"path\": \"app/api/handler/logs/tail.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/pullreq/pr_commits.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"commit\",\n    \"apiPattern\": \"git-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/pullreq/branch_change_target.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"pullreq\",\n    \"operationType\": \"branch\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PATCH\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \".githooks/pre-commit\",\n    \"service\": \"ce\",\n    \"component\": \"core\",\n    \"language\": \"other\",\n    \"size\": \"tiny\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"commit\",\n    \"apiPattern\": \"git-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"root-level\",\n    \"fileExtension\": \"no-extension\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"no-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"trivial\"\n  },\n  {\n    \"path\": \"app/api/handler/space/membership_list.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/utils/script_templates/run_jetbrains_ide.sh\",\n    \"service\": \"platform\",\n    \"component\": \"utils\",\n    \"language\": \"shell\",\n    \"size\": \"small\",\n    \"type\": \"script\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"shell\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"no-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"shared-module\",\n    \"complexityScore\": \"trivial\"\n  },\n  {\n    \"path\": \"app/api/handler/secret/delete.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/space/import_repositories.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"space\",\n    \"operationType\": \"import\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/space/label_define.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"space\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/util.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"util.go\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"utility\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"many-exports\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/migrate/webhooks.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"webhook\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/scm/scm_factory.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/runarg/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/pullreq/reviewer_combined_list.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"pullreq\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/user/publickey_list.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"user\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/request/rule.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"moderate-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/services/cleanup/service.go\",\n    \"service\": \"platform\",\n    \"component\": \"service\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"business-logic\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/service/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"service\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/events/pullreq/reporter.go\",\n    \"service\": \"platform\",\n    \"component\": \"repository\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/repo/label_list.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/container/devcontainer_container_utils.go\",\n    \"service\": \"platform\",\n    \"component\": \"utils\",\n    \"language\": \"go\",\n    \"size\": \"medium\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"utility\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"heavy-imports\",\n    \"exportCount\": \"many-exports\",\n    \"lineCount\": \"huge-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"extremely-complex\"\n  },\n  {\n    \"path\": \"app/events/git/events.go\",\n    \"service\": \"platform\",\n    \"component\": \"messaging\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/request/lfs.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/rule_delete.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/space/label_list.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/space/usage.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/principal/controller.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"identity\",\n    \"operationType\": \"controller\",\n    \"apiPattern\": \"controller\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/space/membership_delete.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/codeowner_validate.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"validate\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/execution/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"ui\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"execution\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/upload/upload.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"upload\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/githook/client_rest.go\",\n    \"service\": \"platform\",\n    \"component\": \"client\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"client\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/pipeline/delete.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"pipeline\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/pipeline/triggerer/trigger.go\",\n    \"service\": \"platform\",\n    \"component\": \"pipeline\",\n    \"language\": \"go\",\n    \"size\": \"medium\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"heavy-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"large-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"extremely-complex\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/container/orchestrator_factory.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/openapi/pullreq.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"medium\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"pullreq\",\n    \"operationType\": \"pullrequest\",\n    \"apiPattern\": \"git-operation\",\n    \"apiComplexity\": \"complex\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"huge-file\",\n    \"commentDensity\": \"minimal-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/user/publickey_delete.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/events/repo/reporter.go\",\n    \"service\": \"platform\",\n    \"component\": \"repository\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/upload/download.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"download\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/repo/find_redirect.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/events/gitspaceoperations/category.go\",\n    \"service\": \"platform\",\n    \"component\": \"messaging\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/pipeline/canceler/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"pipeline\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/webhook/space_list.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"workspace\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/pullreq/review_submit.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"pullreq\",\n    \"operationType\": \"submit\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/reposettings/general.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"reposettings\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"moderate-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/space/export.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"export\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/request/membership.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"moderate-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/check/check_report_test.go\",\n    \"service\": \"test\",\n    \"component\": \"test\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"test\",\n    \"resourceDomain\": \"validation\",\n    \"operationType\": \"test\",\n    \"apiPattern\": \"test\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"TEST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/router/git_router.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"git\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/services/gitspace/find.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/api/request/git_test.go\",\n    \"service\": \"test\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"test\",\n    \"resourceDomain\": \"git\",\n    \"operationType\": \"test\",\n    \"apiPattern\": \"test\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"TEST\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/pullreq/usergroup_reviewer_delete.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"identity\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/gitspace/delete.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/events/repo/events_repo.go\",\n    \"service\": \"platform\",\n    \"component\": \"repository\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"many-exports\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/label_save.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/user/create_access_token.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"user\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/migrate/pullreq.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"pullreq\",\n    \"operationType\": \"pullrequest\",\n    \"apiPattern\": \"git-operation\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/platformconnector/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/pipeline/manager/convert.go\",\n    \"service\": \"platform\",\n    \"component\": \"pipeline\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"many-exports\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/middleware/encode/encode_test.go\",\n    \"service\": \"test\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"test\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"test\",\n    \"apiPattern\": \"test\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"TEST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"large-file\",\n    \"commentDensity\": \"minimal-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/keywordsearch/controller.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"search\",\n    \"operationType\": \"controller\",\n    \"apiPattern\": \"controller\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/render/render_error.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"error\",\n    \"apiPattern\": \"error-handling\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"INTERNAL\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"many-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/pipeline/runner/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"pipeline\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/utils/script_templates/clone_code.sh\",\n    \"service\": \"platform\",\n    \"component\": \"utils\",\n    \"language\": \"shell\",\n    \"size\": \"small\",\n    \"type\": \"script\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"shell\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"no-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"shared-module\",\n    \"complexityScore\": \"trivial\"\n  },\n  {\n    \"path\": \"app/services/gitspaceinfraevent/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/serviceaccount/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"serviceaccount\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/check/controller.go\",\n    \"service\": \"platform\",\n    \"component\": \"repository\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"validation\",\n    \"operationType\": \"controller\",\n    \"apiPattern\": \"controller\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/pullreq/comment_update.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"pullreq\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/execution/create.go\",\n    \"service\": \"platform\",\n    \"component\": \"utils\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"execution\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/services/codecomments/migrator_test.go\",\n    \"service\": \"test\",\n    \"component\": \"test\",\n    \"language\": \"go\",\n    \"size\": \"medium\",\n    \"type\": \"test\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"test\",\n    \"apiPattern\": \"test\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"TEST\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"large-file\",\n    \"commentDensity\": \"minimal-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/api/request/util_test.go\",\n    \"service\": \"test\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"test\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"test\",\n    \"apiPattern\": \"test\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"TEST\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/space/label_value_delete.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/update.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/migrate/create_repo.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"migration\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"heavy-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/pipeline/converter/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"pipeline\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/container/response/stop.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/middleware/goget/goget.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/services/gitspace/action_stop.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/execution/delete.go\",\n    \"service\": \"platform\",\n    \"component\": \"test\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"execution\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/space/export_progress.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"space\",\n    \"operationType\": \"export\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/space/rule_delete.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"space\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/controller.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"controller\",\n    \"apiPattern\": \"controller\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"heavy-imports\",\n    \"exportCount\": \"moderate-exports\",\n    \"lineCount\": \"large-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/api.go\",\n    \"service\": \"security\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/gitspace/find.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"xlarge\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"gitspace\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/user/update_admin.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/reposettings/security.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"reposettings\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"moderate-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/webhook/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"webhook\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/utils/script_templates/run_ssh_server.sh\",\n    \"service\": \"platform\",\n    \"component\": \"utils\",\n    \"language\": \"shell\",\n    \"size\": \"tiny\",\n    \"type\": \"script\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"shell\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"no-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"shared-module\",\n    \"complexityScore\": \"trivial\"\n  },\n  {\n    \"path\": \"app/gitspace/secret/resolver_factory.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"LICENSE\",\n    \"service\": \"ci\",\n    \"component\": \"core\",\n    \"language\": \"other\",\n    \"size\": \"medium\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"root-level\",\n    \"fileExtension\": \"no-extension\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"no-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"trivial\"\n  },\n  {\n    \"path\": \"app/api/request/diff.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"diff\",\n    \"apiPattern\": \"git-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/services/branch/service.go\",\n    \"service\": \"platform\",\n    \"component\": \"service\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"business-logic\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"moderate-exports\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/pipeline/file/service.go\",\n    \"service\": \"platform\",\n    \"component\": \"service\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"business-logic\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/ide/media/vscodeweb/pwa-icon.png\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"other\",\n    \"size\": \"tiny\",\n    \"type\": \"asset\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"deep\",\n    \"fileExtension\": \".png\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"no-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"trivial\"\n  },\n  {\n    \"path\": \"app/api/controller/pipeline/update.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"pipeline\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/plugin/controller.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"plugin\",\n    \"operationType\": \"controller\",\n    \"apiPattern\": \"controller\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \".engops/pr_source_code_changes.sh\",\n    \"service\": \"cd\",\n    \"component\": \"core\",\n    \"language\": \"shell\",\n    \"size\": \"small\",\n    \"type\": \"script\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"pullrequest\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"root-level\",\n    \"fileExtension\": \"shell\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"no-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"trivial\"\n  },\n  {\n    \"path\": \"app/api/auth/pipeline.go\",\n    \"service\": \"platform\",\n    \"component\": \"repository\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"pipeline\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/events/pullreq/events_state.go\",\n    \"service\": \"platform\",\n    \"component\": \"messaging\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"many-exports\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/space/label_value_define.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/auth/registry.go\",\n    \"service\": \"platform\",\n    \"component\": \"cli\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/pullreq/pr_create.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/rule_list.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/connector/update.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/events/git/branch.go\",\n    \"service\": \"platform\",\n    \"component\": \"messaging\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"branch\",\n    \"apiPattern\": \"git-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PATCH\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"moderate-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/pipeline/create.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/space/soft_delete.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"space\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/system/version_test.go\",\n    \"service\": \"test\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"test\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"test\",\n    \"apiPattern\": \"test\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"TEST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/gitspace/create.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"kotlin\",\n    \"size\": \"medium\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"gitspace\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"heavy-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"large-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"very-complex\"\n  },\n  {\n    \"path\": \"app/api/controller/limiter/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"ratelimit\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/service/delete.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"service\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/logutil/scanner.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/server/server.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"has-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/services/infraprovider/create_resource.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/space/label_delete.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/events/pullreq/reader.go\",\n    \"service\": \"platform\",\n    \"component\": \"messaging\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/services/gitspace/action_reset.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/githook/pre_receive_scan_secrets.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"python\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"webhook\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/space/find.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/webhook/repo_find.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"webhook\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/serviceaccount/create_token.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"serviceaccount\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/archive.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/space/move.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"space\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/pullreq/pr_commits.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"pullreq\",\n    \"operationType\": \"commit\",\n    \"apiPattern\": \"git-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/gitspace/logs_stream.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/pullreq/pr_branch_candidates.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"branch\",\n    \"apiPattern\": \"git-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PATCH\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/user/find.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"user\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/utils/script_templates/run_vscode_web.sh\",\n    \"service\": \"platform\",\n    \"component\": \"utils\",\n    \"language\": \"shell\",\n    \"size\": \"small\",\n    \"type\": \"script\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"shell\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"no-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"shared-module\",\n    \"complexityScore\": \"trivial\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/runarg/static_provider.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/space/membership_delete.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"space\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"Makefile\",\n    \"service\": \"cd\",\n    \"component\": \"core\",\n    \"language\": \"make\",\n    \"size\": \"small\",\n    \"type\": \"build\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"root-level\",\n    \"fileExtension\": \"no-extension\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"no-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"trivial\"\n  },\n  {\n    \"path\": \"app/api/handler/template/update.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/events/pullreq/events_review_submitted.go\",\n    \"service\": \"platform\",\n    \"component\": \"messaging\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"submit\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/services/codeowners/service.go\",\n    \"service\": \"platform\",\n    \"component\": \"service\",\n    \"language\": \"go\",\n    \"size\": \"medium\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"business-logic\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"has-tests\",\n    \"importCount\": \"heavy-imports\",\n    \"exportCount\": \"many-exports\",\n    \"lineCount\": \"huge-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"extremely-complex\"\n  },\n  {\n    \"path\": \"app/pipeline/manager/teardown.go\",\n    \"service\": \"platform\",\n    \"component\": \"pipeline\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"large-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"extremely-complex\"\n  },\n  {\n    \"path\": \"app/api/handler/repo/calculate_commit_divergence.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"commit\",\n    \"apiPattern\": \"git-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/restore.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/auth/space.go\",\n    \"service\": \"platform\",\n    \"component\": \"test\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"workspace\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/router/secure.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/repo/label_update.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/users/delete_test.go\",\n    \"service\": \"test\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"test\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"test\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/user/create.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"user\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/repo/label_value_delete.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/router/api_router.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/services/infraprovider/create_config_and_resources.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"config\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/middleware/address/address_test.go\",\n    \"service\": \"test\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"test\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"test\",\n    \"apiPattern\": \"test\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"TEST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/user/publickey_create.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/raw.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/services/codeowners/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/pullreq/branch_restore.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"pullreq\",\n    \"operationType\": \"branch\",\n    \"apiPattern\": \"git-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PATCH\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/githook/update.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"rust\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"webhook\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/pullreq/activity_list.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \".golangci.yml\",\n    \"service\": \"ci\",\n    \"component\": \"config\",\n    \"language\": \"yaml\",\n    \"size\": \"medium\",\n    \"type\": \"config\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"root-level\",\n    \"fileExtension\": \"config\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"no-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"trivial\"\n  },\n  {\n    \"path\": \"app/api/controller/pullreq/merge.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"medium\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"pullreq\",\n    \"operationType\": \"merge\",\n    \"apiPattern\": \"git-operation\",\n    \"apiComplexity\": \"complex\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"heavy-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"huge-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"extremely-complex\"\n  },\n  {\n    \"path\": \"app/api/controller/tx.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"tx.go\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/repo/delete_branch.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/space/list_executions.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/pullreq/reviewer_delete.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"pullreq\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/services/importer/provider.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"medium\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"heavy-imports\",\n    \"exportCount\": \"moderate-exports\",\n    \"lineCount\": \"large-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"extremely-complex\"\n  },\n  {\n    \"path\": \"app/api/handler/trigger/delete.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/githook/types.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"types\",\n    \"apiPattern\": \"data-model\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/upload/download.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"upload\",\n    \"operationType\": \"download\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/devcontainer/exec.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"moderate-exports\",\n    \"lineCount\": \"large-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"extremely-complex\"\n  },\n  {\n    \"path\": \"app/services/exporter/repository.go\",\n    \"service\": \"platform\",\n    \"component\": \"repository\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"data-access\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"heavy-imports\",\n    \"exportCount\": \"moderate-exports\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/space/rule_create.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/infraprovider/controller.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"large\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"infrastructure\",\n    \"operationType\": \"controller\",\n    \"apiPattern\": \"controller\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"moderate-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/services/infraprovider/create_config.go\",\n    \"service\": \"platform\",\n    \"component\": \"config\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"config\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/container/util.go\",\n    \"service\": \"platform\",\n    \"component\": \"utils\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"utility\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"many-exports\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/events/user/reader.go\",\n    \"service\": \"platform\",\n    \"component\": \"messaging\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/reposettings/security_update.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"reposettings\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/services/gitspacedeleteevent/service.go\",\n    \"service\": \"platform\",\n    \"component\": \"service\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"business-logic\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/githook/extender.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"python\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"webhook\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"many-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/account/logout.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"heavy-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/merge_check.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"merge\",\n    \"apiPattern\": \"git-operation\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/space/import.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"import\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/pullreq/mentions.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"pullreq\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/events/gitspaceoperations/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"messaging\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/serviceaccount/find.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"serviceaccount\",\n    \"operationType\": \"read\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/pullreq/suggestions_test.go\",\n    \"service\": \"test\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"medium\",\n    \"type\": \"test\",\n    \"resourceDomain\": \"pullreq\",\n    \"operationType\": \"test\",\n    \"apiPattern\": \"test\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"TEST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"large-file\",\n    \"commentDensity\": \"minimal-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/space/rule_create.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"space\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/user/publickey_edit.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"user\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"very-complex\"\n  },\n  {\n    \"path\": \"app/api/middleware/web/public_access.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/space/list_pipelines.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"space\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/repo/content_paths_details.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/user/controller.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"user\",\n    \"operationType\": \"controller\",\n    \"apiPattern\": \"controller\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/space/update.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/secret/update.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/githook/controller.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"typescript\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"webhook\",\n    \"operationType\": \"controller\",\n    \"apiPattern\": \"controller\",\n    \"apiComplexity\": \"moderate\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"heavy-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/ide/media/vscodeweb/favicon-dark-support.svg\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"other\",\n    \"size\": \"small\",\n    \"type\": \"asset\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"deep\",\n    \"fileExtension\": \"markup\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"no-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"trivial\"\n  },\n  {\n    \"path\": \"app/api/controller/space/list_spaces.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"space\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/space/list_templates.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"space\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/events/git/reader.go\",\n    \"service\": \"platform\",\n    \"component\": \"messaging\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/auth/authn/authenticator.go\",\n    \"service\": \"platform\",\n    \"component\": \"security\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"auth\",\n    \"operationType\": \"auth\",\n    \"apiPattern\": \"authentication\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/repo/upload_file.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"upload\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/execution/cancel.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"cancel\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/repo/diff.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"diff\",\n    \"apiPattern\": \"git-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"medium-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"complex-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/repo/soft_delete.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/user/update.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"user\",\n    \"operationType\": \"update\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"PUT\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/orchestrator/ide/media/vscodeweb/pwa-icon-192.png\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"other\",\n    \"size\": \"tiny\",\n    \"type\": \"asset\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"deep\",\n    \"fileExtension\": \".png\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"no-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"trivial\"\n  },\n  {\n    \"path\": \"app/events/gitspace/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"messaging\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"few-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/user/delete_token.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/webhook/repo_list_executions.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"repository\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/gitspace/scm/public_scm.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"general\",\n    \"apiPattern\": \"general-api\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"UNKNOWN\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"many-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"light-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"moderate-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/pullreq/check_list.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/services/exporter/wire.go\",\n    \"service\": \"platform\",\n    \"component\": \"core\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"source\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"config\",\n    \"apiPattern\": \"dependency-injection\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"MULTIPLE\",\n    \"directoryDepth\": \"shallow\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"few-exports\",\n    \"lineCount\": \"small-file\",\n    \"commentDensity\": \"moderate-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"general-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/controller/space/label_value_delete.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"space\",\n    \"operationType\": \"delete\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"DELETE\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/users/list_test.go\",\n    \"service\": \"test\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"tiny\",\n    \"type\": \"test\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"list\",\n    \"apiPattern\": \"test\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"GET\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"no-imports\",\n    \"exportCount\": \"no-exports\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"documentation-heavy\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  },\n  {\n    \"path\": \"app/api/handler/user/create_favorite.go\",\n    \"service\": \"platform\",\n    \"component\": \"api\",\n    \"language\": \"go\",\n    \"size\": \"small\",\n    \"type\": \"api-def\",\n    \"resourceDomain\": \"general\",\n    \"operationType\": \"create\",\n    \"apiPattern\": \"crud-operation\",\n    \"apiComplexity\": \"simple\",\n    \"httpMethod\": \"POST\",\n    \"directoryDepth\": \"moderate\",\n    \"fileExtension\": \"go-source\",\n    \"testStatus\": \"no-tests\",\n    \"importCount\": \"moderate-imports\",\n    \"exportCount\": \"single-export\",\n    \"lineCount\": \"tiny-file\",\n    \"commentDensity\": \"heavy-comments\",\n    \"lastModified\": \"very-recent\",\n    \"moduleType\": \"server-module\",\n    \"complexityScore\": \"simple-logic\"\n  }\n];\n",
      "patterns": {
        "functions": 0,
        "classes": 0,
        "interfaces": 1,
        "exports": 1,
        "imports": 0,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/data/tempHarnessLinks.ts",
      "relativePath": "shared/data/tempHarnessLinks.ts",
      "name": "tempHarnessLinks.ts",
      "size": 335699,
      "lines": 14023,
      "lastModified": "2025-07-11T04:45:56.144Z",
      "content": "/**\n * Harness repository link data\n * Generated from harness-links.json\n * Contains 1000 links between Harness repository files\n */\n\n// Extended interface with additional metadata\nexport interface HarnessLink {\n  uuid: string;\n  type: string;\n  sourceNodeUuid: string;\n  targetNodeUuid: string;\n  color: [number, number, number];\n  confidence?: number;\n  direction?: string;\n  reason?: string;\n}\n\nexport const TEMP_HARNESS_LINKS: HarnessLink[] = [\n  {\n    uuid: \"harness_link_1\",\n    type: \"Test\",\n    sourceNodeUuid: \"harness_node_61\",\n    targetNodeUuid: \"harness_node_133\",\n    color: [\n      0.2,\n      0.8,\n      0.2\n    ],\n    confidence: 0.95,\n    direction: \"bidirectional\",\n    reason: \"Test file for suggestions\"\n  },\n  {\n    uuid: \"harness_link_2\",\n    type: \"Test\",\n    sourceNodeUuid: \"harness_node_89\",\n    targetNodeUuid: \"harness_node_154\",\n    color: [\n      0.2,\n      0.8,\n      0.2\n    ],\n    confidence: 0.95,\n    direction: \"bidirectional\",\n    reason: \"Test file for activity_list\"\n  },\n  {\n    uuid: \"harness_link_3\",\n    type: \"Test\",\n    sourceNodeUuid: \"harness_node_91\",\n    targetNodeUuid: \"harness_node_185\",\n    color: [\n      0.2,\n      0.8,\n      0.2\n    ],\n    confidence: 0.95,\n    direction: \"bidirectional\",\n    reason: \"Test file for check_report\"\n  },\n  {\n    uuid: \"harness_link_4\",\n    type: \"API\",\n    sourceNodeUuid: \"harness_node_45\",\n    targetNodeUuid: \"harness_node_124\",\n    color: [\n      0.8,\n      0.2,\n      0.2\n    ],\n    confidence: 0.8,\n    direction: \"unidirectional\",\n    reason: \"Service to repository for general\"\n  },\n  {\n    uuid: \"harness_link_5\",\n    type: \"API\",\n    sourceNodeUuid: \"harness_node_58\",\n    targetNodeUuid: \"harness_node_107\",\n    color: [\n      0.8,\n      0.2,\n      0.2\n    ],\n    confidence: 0.8,\n    direction: \"unidirectional\",\n    reason: \"Service to repository for execution\"\n  },\n  {\n    uuid: \"harness_link_6\",\n    type: \"API\",\n    sourceNodeUuid: \"harness_node_80\",\n    targetNodeUuid: \"harness_node_167\",\n    color: [\n      0.8,\n      0.2,\n      0.2\n    ],\n    confidence: 0.8,\n    direction: \"unidirectional\",\n    reason: \"Service to repository for validation\"\n  },\n  {\n    uuid: \"harness_link_7\",\n    type: \"Hierarchy\",\n    sourceNodeUuid: \"harness_node_13\",\n    targetNodeUuid: \"harness_node_199\",\n    color: [\n      0.8,\n      0.6,\n      0.2\n    ],\n    confidence: 0.75,\n    direction: \"unidirectional\",\n    reason: \"api → ui layer connection\"\n  },\n  {\n    uuid: \"harness_link_8\",\n    type: \"Hierarchy\",\n    sourceNodeUuid: \"harness_node_14\",\n    targetNodeUuid: \"harness_node_199\",\n    color: [\n      0.8,\n      0.6,\n      0.2\n    ],\n    confidence: 0.75,\n    direction: \"unidirectional\",\n    reason: \"api → ui layer connection\"\n  },\n  {\n    uuid: \"harness_link_9\",\n    type: \"Hierarchy\",\n    sourceNodeUuid: \"harness_node_26\",\n    targetNodeUuid: \"harness_node_199\",\n    color: [\n      0.8,\n      0.6,\n      0.2\n    ],\n    confidence: 0.75,\n    direction: \"unidirectional\",\n    reason: \"api → ui layer connection\"\n  },\n  {\n    uuid: \"harness_link_10\",\n    type: \"Hierarchy\",\n    sourceNodeUuid: \"harness_node_27\",\n    targetNodeUuid: \"harness_node_199\",\n    color: [\n      0.8,\n      0.6,\n      0.2\n    ],\n    confidence: 0.75,\n    direction: \"unidirectional\",\n    reason: \"api → ui layer connection\"\n  },\n  {\n    uuid: \"harness_link_11\",\n    type: \"Hierarchy\",\n    sourceNodeUuid: \"harness_node_31\",\n    targetNodeUuid: \"harness_node_199\",\n    color: [\n      0.8,\n      0.6,\n      0.2\n    ],\n    confidence: 0.75,\n    direction: \"unidirectional\",\n    reason: \"api → ui layer connection\"\n  },\n  {\n    uuid: \"harness_link_12\",\n    type: \"Hierarchy\",\n    sourceNodeUuid: \"harness_node_33\",\n    targetNodeUuid: \"harness_node_199\",\n    color: [\n      0.8,\n      0.6,\n      0.2\n    ],\n    confidence: 0.75,\n    direction: \"unidirectional\",\n    reason: \"api → ui layer connection\"\n  },\n  {\n    uuid: \"harness_link_13\",\n    type: \"Hierarchy\",\n    sourceNodeUuid: \"harness_node_39\",\n    targetNodeUuid: \"harness_node_199\",\n    color: [\n      0.8,\n      0.6,\n      0.2\n    ],\n    confidence: 0.75,\n    direction: \"unidirectional\",\n    reason: \"api → ui layer connection\"\n  },\n  {\n    uuid: \"harness_link_14\",\n    type: \"Hierarchy\",\n    sourceNodeUuid: \"harness_node_40\",\n    targetNodeUuid: \"harness_node_199\",\n    color: [\n      0.8,\n      0.6,\n      0.2\n    ],\n    confidence: 0.75,\n    direction: \"unidirectional\",\n    reason: \"api → ui layer connection\"\n  },\n  {\n    uuid: \"harness_link_15\",\n    type: \"Hierarchy\",\n    sourceNodeUuid: \"harness_node_45\",\n    targetNodeUuid: \"harness_node_82\",\n    color: [\n      0.8,\n      0.6,\n      0.2\n    ],\n    confidence: 0.75,\n    direction: \"unidirectional\",\n    reason: \"service → api layer connection\"\n  },\n  {\n    uuid: \"harness_link_16\",\n    type: \"Hierarchy\",\n    sourceNodeUuid: \"harness_node_45\",\n    targetNodeUuid: \"harness_node_124\",\n    color: [\n      0.8,\n      0.6,\n      0.2\n    ],\n    confidence: 0.75,\n    direction: \"unidirectional\",\n    reason: \"service → repository layer connection\"\n  },\n  {\n    uuid: \"harness_link_17\",\n    type: \"Hierarchy\",\n    sourceNodeUuid: \"harness_node_53\",\n    targetNodeUuid: \"harness_node_199\",\n    color: [\n      0.8,\n      0.6,\n      0.2\n    ],\n    confidence: 0.75,\n    direction: \"unidirectional\",\n    reason: \"api → ui layer connection\"\n  },\n  {\n    uuid: \"harness_link_18\",\n    type: \"Hierarchy\",\n    sourceNodeUuid: \"harness_node_55\",\n    targetNodeUuid: \"harness_node_199\",\n    color: [\n      0.8,\n      0.6,\n      0.2\n    ],\n    confidence: 0.75,\n    direction: \"unidirectional\",\n    reason: \"api → ui layer connection\"\n  },\n  {\n    uuid: \"harness_link_19\",\n    type: \"Hierarchy\",\n    sourceNodeUuid: \"harness_node_56\",\n    targetNodeUuid: \"harness_node_199\",\n    color: [\n      0.8,\n      0.6,\n      0.2\n    ],\n    confidence: 0.75,\n    direction: \"unidirectional\",\n    reason: \"api → ui layer connection\"\n  },\n  {\n    uuid: \"harness_link_20\",\n    type: \"Hierarchy\",\n    sourceNodeUuid: \"harness_node_58\",\n    targetNodeUuid: \"harness_node_107\",\n    color: [\n      0.8,\n      0.6,\n      0.2\n    ],\n    confidence: 0.75,\n    direction: \"unidirectional\",\n    reason: \"service → repository layer connection\"\n  },\n  {\n    uuid: \"harness_link_21\",\n    type: \"Hierarchy\",\n    sourceNodeUuid: \"harness_node_72\",\n    targetNodeUuid: \"harness_node_199\",\n    color: [\n      0.8,\n      0.6,\n      0.2\n    ],\n    confidence: 0.75,\n    direction: \"unidirectional\",\n    reason: \"api → ui layer connection\"\n  },\n  {\n    uuid: \"harness_link_22\",\n    type: \"Hierarchy\",\n    sourceNodeUuid: \"harness_node_80\",\n    targetNodeUuid: \"harness_node_167\",\n    color: [\n      0.8,\n      0.6,\n      0.2\n    ],\n    confidence: 0.75,\n    direction: \"unidirectional\",\n    reason: \"service → repository layer connection\"\n  },\n  {\n    uuid: \"harness_link_23\",\n    type: \"Hierarchy\",\n    sourceNodeUuid: \"harness_node_83\",\n    targetNodeUuid: \"harness_node_129\",\n    color: [\n      0.8,\n      0.6,\n      0.2\n    ],\n    confidence: 0.75,\n    direction: \"unidirectional\",\n    reason: \"repository → service layer connection\"\n  },\n  {\n    uuid: \"harness_link_24\",\n    type: \"Hierarchy\",\n    sourceNodeUuid: \"harness_node_92\",\n    targetNodeUuid: \"harness_node_199\",\n    color: [\n      0.8,\n      0.6,\n      0.2\n    ],\n    confidence: 0.75,\n    direction: \"unidirectional\",\n    reason: \"api → ui layer connection\"\n  },\n  {\n    uuid: \"harness_link_25\",\n    type: \"Hierarchy\",\n    sourceNodeUuid: \"harness_node_94\",\n    targetNodeUuid: \"harness_node_199\",\n    color: [\n      0.8,\n      0.6,\n      0.2\n    ],\n    confidence: 0.75,\n    direction: \"unidirectional\",\n    reason: \"api → ui layer connection\"\n  },\n  {\n    uuid: \"harness_link_26\",\n    type: \"Hierarchy\",\n    sourceNodeUuid: \"harness_node_101\",\n    targetNodeUuid: \"harness_node_199\",\n    color: [\n      0.8,\n      0.6,\n      0.2\n    ],\n    confidence: 0.75,\n    direction: \"unidirectional\",\n    reason: \"api → ui layer connection\"\n  },\n  {\n    uuid: \"harness_link_27\",\n    type: \"Hierarchy\",\n    sourceNodeUuid: \"harness_node_113\",\n    targetNodeUuid: \"harness_node_199\",\n    color: [\n      0.8,\n      0.6,\n      0.2\n    ],\n    confidence: 0.75,\n    direction: \"unidirectional\",\n    reason: \"api → ui layer connection\"\n  },\n  {\n    uuid: \"harness_link_28\",\n    type: \"Hierarchy\",\n    sourceNodeUuid: \"harness_node_120\",\n    targetNodeUuid: \"harness_node_199\",\n    color: [\n      0.8,\n      0.6,\n      0.2\n    ],\n    confidence: 0.75,\n    direction: \"unidirectional\",\n    reason: \"api → ui layer connection\"\n  },\n  {\n    uuid: \"harness_link_29\",\n    type: \"Hierarchy\",\n    sourceNodeUuid: \"harness_node_136\",\n    targetNodeUuid: \"harness_node_199\",\n    color: [\n      0.8,\n      0.6,\n      0.2\n    ],\n    confidence: 0.75,\n    direction: \"unidirectional\",\n    reason: \"api → ui layer connection\"\n  },\n  {\n    uuid: \"harness_link_30\",\n    type: \"Hierarchy\",\n    sourceNodeUuid: \"harness_node_138\",\n    targetNodeUuid: \"harness_node_199\",\n    color: [\n      0.8,\n      0.6,\n      0.2\n    ],\n    confidence: 0.75,\n    direction: \"unidirectional\",\n    reason: \"api → ui layer connection\"\n  },\n  {\n    uuid: \"harness_link_31\",\n    type: \"Hierarchy\",\n    sourceNodeUuid: \"harness_node_140\",\n    targetNodeUuid: \"harness_node_199\",\n    color: [\n      0.8,\n      0.6,\n      0.2\n    ],\n    confidence: 0.75,\n    direction: \"unidirectional\",\n    reason: \"api → ui layer connection\"\n  },\n  {\n    uuid: \"harness_link_32\",\n    type: \"Hierarchy\",\n    sourceNodeUuid: \"harness_node_142\",\n    targetNodeUuid: \"harness_node_199\",\n    color: [\n      0.8,\n      0.6,\n      0.2\n    ],\n    confidence: 0.75,\n    direction: \"unidirectional\",\n    reason: \"api → ui layer connection\"\n  },\n  {\n    uuid: \"harness_link_33\",\n    type: \"Hierarchy\",\n    sourceNodeUuid: \"harness_node_156\",\n    targetNodeUuid: \"harness_node_199\",\n    color: [\n      0.8,\n      0.6,\n      0.2\n    ],\n    confidence: 0.75,\n    direction: \"unidirectional\",\n    reason: \"api → ui layer connection\"\n  },\n  {\n    uuid: \"harness_link_34\",\n    type: \"Hierarchy\",\n    sourceNodeUuid: \"harness_node_157\",\n    targetNodeUuid: \"harness_node_199\",\n    color: [\n      0.8,\n      0.6,\n      0.2\n    ],\n    confidence: 0.75,\n    direction: \"unidirectional\",\n    reason: \"api → ui layer connection\"\n  },\n  {\n    uuid: \"harness_link_35\",\n    type: \"Hierarchy\",\n    sourceNodeUuid: \"harness_node_159\",\n    targetNodeUuid: \"harness_node_199\",\n    color: [\n      0.8,\n      0.6,\n      0.2\n    ],\n    confidence: 0.75,\n    direction: \"unidirectional\",\n    reason: \"api → ui layer connection\"\n  },\n  {\n    uuid: \"harness_link_36\",\n    type: \"Hierarchy\",\n    sourceNodeUuid: \"harness_node_172\",\n    targetNodeUuid: \"harness_node_199\",\n    color: [\n      0.8,\n      0.6,\n      0.2\n    ],\n    confidence: 0.75,\n    direction: \"unidirectional\",\n    reason: \"api → ui layer connection\"\n  },\n  {\n    uuid: \"harness_link_37\",\n    type: \"Hierarchy\",\n    sourceNodeUuid: \"harness_node_175\",\n    targetNodeUuid: \"harness_node_199\",\n    color: [\n      0.8,\n      0.6,\n      0.2\n    ],\n    confidence: 0.75,\n    direction: \"unidirectional\",\n    reason: \"api → ui layer connection\"\n  },\n  {\n    uuid: \"harness_link_38\",\n    type: \"Hierarchy\",\n    sourceNodeUuid: \"harness_node_177\",\n    targetNodeUuid: \"harness_node_199\",\n    color: [\n      0.8,\n      0.6,\n      0.2\n    ],\n    confidence: 0.75,\n    direction: \"unidirectional\",\n    reason: \"api → ui layer connection\"\n  },\n  {\n    uuid: \"harness_link_39\",\n    type: \"Hierarchy\",\n    sourceNodeUuid: \"harness_node_182\",\n    targetNodeUuid: \"harness_node_199\",\n    color: [\n      0.8,\n      0.6,\n      0.2\n    ],\n    confidence: 0.75,\n    direction: \"unidirectional\",\n    reason: \"api → ui layer connection\"\n  },\n  {\n    uuid: \"harness_link_40\",\n    type: \"Hierarchy\",\n    sourceNodeUuid: \"harness_node_183\",\n    targetNodeUuid: \"harness_node_199\",\n    color: [\n      0.8,\n      0.6,\n      0.2\n    ],\n    confidence: 0.75,\n    direction: \"unidirectional\",\n    reason: \"api → ui layer connection\"\n  },\n  {\n    uuid: \"harness_link_41\",\n    type: \"Hierarchy\",\n    sourceNodeUuid: \"harness_node_186\",\n    targetNodeUuid: \"harness_node_199\",\n    color: [\n      0.8,\n      0.6,\n      0.2\n    ],\n    confidence: 0.75,\n    direction: \"unidirectional\",\n    reason: \"api → ui layer connection\"\n  },\n  {\n    uuid: \"harness_link_42\",\n    type: \"Hierarchy\",\n    sourceNodeUuid: \"harness_node_193\",\n    targetNodeUuid: \"harness_node_199\",\n    color: [\n      0.8,\n      0.6,\n      0.2\n    ],\n    confidence: 0.75,\n    direction: \"unidirectional\",\n    reason: \"api → ui layer connection\"\n  },\n  {\n    uuid: \"harness_link_43\",\n    type: \"Hierarchy\",\n    sourceNodeUuid: \"harness_node_194\",\n    targetNodeUuid: \"harness_node_199\",\n    color: [\n      0.8,\n      0.6,\n      0.2\n    ],\n    confidence: 0.75,\n    direction: \"unidirectional\",\n    reason: \"api → ui layer connection\"\n  },\n  {\n    uuid: \"harness_link_44\",\n    type: \"Hierarchy\",\n    sourceNodeUuid: \"harness_node_198\",\n    targetNodeUuid: \"harness_node_199\",\n    color: [\n      0.8,\n      0.6,\n      0.2\n    ],\n    confidence: 0.75,\n    direction: \"unidirectional\",\n    reason: \"api → ui layer connection\"\n  },\n  {\n    uuid: \"harness_link_45\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_1\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/infraprovider\"\n  },\n  {\n    uuid: \"harness_link_46\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_2\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_47\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_4\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/connector\"\n  },\n  {\n    uuid: \"harness_link_48\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_6\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/keywordsearch\"\n  },\n  {\n    uuid: \"harness_link_49\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_7\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/principal\"\n  },\n  {\n    uuid: \"harness_link_50\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_8\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/infraprovider\"\n  },\n  {\n    uuid: \"harness_link_51\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_9\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_52\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_10\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/keywordsearch\"\n  },\n  {\n    uuid: \"harness_link_53\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_11\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/connector\"\n  },\n  {\n    uuid: \"harness_link_54\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_12\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/lfs\"\n  },\n  {\n    uuid: \"harness_link_55\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_13\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_56\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_14\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_57\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_15\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/limiter\"\n  },\n  {\n    uuid: \"harness_link_58\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_16\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/migrate\"\n  },\n  {\n    uuid: \"harness_link_59\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_17\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_60\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_20\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/check\"\n  },\n  {\n    uuid: \"harness_link_61\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_21\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/lfs\"\n  },\n  {\n    uuid: \"harness_link_62\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_22\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/keywordsearch\"\n  },\n  {\n    uuid: \"harness_link_63\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_24\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_64\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_25\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_65\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_26\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_66\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_27\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_67\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_28\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/plugin\"\n  },\n  {\n    uuid: \"harness_link_68\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_29\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_69\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_30\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/logs\"\n  },\n  {\n    uuid: \"harness_link_70\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_31\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_71\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_32\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/infraprovider\"\n  },\n  {\n    uuid: \"harness_link_72\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_33\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_73\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_34\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/lfs\"\n  },\n  {\n    uuid: \"harness_link_74\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_35\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/migrate\"\n  },\n  {\n    uuid: \"harness_link_75\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_36\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_76\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_37\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/logs\"\n  },\n  {\n    uuid: \"harness_link_77\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_38\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/pipeline\"\n  },\n  {\n    uuid: \"harness_link_78\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_39\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_79\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_40\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_80\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_44\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/plugin\"\n  },\n  {\n    uuid: \"harness_link_81\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_46\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/migrate\"\n  },\n  {\n    uuid: \"harness_link_82\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_48\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/lfs\"\n  },\n  {\n    uuid: \"harness_link_83\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_49\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/gitspace\"\n  },\n  {\n    uuid: \"harness_link_84\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_51\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_85\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_53\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_86\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_54\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_87\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_55\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_88\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_56\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_89\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_57\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/pipeline\"\n  },\n  {\n    uuid: \"harness_link_90\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_58\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/execution\"\n  },\n  {\n    uuid: \"harness_link_91\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_59\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/principal\"\n  },\n  {\n    uuid: \"harness_link_92\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_60\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/pipeline\"\n  },\n  {\n    uuid: \"harness_link_93\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_61\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_94\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_62\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/execution\"\n  },\n  {\n    uuid: \"harness_link_95\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_63\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/infraprovider\"\n  },\n  {\n    uuid: \"harness_link_96\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_64\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_97\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_65\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_98\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_66\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/lfs\"\n  },\n  {\n    uuid: \"harness_link_99\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_67\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_100\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_68\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/connector\"\n  },\n  {\n    uuid: \"harness_link_101\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_69\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/lfs\"\n  },\n  {\n    uuid: \"harness_link_102\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_71\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/limiter\"\n  },\n  {\n    uuid: \"harness_link_103\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_72\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_104\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_73\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_105\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_74\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_106\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_75\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/principal\"\n  },\n  {\n    uuid: \"harness_link_107\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_76\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/check\"\n  },\n  {\n    uuid: \"harness_link_108\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_77\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_109\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_80\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/check\"\n  },\n  {\n    uuid: \"harness_link_110\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_81\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/logs\"\n  },\n  {\n    uuid: \"harness_link_111\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_82\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api\"\n  },\n  {\n    uuid: \"harness_link_112\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_83\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/connector\"\n  },\n  {\n    uuid: \"harness_link_113\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_85\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_114\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_87\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_115\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_89\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_116\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_91\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/check\"\n  },\n  {\n    uuid: \"harness_link_117\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_92\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_118\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_93\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/execution\"\n  },\n  {\n    uuid: \"harness_link_119\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_94\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_120\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_95\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/execution\"\n  },\n  {\n    uuid: \"harness_link_121\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_96\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/gitspace\"\n  },\n  {\n    uuid: \"harness_link_122\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_99\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/principal\"\n  },\n  {\n    uuid: \"harness_link_123\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_101\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_124\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_102\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_125\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_103\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_126\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_104\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/lfs\"\n  },\n  {\n    uuid: \"harness_link_127\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_105\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_128\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_106\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/plugin\"\n  },\n  {\n    uuid: \"harness_link_129\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_107\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/execution\"\n  },\n  {\n    uuid: \"harness_link_130\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_108\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/pipeline\"\n  },\n  {\n    uuid: \"harness_link_131\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_110\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_132\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_113\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_133\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_114\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/principal\"\n  },\n  {\n    uuid: \"harness_link_134\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_115\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_135\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_116\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_136\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_118\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_137\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_119\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_138\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_120\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_139\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_121\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_140\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_122\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/gitspace\"\n  },\n  {\n    uuid: \"harness_link_141\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_125\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/infraprovider\"\n  },\n  {\n    uuid: \"harness_link_142\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_126\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/limiter\"\n  },\n  {\n    uuid: \"harness_link_143\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_127\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/logs\"\n  },\n  {\n    uuid: \"harness_link_144\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_128\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/migrate\"\n  },\n  {\n    uuid: \"harness_link_145\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_129\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/connector\"\n  },\n  {\n    uuid: \"harness_link_146\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_131\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/migrate\"\n  },\n  {\n    uuid: \"harness_link_147\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_132\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/migrate\"\n  },\n  {\n    uuid: \"harness_link_148\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_133\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_149\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_134\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/migrate\"\n  },\n  {\n    uuid: \"harness_link_150\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_135\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/infraprovider\"\n  },\n  {\n    uuid: \"harness_link_151\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_136\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_152\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_137\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/lfs\"\n  },\n  {\n    uuid: \"harness_link_153\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_138\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_154\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_139\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_155\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_140\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_156\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_142\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_157\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_145\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_158\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_146\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/infraprovider\"\n  },\n  {\n    uuid: \"harness_link_159\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_147\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_160\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_149\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_161\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_150\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_162\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_151\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/pipeline\"\n  },\n  {\n    uuid: \"harness_link_163\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_152\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_164\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_153\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/gitspace\"\n  },\n  {\n    uuid: \"harness_link_165\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_154\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_166\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_156\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_167\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_157\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_168\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_158\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_169\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_159\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_170\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_161\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/connector\"\n  },\n  {\n    uuid: \"harness_link_171\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_162\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/principal\"\n  },\n  {\n    uuid: \"harness_link_172\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_163\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/check\"\n  },\n  {\n    uuid: \"harness_link_173\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_164\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/pipeline\"\n  },\n  {\n    uuid: \"harness_link_174\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_165\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_175\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_166\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/connector\"\n  },\n  {\n    uuid: \"harness_link_176\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_167\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/check\"\n  },\n  {\n    uuid: \"harness_link_177\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_169\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/check\"\n  },\n  {\n    uuid: \"harness_link_178\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_170\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/gitspace\"\n  },\n  {\n    uuid: \"harness_link_179\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_172\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_180\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_174\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/gitspace\"\n  },\n  {\n    uuid: \"harness_link_181\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_175\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_182\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_177\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_183\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_178\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_184\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_182\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_185\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_183\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_186\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_185\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/check\"\n  },\n  {\n    uuid: \"harness_link_187\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_186\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_188\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_187\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/execution\"\n  },\n  {\n    uuid: \"harness_link_189\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_188\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/gitspace\"\n  },\n  {\n    uuid: \"harness_link_190\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_192\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_191\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_193\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_192\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_194\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_193\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_195\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/execution\"\n  },\n  {\n    uuid: \"harness_link_194\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_196\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/gitspace\"\n  },\n  {\n    uuid: \"harness_link_195\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_197\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/migrate\"\n  },\n  {\n    uuid: \"harness_link_196\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_0\",\n    targetNodeUuid: \"harness_node_198\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/migrate to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_197\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_2\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_198\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_4\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/connector\"\n  },\n  {\n    uuid: \"harness_link_199\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_6\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/keywordsearch\"\n  },\n  {\n    uuid: \"harness_link_200\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_7\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/principal\"\n  },\n  {\n    uuid: \"harness_link_201\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_8\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/infraprovider\"\n  },\n  {\n    uuid: \"harness_link_202\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_9\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_203\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_10\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/keywordsearch\"\n  },\n  {\n    uuid: \"harness_link_204\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_11\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/connector\"\n  },\n  {\n    uuid: \"harness_link_205\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_12\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/lfs\"\n  },\n  {\n    uuid: \"harness_link_206\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_13\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_207\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_14\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_208\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_15\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/limiter\"\n  },\n  {\n    uuid: \"harness_link_209\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_16\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/migrate\"\n  },\n  {\n    uuid: \"harness_link_210\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_17\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_211\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_20\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/check\"\n  },\n  {\n    uuid: \"harness_link_212\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_21\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/lfs\"\n  },\n  {\n    uuid: \"harness_link_213\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_22\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/keywordsearch\"\n  },\n  {\n    uuid: \"harness_link_214\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_24\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_215\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_25\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_216\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_26\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_217\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_27\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_218\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_28\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/plugin\"\n  },\n  {\n    uuid: \"harness_link_219\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_29\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_220\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_30\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/logs\"\n  },\n  {\n    uuid: \"harness_link_221\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_31\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_222\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_32\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/infraprovider\"\n  },\n  {\n    uuid: \"harness_link_223\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_33\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_224\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_34\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/lfs\"\n  },\n  {\n    uuid: \"harness_link_225\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_35\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/migrate\"\n  },\n  {\n    uuid: \"harness_link_226\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_36\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_227\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_37\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/logs\"\n  },\n  {\n    uuid: \"harness_link_228\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_38\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pipeline\"\n  },\n  {\n    uuid: \"harness_link_229\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_39\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_230\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_40\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_231\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_44\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/plugin\"\n  },\n  {\n    uuid: \"harness_link_232\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_46\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/migrate\"\n  },\n  {\n    uuid: \"harness_link_233\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_48\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/lfs\"\n  },\n  {\n    uuid: \"harness_link_234\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_49\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/gitspace\"\n  },\n  {\n    uuid: \"harness_link_235\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_51\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_236\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_53\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_237\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_54\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_238\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_55\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_239\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_56\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_240\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_57\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pipeline\"\n  },\n  {\n    uuid: \"harness_link_241\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_58\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/execution\"\n  },\n  {\n    uuid: \"harness_link_242\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_59\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/principal\"\n  },\n  {\n    uuid: \"harness_link_243\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_60\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pipeline\"\n  },\n  {\n    uuid: \"harness_link_244\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_61\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_245\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_62\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/execution\"\n  },\n  {\n    uuid: \"harness_link_246\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_63\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/infraprovider\"\n  },\n  {\n    uuid: \"harness_link_247\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_64\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_248\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_65\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_249\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_66\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/lfs\"\n  },\n  {\n    uuid: \"harness_link_250\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_67\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_251\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_68\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/connector\"\n  },\n  {\n    uuid: \"harness_link_252\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_69\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/lfs\"\n  },\n  {\n    uuid: \"harness_link_253\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_71\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/limiter\"\n  },\n  {\n    uuid: \"harness_link_254\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_72\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_255\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_73\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_256\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_74\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_257\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_75\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/principal\"\n  },\n  {\n    uuid: \"harness_link_258\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_76\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/check\"\n  },\n  {\n    uuid: \"harness_link_259\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_77\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_260\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_80\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/check\"\n  },\n  {\n    uuid: \"harness_link_261\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_81\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/logs\"\n  },\n  {\n    uuid: \"harness_link_262\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_82\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api\"\n  },\n  {\n    uuid: \"harness_link_263\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_83\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/connector\"\n  },\n  {\n    uuid: \"harness_link_264\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_85\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_265\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_87\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_266\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_89\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_267\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_91\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/check\"\n  },\n  {\n    uuid: \"harness_link_268\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_92\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_269\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_93\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/execution\"\n  },\n  {\n    uuid: \"harness_link_270\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_94\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_271\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_95\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/execution\"\n  },\n  {\n    uuid: \"harness_link_272\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_96\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/gitspace\"\n  },\n  {\n    uuid: \"harness_link_273\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_99\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/principal\"\n  },\n  {\n    uuid: \"harness_link_274\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_101\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_275\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_102\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_276\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_103\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_277\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_104\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/lfs\"\n  },\n  {\n    uuid: \"harness_link_278\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_105\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_279\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_106\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/plugin\"\n  },\n  {\n    uuid: \"harness_link_280\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_107\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/execution\"\n  },\n  {\n    uuid: \"harness_link_281\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_108\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pipeline\"\n  },\n  {\n    uuid: \"harness_link_282\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_110\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_283\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_113\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_284\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_114\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/principal\"\n  },\n  {\n    uuid: \"harness_link_285\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_115\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_286\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_116\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_287\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_118\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_288\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_119\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_289\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_120\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_290\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_121\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_291\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_122\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/gitspace\"\n  },\n  {\n    uuid: \"harness_link_292\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_125\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/infraprovider\"\n  },\n  {\n    uuid: \"harness_link_293\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_126\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/limiter\"\n  },\n  {\n    uuid: \"harness_link_294\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_127\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/logs\"\n  },\n  {\n    uuid: \"harness_link_295\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_128\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/migrate\"\n  },\n  {\n    uuid: \"harness_link_296\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_129\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/connector\"\n  },\n  {\n    uuid: \"harness_link_297\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_131\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/migrate\"\n  },\n  {\n    uuid: \"harness_link_298\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_132\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/migrate\"\n  },\n  {\n    uuid: \"harness_link_299\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_133\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_300\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_134\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/migrate\"\n  },\n  {\n    uuid: \"harness_link_301\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_135\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/infraprovider\"\n  },\n  {\n    uuid: \"harness_link_302\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_136\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_303\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_137\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/lfs\"\n  },\n  {\n    uuid: \"harness_link_304\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_138\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_305\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_139\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_306\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_140\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_307\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_142\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_308\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_145\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_309\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_146\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/infraprovider\"\n  },\n  {\n    uuid: \"harness_link_310\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_147\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_311\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_149\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_312\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_150\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_313\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_151\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pipeline\"\n  },\n  {\n    uuid: \"harness_link_314\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_152\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_315\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_153\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/gitspace\"\n  },\n  {\n    uuid: \"harness_link_316\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_154\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_317\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_156\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_318\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_157\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_319\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_158\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_320\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_159\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_321\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_161\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/connector\"\n  },\n  {\n    uuid: \"harness_link_322\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_162\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/principal\"\n  },\n  {\n    uuid: \"harness_link_323\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_163\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/check\"\n  },\n  {\n    uuid: \"harness_link_324\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_164\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pipeline\"\n  },\n  {\n    uuid: \"harness_link_325\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_165\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_326\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_166\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/connector\"\n  },\n  {\n    uuid: \"harness_link_327\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_167\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/check\"\n  },\n  {\n    uuid: \"harness_link_328\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_169\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/check\"\n  },\n  {\n    uuid: \"harness_link_329\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_170\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/gitspace\"\n  },\n  {\n    uuid: \"harness_link_330\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_172\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_331\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_174\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/gitspace\"\n  },\n  {\n    uuid: \"harness_link_332\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_175\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_333\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_177\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_334\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_178\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_335\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_182\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_336\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_183\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_337\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_185\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/check\"\n  },\n  {\n    uuid: \"harness_link_338\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_186\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_339\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_187\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/execution\"\n  },\n  {\n    uuid: \"harness_link_340\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_188\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/gitspace\"\n  },\n  {\n    uuid: \"harness_link_341\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_192\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_342\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_193\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_343\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_194\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_344\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_195\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/execution\"\n  },\n  {\n    uuid: \"harness_link_345\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_196\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/gitspace\"\n  },\n  {\n    uuid: \"harness_link_346\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_197\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/migrate\"\n  },\n  {\n    uuid: \"harness_link_347\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_1\",\n    targetNodeUuid: \"harness_node_198\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_348\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_4\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/connector\"\n  },\n  {\n    uuid: \"harness_link_349\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_6\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/keywordsearch\"\n  },\n  {\n    uuid: \"harness_link_350\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_7\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/principal\"\n  },\n  {\n    uuid: \"harness_link_351\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_8\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/infraprovider\"\n  },\n  {\n    uuid: \"harness_link_352\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_9\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_353\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_10\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/keywordsearch\"\n  },\n  {\n    uuid: \"harness_link_354\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_11\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/connector\"\n  },\n  {\n    uuid: \"harness_link_355\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_12\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/lfs\"\n  },\n  {\n    uuid: \"harness_link_356\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_13\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_357\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_14\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_358\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_15\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/limiter\"\n  },\n  {\n    uuid: \"harness_link_359\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_16\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/migrate\"\n  },\n  {\n    uuid: \"harness_link_360\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_17\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_361\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_20\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/check\"\n  },\n  {\n    uuid: \"harness_link_362\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_21\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/lfs\"\n  },\n  {\n    uuid: \"harness_link_363\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_22\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/keywordsearch\"\n  },\n  {\n    uuid: \"harness_link_364\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_24\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_365\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_25\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_366\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_26\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_367\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_27\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_368\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_28\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/plugin\"\n  },\n  {\n    uuid: \"harness_link_369\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_29\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_370\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_30\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/logs\"\n  },\n  {\n    uuid: \"harness_link_371\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_31\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_372\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_32\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/infraprovider\"\n  },\n  {\n    uuid: \"harness_link_373\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_33\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_374\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_34\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/lfs\"\n  },\n  {\n    uuid: \"harness_link_375\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_35\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/migrate\"\n  },\n  {\n    uuid: \"harness_link_376\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_36\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_377\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_37\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/logs\"\n  },\n  {\n    uuid: \"harness_link_378\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_38\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/pipeline\"\n  },\n  {\n    uuid: \"harness_link_379\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_39\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_380\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_40\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_381\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_44\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/plugin\"\n  },\n  {\n    uuid: \"harness_link_382\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_46\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/migrate\"\n  },\n  {\n    uuid: \"harness_link_383\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_48\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/lfs\"\n  },\n  {\n    uuid: \"harness_link_384\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_49\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/gitspace\"\n  },\n  {\n    uuid: \"harness_link_385\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_51\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_386\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_53\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_387\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_54\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_388\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_55\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_389\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_56\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_390\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_57\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/pipeline\"\n  },\n  {\n    uuid: \"harness_link_391\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_58\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/execution\"\n  },\n  {\n    uuid: \"harness_link_392\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_59\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/principal\"\n  },\n  {\n    uuid: \"harness_link_393\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_60\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/pipeline\"\n  },\n  {\n    uuid: \"harness_link_394\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_61\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_395\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_62\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/execution\"\n  },\n  {\n    uuid: \"harness_link_396\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_63\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/infraprovider\"\n  },\n  {\n    uuid: \"harness_link_397\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_64\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_398\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_65\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_399\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_66\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/lfs\"\n  },\n  {\n    uuid: \"harness_link_400\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_67\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_401\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_68\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/connector\"\n  },\n  {\n    uuid: \"harness_link_402\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_69\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/lfs\"\n  },\n  {\n    uuid: \"harness_link_403\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_71\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/limiter\"\n  },\n  {\n    uuid: \"harness_link_404\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_72\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_405\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_73\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_406\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_74\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_407\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_75\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/principal\"\n  },\n  {\n    uuid: \"harness_link_408\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_76\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/check\"\n  },\n  {\n    uuid: \"harness_link_409\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_77\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_410\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_80\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/check\"\n  },\n  {\n    uuid: \"harness_link_411\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_81\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/logs\"\n  },\n  {\n    uuid: \"harness_link_412\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_82\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api\"\n  },\n  {\n    uuid: \"harness_link_413\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_83\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/connector\"\n  },\n  {\n    uuid: \"harness_link_414\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_85\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_415\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_87\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_416\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_89\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_417\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_91\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/check\"\n  },\n  {\n    uuid: \"harness_link_418\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_92\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_419\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_93\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/execution\"\n  },\n  {\n    uuid: \"harness_link_420\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_94\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_421\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_95\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/execution\"\n  },\n  {\n    uuid: \"harness_link_422\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_96\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/gitspace\"\n  },\n  {\n    uuid: \"harness_link_423\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_99\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/principal\"\n  },\n  {\n    uuid: \"harness_link_424\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_101\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_425\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_102\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_426\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_103\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_427\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_104\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/lfs\"\n  },\n  {\n    uuid: \"harness_link_428\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_105\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_429\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_106\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/plugin\"\n  },\n  {\n    uuid: \"harness_link_430\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_107\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/execution\"\n  },\n  {\n    uuid: \"harness_link_431\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_108\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/pipeline\"\n  },\n  {\n    uuid: \"harness_link_432\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_110\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_433\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_113\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_434\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_114\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/principal\"\n  },\n  {\n    uuid: \"harness_link_435\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_115\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_436\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_116\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_437\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_118\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_438\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_119\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_439\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_120\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_440\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_121\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_441\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_122\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/gitspace\"\n  },\n  {\n    uuid: \"harness_link_442\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_125\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/infraprovider\"\n  },\n  {\n    uuid: \"harness_link_443\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_126\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/limiter\"\n  },\n  {\n    uuid: \"harness_link_444\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_127\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/logs\"\n  },\n  {\n    uuid: \"harness_link_445\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_128\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/migrate\"\n  },\n  {\n    uuid: \"harness_link_446\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_129\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/connector\"\n  },\n  {\n    uuid: \"harness_link_447\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_131\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/migrate\"\n  },\n  {\n    uuid: \"harness_link_448\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_132\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/migrate\"\n  },\n  {\n    uuid: \"harness_link_449\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_133\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_450\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_134\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/migrate\"\n  },\n  {\n    uuid: \"harness_link_451\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_135\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/infraprovider\"\n  },\n  {\n    uuid: \"harness_link_452\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_136\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_453\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_137\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/lfs\"\n  },\n  {\n    uuid: \"harness_link_454\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_138\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_455\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_139\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_456\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_140\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_457\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_142\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_458\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_145\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_459\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_146\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/infraprovider\"\n  },\n  {\n    uuid: \"harness_link_460\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_147\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_461\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_149\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_462\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_150\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_463\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_151\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/pipeline\"\n  },\n  {\n    uuid: \"harness_link_464\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_152\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_465\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_153\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/gitspace\"\n  },\n  {\n    uuid: \"harness_link_466\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_154\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_467\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_156\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_468\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_157\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_469\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_158\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_470\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_159\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_471\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_161\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/connector\"\n  },\n  {\n    uuid: \"harness_link_472\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_162\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/principal\"\n  },\n  {\n    uuid: \"harness_link_473\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_163\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/check\"\n  },\n  {\n    uuid: \"harness_link_474\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_164\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/pipeline\"\n  },\n  {\n    uuid: \"harness_link_475\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_165\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_476\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_166\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/connector\"\n  },\n  {\n    uuid: \"harness_link_477\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_167\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/check\"\n  },\n  {\n    uuid: \"harness_link_478\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_169\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/check\"\n  },\n  {\n    uuid: \"harness_link_479\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_170\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/gitspace\"\n  },\n  {\n    uuid: \"harness_link_480\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_172\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_481\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_174\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/gitspace\"\n  },\n  {\n    uuid: \"harness_link_482\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_175\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_483\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_177\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_484\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_178\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_485\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_182\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_486\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_183\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_487\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_185\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/check\"\n  },\n  {\n    uuid: \"harness_link_488\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_186\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_489\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_187\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/execution\"\n  },\n  {\n    uuid: \"harness_link_490\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_188\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/gitspace\"\n  },\n  {\n    uuid: \"harness_link_491\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_192\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_492\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_193\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_493\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_194\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_494\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_195\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/execution\"\n  },\n  {\n    uuid: \"harness_link_495\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_196\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/gitspace\"\n  },\n  {\n    uuid: \"harness_link_496\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_197\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/migrate\"\n  },\n  {\n    uuid: \"harness_link_497\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_2\",\n    targetNodeUuid: \"harness_node_198\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/pullreq to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_498\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_3\",\n    targetNodeUuid: \"harness_node_18\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/auth to app/api/auth\"\n  },\n  {\n    uuid: \"harness_link_499\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_3\",\n    targetNodeUuid: \"harness_node_23\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/auth to app/api/auth\"\n  },\n  {\n    uuid: \"harness_link_500\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_3\",\n    targetNodeUuid: \"harness_node_41\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/auth to app/api/auth\"\n  },\n  {\n    uuid: \"harness_link_501\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_3\",\n    targetNodeUuid: \"harness_node_42\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/auth to app/api/auth\"\n  },\n  {\n    uuid: \"harness_link_502\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_3\",\n    targetNodeUuid: \"harness_node_45\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/auth to app/api/auth\"\n  },\n  {\n    uuid: \"harness_link_503\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_3\",\n    targetNodeUuid: \"harness_node_70\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/auth to app/api/auth\"\n  },\n  {\n    uuid: \"harness_link_504\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_3\",\n    targetNodeUuid: \"harness_node_82\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/auth to app/api\"\n  },\n  {\n    uuid: \"harness_link_505\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_3\",\n    targetNodeUuid: \"harness_node_97\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/auth to app/api/auth\"\n  },\n  {\n    uuid: \"harness_link_506\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_3\",\n    targetNodeUuid: \"harness_node_111\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/auth to app/api/auth\"\n  },\n  {\n    uuid: \"harness_link_507\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_3\",\n    targetNodeUuid: \"harness_node_124\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/auth to app/api/auth\"\n  },\n  {\n    uuid: \"harness_link_508\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_3\",\n    targetNodeUuid: \"harness_node_144\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/auth to app/api/auth\"\n  },\n  {\n    uuid: \"harness_link_509\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_3\",\n    targetNodeUuid: \"harness_node_189\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/auth to app/api/auth\"\n  },\n  {\n    uuid: \"harness_link_510\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_3\",\n    targetNodeUuid: \"harness_node_199\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/auth to app/api/auth\"\n  },\n  {\n    uuid: \"harness_link_511\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_6\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/keywordsearch\"\n  },\n  {\n    uuid: \"harness_link_512\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_7\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/principal\"\n  },\n  {\n    uuid: \"harness_link_513\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_8\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/infraprovider\"\n  },\n  {\n    uuid: \"harness_link_514\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_9\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_515\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_10\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/keywordsearch\"\n  },\n  {\n    uuid: \"harness_link_516\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_11\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/connector\"\n  },\n  {\n    uuid: \"harness_link_517\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_12\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/lfs\"\n  },\n  {\n    uuid: \"harness_link_518\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_13\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_519\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_14\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_520\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_15\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/limiter\"\n  },\n  {\n    uuid: \"harness_link_521\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_16\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/migrate\"\n  },\n  {\n    uuid: \"harness_link_522\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_17\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_523\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_20\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/check\"\n  },\n  {\n    uuid: \"harness_link_524\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_21\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/lfs\"\n  },\n  {\n    uuid: \"harness_link_525\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_22\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/keywordsearch\"\n  },\n  {\n    uuid: \"harness_link_526\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_24\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_527\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_25\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_528\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_26\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_529\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_27\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_530\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_28\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/plugin\"\n  },\n  {\n    uuid: \"harness_link_531\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_29\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_532\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_30\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/logs\"\n  },\n  {\n    uuid: \"harness_link_533\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_31\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_534\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_32\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/infraprovider\"\n  },\n  {\n    uuid: \"harness_link_535\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_33\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_536\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_34\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/lfs\"\n  },\n  {\n    uuid: \"harness_link_537\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_35\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/migrate\"\n  },\n  {\n    uuid: \"harness_link_538\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_36\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_539\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_37\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/logs\"\n  },\n  {\n    uuid: \"harness_link_540\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_38\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/pipeline\"\n  },\n  {\n    uuid: \"harness_link_541\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_39\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_542\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_40\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_543\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_44\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/plugin\"\n  },\n  {\n    uuid: \"harness_link_544\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_46\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/migrate\"\n  },\n  {\n    uuid: \"harness_link_545\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_48\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/lfs\"\n  },\n  {\n    uuid: \"harness_link_546\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_49\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/gitspace\"\n  },\n  {\n    uuid: \"harness_link_547\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_51\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_548\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_53\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_549\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_54\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_550\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_55\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_551\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_56\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_552\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_57\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/pipeline\"\n  },\n  {\n    uuid: \"harness_link_553\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_58\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/execution\"\n  },\n  {\n    uuid: \"harness_link_554\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_59\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/principal\"\n  },\n  {\n    uuid: \"harness_link_555\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_60\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/pipeline\"\n  },\n  {\n    uuid: \"harness_link_556\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_61\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_557\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_62\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/execution\"\n  },\n  {\n    uuid: \"harness_link_558\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_63\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/infraprovider\"\n  },\n  {\n    uuid: \"harness_link_559\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_64\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_560\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_65\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_561\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_66\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/lfs\"\n  },\n  {\n    uuid: \"harness_link_562\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_67\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_563\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_68\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/connector\"\n  },\n  {\n    uuid: \"harness_link_564\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_69\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/lfs\"\n  },\n  {\n    uuid: \"harness_link_565\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_71\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/limiter\"\n  },\n  {\n    uuid: \"harness_link_566\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_72\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_567\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_73\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_568\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_74\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_569\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_75\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/principal\"\n  },\n  {\n    uuid: \"harness_link_570\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_76\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/check\"\n  },\n  {\n    uuid: \"harness_link_571\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_77\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_572\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_80\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/check\"\n  },\n  {\n    uuid: \"harness_link_573\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_81\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/logs\"\n  },\n  {\n    uuid: \"harness_link_574\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_82\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api\"\n  },\n  {\n    uuid: \"harness_link_575\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_83\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/connector\"\n  },\n  {\n    uuid: \"harness_link_576\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_85\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_577\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_87\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_578\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_89\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_579\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_91\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/check\"\n  },\n  {\n    uuid: \"harness_link_580\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_92\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_581\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_93\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/execution\"\n  },\n  {\n    uuid: \"harness_link_582\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_94\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_583\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_95\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/execution\"\n  },\n  {\n    uuid: \"harness_link_584\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_96\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/gitspace\"\n  },\n  {\n    uuid: \"harness_link_585\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_99\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/principal\"\n  },\n  {\n    uuid: \"harness_link_586\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_101\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_587\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_102\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_588\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_103\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_589\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_104\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/lfs\"\n  },\n  {\n    uuid: \"harness_link_590\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_105\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_591\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_106\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/plugin\"\n  },\n  {\n    uuid: \"harness_link_592\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_107\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/execution\"\n  },\n  {\n    uuid: \"harness_link_593\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_108\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/pipeline\"\n  },\n  {\n    uuid: \"harness_link_594\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_110\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_595\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_113\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_596\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_114\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/principal\"\n  },\n  {\n    uuid: \"harness_link_597\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_115\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_598\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_116\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_599\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_118\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_600\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_119\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_601\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_120\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_602\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_121\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_603\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_122\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/gitspace\"\n  },\n  {\n    uuid: \"harness_link_604\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_125\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/infraprovider\"\n  },\n  {\n    uuid: \"harness_link_605\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_126\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/limiter\"\n  },\n  {\n    uuid: \"harness_link_606\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_127\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/logs\"\n  },\n  {\n    uuid: \"harness_link_607\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_128\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/migrate\"\n  },\n  {\n    uuid: \"harness_link_608\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_129\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/connector\"\n  },\n  {\n    uuid: \"harness_link_609\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_131\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/migrate\"\n  },\n  {\n    uuid: \"harness_link_610\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_132\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/migrate\"\n  },\n  {\n    uuid: \"harness_link_611\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_133\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_612\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_134\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/migrate\"\n  },\n  {\n    uuid: \"harness_link_613\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_135\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/infraprovider\"\n  },\n  {\n    uuid: \"harness_link_614\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_136\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_615\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_137\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/lfs\"\n  },\n  {\n    uuid: \"harness_link_616\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_138\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_617\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_139\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_618\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_140\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_619\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_142\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_620\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_145\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_621\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_146\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/infraprovider\"\n  },\n  {\n    uuid: \"harness_link_622\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_147\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_623\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_149\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_624\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_150\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_625\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_151\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/pipeline\"\n  },\n  {\n    uuid: \"harness_link_626\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_152\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_627\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_153\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/gitspace\"\n  },\n  {\n    uuid: \"harness_link_628\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_154\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_629\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_156\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_630\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_157\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_631\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_158\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_632\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_159\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_633\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_161\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/connector\"\n  },\n  {\n    uuid: \"harness_link_634\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_162\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/principal\"\n  },\n  {\n    uuid: \"harness_link_635\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_163\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/check\"\n  },\n  {\n    uuid: \"harness_link_636\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_164\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/pipeline\"\n  },\n  {\n    uuid: \"harness_link_637\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_165\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_638\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_166\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/connector\"\n  },\n  {\n    uuid: \"harness_link_639\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_167\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/check\"\n  },\n  {\n    uuid: \"harness_link_640\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_169\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/check\"\n  },\n  {\n    uuid: \"harness_link_641\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_170\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/gitspace\"\n  },\n  {\n    uuid: \"harness_link_642\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_172\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_643\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_174\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/gitspace\"\n  },\n  {\n    uuid: \"harness_link_644\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_175\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_645\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_177\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_646\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_178\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_647\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_182\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_648\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_183\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_649\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_185\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/check\"\n  },\n  {\n    uuid: \"harness_link_650\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_186\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_651\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_187\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/execution\"\n  },\n  {\n    uuid: \"harness_link_652\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_188\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/gitspace\"\n  },\n  {\n    uuid: \"harness_link_653\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_192\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_654\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_193\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_655\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_194\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_656\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_195\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/execution\"\n  },\n  {\n    uuid: \"harness_link_657\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_196\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/gitspace\"\n  },\n  {\n    uuid: \"harness_link_658\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_197\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/migrate\"\n  },\n  {\n    uuid: \"harness_link_659\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_4\",\n    targetNodeUuid: \"harness_node_198\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/connector to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_660\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_7\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/principal\"\n  },\n  {\n    uuid: \"harness_link_661\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_8\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/infraprovider\"\n  },\n  {\n    uuid: \"harness_link_662\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_9\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_663\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_10\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/keywordsearch\"\n  },\n  {\n    uuid: \"harness_link_664\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_11\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/connector\"\n  },\n  {\n    uuid: \"harness_link_665\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_12\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/lfs\"\n  },\n  {\n    uuid: \"harness_link_666\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_13\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_667\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_14\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_668\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_15\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/limiter\"\n  },\n  {\n    uuid: \"harness_link_669\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_16\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/migrate\"\n  },\n  {\n    uuid: \"harness_link_670\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_17\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_671\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_20\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/check\"\n  },\n  {\n    uuid: \"harness_link_672\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_21\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/lfs\"\n  },\n  {\n    uuid: \"harness_link_673\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_22\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/keywordsearch\"\n  },\n  {\n    uuid: \"harness_link_674\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_24\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_675\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_25\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_676\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_26\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_677\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_27\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_678\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_28\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/plugin\"\n  },\n  {\n    uuid: \"harness_link_679\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_29\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_680\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_30\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/logs\"\n  },\n  {\n    uuid: \"harness_link_681\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_31\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_682\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_32\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/infraprovider\"\n  },\n  {\n    uuid: \"harness_link_683\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_33\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_684\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_34\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/lfs\"\n  },\n  {\n    uuid: \"harness_link_685\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_35\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/migrate\"\n  },\n  {\n    uuid: \"harness_link_686\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_36\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_687\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_37\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/logs\"\n  },\n  {\n    uuid: \"harness_link_688\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_38\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/pipeline\"\n  },\n  {\n    uuid: \"harness_link_689\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_39\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_690\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_40\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_691\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_44\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/plugin\"\n  },\n  {\n    uuid: \"harness_link_692\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_46\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/migrate\"\n  },\n  {\n    uuid: \"harness_link_693\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_48\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/lfs\"\n  },\n  {\n    uuid: \"harness_link_694\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_49\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/gitspace\"\n  },\n  {\n    uuid: \"harness_link_695\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_51\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_696\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_53\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_697\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_54\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_698\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_55\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_699\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_56\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_700\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_57\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/pipeline\"\n  },\n  {\n    uuid: \"harness_link_701\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_58\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/execution\"\n  },\n  {\n    uuid: \"harness_link_702\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_59\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/principal\"\n  },\n  {\n    uuid: \"harness_link_703\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_60\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/pipeline\"\n  },\n  {\n    uuid: \"harness_link_704\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_61\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_705\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_62\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/execution\"\n  },\n  {\n    uuid: \"harness_link_706\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_63\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/infraprovider\"\n  },\n  {\n    uuid: \"harness_link_707\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_64\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_708\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_65\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_709\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_66\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/lfs\"\n  },\n  {\n    uuid: \"harness_link_710\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_67\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_711\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_68\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/connector\"\n  },\n  {\n    uuid: \"harness_link_712\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_69\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/lfs\"\n  },\n  {\n    uuid: \"harness_link_713\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_71\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/limiter\"\n  },\n  {\n    uuid: \"harness_link_714\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_72\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_715\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_73\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_716\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_74\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_717\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_75\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/principal\"\n  },\n  {\n    uuid: \"harness_link_718\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_76\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/check\"\n  },\n  {\n    uuid: \"harness_link_719\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_77\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_720\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_80\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/check\"\n  },\n  {\n    uuid: \"harness_link_721\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_81\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/logs\"\n  },\n  {\n    uuid: \"harness_link_722\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_82\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api\"\n  },\n  {\n    uuid: \"harness_link_723\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_83\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/connector\"\n  },\n  {\n    uuid: \"harness_link_724\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_85\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_725\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_87\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_726\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_89\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_727\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_91\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/check\"\n  },\n  {\n    uuid: \"harness_link_728\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_92\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_729\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_93\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/execution\"\n  },\n  {\n    uuid: \"harness_link_730\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_94\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_731\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_95\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/execution\"\n  },\n  {\n    uuid: \"harness_link_732\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_96\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/gitspace\"\n  },\n  {\n    uuid: \"harness_link_733\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_99\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/principal\"\n  },\n  {\n    uuid: \"harness_link_734\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_101\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_735\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_102\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_736\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_103\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_737\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_104\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/lfs\"\n  },\n  {\n    uuid: \"harness_link_738\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_105\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_739\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_106\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/plugin\"\n  },\n  {\n    uuid: \"harness_link_740\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_107\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/execution\"\n  },\n  {\n    uuid: \"harness_link_741\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_108\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/pipeline\"\n  },\n  {\n    uuid: \"harness_link_742\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_110\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_743\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_113\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_744\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_114\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/principal\"\n  },\n  {\n    uuid: \"harness_link_745\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_115\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_746\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_116\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_747\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_118\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_748\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_119\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_749\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_120\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_750\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_121\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_751\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_122\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/gitspace\"\n  },\n  {\n    uuid: \"harness_link_752\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_125\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/infraprovider\"\n  },\n  {\n    uuid: \"harness_link_753\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_126\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/limiter\"\n  },\n  {\n    uuid: \"harness_link_754\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_127\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/logs\"\n  },\n  {\n    uuid: \"harness_link_755\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_128\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/migrate\"\n  },\n  {\n    uuid: \"harness_link_756\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_129\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/connector\"\n  },\n  {\n    uuid: \"harness_link_757\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_131\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/migrate\"\n  },\n  {\n    uuid: \"harness_link_758\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_132\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/migrate\"\n  },\n  {\n    uuid: \"harness_link_759\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_133\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_760\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_134\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/migrate\"\n  },\n  {\n    uuid: \"harness_link_761\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_135\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/infraprovider\"\n  },\n  {\n    uuid: \"harness_link_762\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_136\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_763\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_137\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/lfs\"\n  },\n  {\n    uuid: \"harness_link_764\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_138\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_765\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_139\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_766\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_140\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_767\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_142\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_768\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_145\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_769\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_146\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/infraprovider\"\n  },\n  {\n    uuid: \"harness_link_770\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_147\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_771\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_149\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_772\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_150\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_773\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_151\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/pipeline\"\n  },\n  {\n    uuid: \"harness_link_774\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_152\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_775\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_153\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/gitspace\"\n  },\n  {\n    uuid: \"harness_link_776\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_154\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_777\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_156\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_778\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_157\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_779\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_158\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_780\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_159\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_781\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_161\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/connector\"\n  },\n  {\n    uuid: \"harness_link_782\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_162\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/principal\"\n  },\n  {\n    uuid: \"harness_link_783\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_163\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/check\"\n  },\n  {\n    uuid: \"harness_link_784\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_164\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/pipeline\"\n  },\n  {\n    uuid: \"harness_link_785\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_165\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_786\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_166\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/connector\"\n  },\n  {\n    uuid: \"harness_link_787\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_167\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/check\"\n  },\n  {\n    uuid: \"harness_link_788\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_169\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/check\"\n  },\n  {\n    uuid: \"harness_link_789\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_170\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/gitspace\"\n  },\n  {\n    uuid: \"harness_link_790\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_172\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_791\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_174\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/gitspace\"\n  },\n  {\n    uuid: \"harness_link_792\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_175\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_793\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_177\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_794\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_178\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_795\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_182\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_796\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_183\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_797\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_185\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/check\"\n  },\n  {\n    uuid: \"harness_link_798\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_186\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_799\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_187\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/execution\"\n  },\n  {\n    uuid: \"harness_link_800\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_188\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/gitspace\"\n  },\n  {\n    uuid: \"harness_link_801\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_192\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_802\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_193\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_803\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_194\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_804\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_195\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/execution\"\n  },\n  {\n    uuid: \"harness_link_805\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_196\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/gitspace\"\n  },\n  {\n    uuid: \"harness_link_806\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_197\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/migrate\"\n  },\n  {\n    uuid: \"harness_link_807\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_6\",\n    targetNodeUuid: \"harness_node_198\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/keywordsearch to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_808\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_8\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/infraprovider\"\n  },\n  {\n    uuid: \"harness_link_809\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_9\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_810\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_10\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/keywordsearch\"\n  },\n  {\n    uuid: \"harness_link_811\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_11\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/connector\"\n  },\n  {\n    uuid: \"harness_link_812\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_12\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/lfs\"\n  },\n  {\n    uuid: \"harness_link_813\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_13\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_814\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_14\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_815\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_15\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/limiter\"\n  },\n  {\n    uuid: \"harness_link_816\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_16\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/migrate\"\n  },\n  {\n    uuid: \"harness_link_817\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_17\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_818\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_20\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/check\"\n  },\n  {\n    uuid: \"harness_link_819\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_21\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/lfs\"\n  },\n  {\n    uuid: \"harness_link_820\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_22\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/keywordsearch\"\n  },\n  {\n    uuid: \"harness_link_821\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_24\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_822\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_25\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_823\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_26\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_824\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_27\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_825\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_28\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/plugin\"\n  },\n  {\n    uuid: \"harness_link_826\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_29\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_827\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_30\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/logs\"\n  },\n  {\n    uuid: \"harness_link_828\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_31\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_829\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_32\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/infraprovider\"\n  },\n  {\n    uuid: \"harness_link_830\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_33\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_831\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_34\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/lfs\"\n  },\n  {\n    uuid: \"harness_link_832\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_35\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/migrate\"\n  },\n  {\n    uuid: \"harness_link_833\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_36\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_834\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_37\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/logs\"\n  },\n  {\n    uuid: \"harness_link_835\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_38\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/pipeline\"\n  },\n  {\n    uuid: \"harness_link_836\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_39\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_837\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_40\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_838\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_44\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/plugin\"\n  },\n  {\n    uuid: \"harness_link_839\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_46\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/migrate\"\n  },\n  {\n    uuid: \"harness_link_840\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_48\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/lfs\"\n  },\n  {\n    uuid: \"harness_link_841\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_49\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/gitspace\"\n  },\n  {\n    uuid: \"harness_link_842\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_51\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_843\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_53\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_844\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_54\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_845\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_55\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_846\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_56\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_847\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_57\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/pipeline\"\n  },\n  {\n    uuid: \"harness_link_848\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_58\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/execution\"\n  },\n  {\n    uuid: \"harness_link_849\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_59\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/principal\"\n  },\n  {\n    uuid: \"harness_link_850\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_60\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/pipeline\"\n  },\n  {\n    uuid: \"harness_link_851\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_61\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_852\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_62\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/execution\"\n  },\n  {\n    uuid: \"harness_link_853\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_63\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/infraprovider\"\n  },\n  {\n    uuid: \"harness_link_854\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_64\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_855\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_65\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_856\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_66\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/lfs\"\n  },\n  {\n    uuid: \"harness_link_857\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_67\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_858\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_68\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/connector\"\n  },\n  {\n    uuid: \"harness_link_859\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_69\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/lfs\"\n  },\n  {\n    uuid: \"harness_link_860\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_71\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/limiter\"\n  },\n  {\n    uuid: \"harness_link_861\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_72\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_862\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_73\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_863\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_74\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_864\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_75\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/principal\"\n  },\n  {\n    uuid: \"harness_link_865\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_76\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/check\"\n  },\n  {\n    uuid: \"harness_link_866\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_77\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_867\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_80\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/check\"\n  },\n  {\n    uuid: \"harness_link_868\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_81\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/logs\"\n  },\n  {\n    uuid: \"harness_link_869\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_82\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api\"\n  },\n  {\n    uuid: \"harness_link_870\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_83\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/connector\"\n  },\n  {\n    uuid: \"harness_link_871\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_85\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_872\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_87\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_873\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_89\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_874\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_91\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/check\"\n  },\n  {\n    uuid: \"harness_link_875\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_92\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_876\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_93\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/execution\"\n  },\n  {\n    uuid: \"harness_link_877\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_94\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_878\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_95\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/execution\"\n  },\n  {\n    uuid: \"harness_link_879\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_96\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/gitspace\"\n  },\n  {\n    uuid: \"harness_link_880\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_99\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/principal\"\n  },\n  {\n    uuid: \"harness_link_881\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_101\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_882\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_102\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_883\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_103\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_884\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_104\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/lfs\"\n  },\n  {\n    uuid: \"harness_link_885\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_105\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_886\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_106\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/plugin\"\n  },\n  {\n    uuid: \"harness_link_887\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_107\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/execution\"\n  },\n  {\n    uuid: \"harness_link_888\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_108\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/pipeline\"\n  },\n  {\n    uuid: \"harness_link_889\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_110\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_890\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_113\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_891\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_114\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/principal\"\n  },\n  {\n    uuid: \"harness_link_892\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_115\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_893\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_116\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_894\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_118\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_895\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_119\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_896\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_120\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_897\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_121\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_898\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_122\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/gitspace\"\n  },\n  {\n    uuid: \"harness_link_899\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_125\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/infraprovider\"\n  },\n  {\n    uuid: \"harness_link_900\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_126\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/limiter\"\n  },\n  {\n    uuid: \"harness_link_901\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_127\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/logs\"\n  },\n  {\n    uuid: \"harness_link_902\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_128\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/migrate\"\n  },\n  {\n    uuid: \"harness_link_903\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_129\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/connector\"\n  },\n  {\n    uuid: \"harness_link_904\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_131\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/migrate\"\n  },\n  {\n    uuid: \"harness_link_905\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_132\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/migrate\"\n  },\n  {\n    uuid: \"harness_link_906\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_133\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_907\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_134\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/migrate\"\n  },\n  {\n    uuid: \"harness_link_908\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_135\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/infraprovider\"\n  },\n  {\n    uuid: \"harness_link_909\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_136\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_910\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_137\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/lfs\"\n  },\n  {\n    uuid: \"harness_link_911\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_138\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_912\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_139\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_913\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_140\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_914\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_142\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_915\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_145\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_916\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_146\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/infraprovider\"\n  },\n  {\n    uuid: \"harness_link_917\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_147\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_918\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_149\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_919\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_150\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_920\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_151\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/pipeline\"\n  },\n  {\n    uuid: \"harness_link_921\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_152\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_922\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_153\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/gitspace\"\n  },\n  {\n    uuid: \"harness_link_923\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_154\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_924\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_156\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_925\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_157\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_926\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_158\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_927\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_159\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_928\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_161\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/connector\"\n  },\n  {\n    uuid: \"harness_link_929\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_162\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/principal\"\n  },\n  {\n    uuid: \"harness_link_930\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_163\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/check\"\n  },\n  {\n    uuid: \"harness_link_931\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_164\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/pipeline\"\n  },\n  {\n    uuid: \"harness_link_932\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_165\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_933\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_166\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/connector\"\n  },\n  {\n    uuid: \"harness_link_934\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_167\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/check\"\n  },\n  {\n    uuid: \"harness_link_935\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_169\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/check\"\n  },\n  {\n    uuid: \"harness_link_936\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_170\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/gitspace\"\n  },\n  {\n    uuid: \"harness_link_937\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_172\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_938\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_174\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/gitspace\"\n  },\n  {\n    uuid: \"harness_link_939\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_175\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_940\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_177\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_941\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_178\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_942\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_182\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_943\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_183\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_944\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_185\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/check\"\n  },\n  {\n    uuid: \"harness_link_945\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_186\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_946\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_187\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/execution\"\n  },\n  {\n    uuid: \"harness_link_947\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_188\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/gitspace\"\n  },\n  {\n    uuid: \"harness_link_948\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_192\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_949\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_193\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_950\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_194\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_951\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_195\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/execution\"\n  },\n  {\n    uuid: \"harness_link_952\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_196\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/gitspace\"\n  },\n  {\n    uuid: \"harness_link_953\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_197\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/migrate\"\n  },\n  {\n    uuid: \"harness_link_954\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_7\",\n    targetNodeUuid: \"harness_node_198\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/principal to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_955\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_8\",\n    targetNodeUuid: \"harness_node_9\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_956\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_8\",\n    targetNodeUuid: \"harness_node_10\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/keywordsearch\"\n  },\n  {\n    uuid: \"harness_link_957\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_8\",\n    targetNodeUuid: \"harness_node_11\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/connector\"\n  },\n  {\n    uuid: \"harness_link_958\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_8\",\n    targetNodeUuid: \"harness_node_12\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/lfs\"\n  },\n  {\n    uuid: \"harness_link_959\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_8\",\n    targetNodeUuid: \"harness_node_13\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_960\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_8\",\n    targetNodeUuid: \"harness_node_14\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_961\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_8\",\n    targetNodeUuid: \"harness_node_15\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/limiter\"\n  },\n  {\n    uuid: \"harness_link_962\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_8\",\n    targetNodeUuid: \"harness_node_16\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/migrate\"\n  },\n  {\n    uuid: \"harness_link_963\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_8\",\n    targetNodeUuid: \"harness_node_17\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_964\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_8\",\n    targetNodeUuid: \"harness_node_20\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/check\"\n  },\n  {\n    uuid: \"harness_link_965\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_8\",\n    targetNodeUuid: \"harness_node_21\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/lfs\"\n  },\n  {\n    uuid: \"harness_link_966\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_8\",\n    targetNodeUuid: \"harness_node_22\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/keywordsearch\"\n  },\n  {\n    uuid: \"harness_link_967\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_8\",\n    targetNodeUuid: \"harness_node_24\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_968\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_8\",\n    targetNodeUuid: \"harness_node_25\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_969\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_8\",\n    targetNodeUuid: \"harness_node_26\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_970\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_8\",\n    targetNodeUuid: \"harness_node_27\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_971\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_8\",\n    targetNodeUuid: \"harness_node_28\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/plugin\"\n  },\n  {\n    uuid: \"harness_link_972\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_8\",\n    targetNodeUuid: \"harness_node_29\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_973\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_8\",\n    targetNodeUuid: \"harness_node_30\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/logs\"\n  },\n  {\n    uuid: \"harness_link_974\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_8\",\n    targetNodeUuid: \"harness_node_31\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_975\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_8\",\n    targetNodeUuid: \"harness_node_32\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/infraprovider\"\n  },\n  {\n    uuid: \"harness_link_976\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_8\",\n    targetNodeUuid: \"harness_node_33\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_977\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_8\",\n    targetNodeUuid: \"harness_node_34\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/lfs\"\n  },\n  {\n    uuid: \"harness_link_978\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_8\",\n    targetNodeUuid: \"harness_node_35\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/migrate\"\n  },\n  {\n    uuid: \"harness_link_979\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_8\",\n    targetNodeUuid: \"harness_node_36\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_980\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_8\",\n    targetNodeUuid: \"harness_node_37\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/logs\"\n  },\n  {\n    uuid: \"harness_link_981\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_8\",\n    targetNodeUuid: \"harness_node_38\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pipeline\"\n  },\n  {\n    uuid: \"harness_link_982\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_8\",\n    targetNodeUuid: \"harness_node_39\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_983\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_8\",\n    targetNodeUuid: \"harness_node_40\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_984\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_8\",\n    targetNodeUuid: \"harness_node_44\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/plugin\"\n  },\n  {\n    uuid: \"harness_link_985\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_8\",\n    targetNodeUuid: \"harness_node_46\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/migrate\"\n  },\n  {\n    uuid: \"harness_link_986\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_8\",\n    targetNodeUuid: \"harness_node_48\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/lfs\"\n  },\n  {\n    uuid: \"harness_link_987\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_8\",\n    targetNodeUuid: \"harness_node_49\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/gitspace\"\n  },\n  {\n    uuid: \"harness_link_988\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_8\",\n    targetNodeUuid: \"harness_node_51\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_989\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_8\",\n    targetNodeUuid: \"harness_node_53\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_990\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_8\",\n    targetNodeUuid: \"harness_node_54\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_991\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_8\",\n    targetNodeUuid: \"harness_node_55\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_992\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_8\",\n    targetNodeUuid: \"harness_node_56\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/repo\"\n  },\n  {\n    uuid: \"harness_link_993\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_8\",\n    targetNodeUuid: \"harness_node_57\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pipeline\"\n  },\n  {\n    uuid: \"harness_link_994\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_8\",\n    targetNodeUuid: \"harness_node_58\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/execution\"\n  },\n  {\n    uuid: \"harness_link_995\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_8\",\n    targetNodeUuid: \"harness_node_59\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/principal\"\n  },\n  {\n    uuid: \"harness_link_996\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_8\",\n    targetNodeUuid: \"harness_node_60\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pipeline\"\n  },\n  {\n    uuid: \"harness_link_997\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_8\",\n    targetNodeUuid: \"harness_node_61\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pullreq\"\n  },\n  {\n    uuid: \"harness_link_998\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_8\",\n    targetNodeUuid: \"harness_node_62\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/execution\"\n  },\n  {\n    uuid: \"harness_link_999\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_8\",\n    targetNodeUuid: \"harness_node_63\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/infraprovider\"\n  },\n  {\n    uuid: \"harness_link_1000\",\n    type: \"Import\",\n    sourceNodeUuid: \"harness_node_8\",\n    targetNodeUuid: \"harness_node_64\",\n    color: [\n      0.2,\n      0.4,\n      0.8\n    ],\n    confidence: 0.7,\n    direction: \"unidirectional\",\n    reason: \"Potential import from app/api/controller/infraprovider to app/api/controller/pullreq\"\n  }\n];\n\n// Summary statistics removed - was unused\n",
      "patterns": {
        "functions": 0,
        "classes": 0,
        "interfaces": 2,
        "exports": 2,
        "imports": 956,
        "anyTypes": 0,
        "typeAssertions": 1,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/renderers/unifiedDataRenderer/managers/laneManager.ts",
      "relativePath": "shared/modules/renderers/unifiedDataRenderer/managers/laneManager.ts",
      "name": "laneManager.ts",
      "size": 14860,
      "lines": 422,
      "lastModified": "2025-07-11T00:13:21.004Z",
      "content": "/**\n * Lane Manager\n * Handles creation and management of X-parallel and Z-parallel lanes\n */\n\nimport { Cluster, Node } from \"../../../../interfaces/simpleDataGenerator.interface\";\nimport { EnhancedGeneratorConfig } from \"../../../../interfaces/enhancedGenerator.interface\";\nimport {\n  LaneBounds,\n  PropertyBounds,\n  LaneDimensions,\n  LaneManagerResult\n} from \"../types\";\nimport { PropertyValueResolver } from \"../../propertyValueResolver\";\nimport { EndcapBlockCreator } from \"../../blocks/endcapBlockCreator\";\nimport { SwimLaneBlockCreator } from \"../../blocks/swimlaneBlockCreator\";\nimport { ShadowBlockCreator } from \"../../blocks/shadowBlockCreator\";\nimport { BLOCK_CONSTANTS } from \"../../constants/blockConstants\";\nimport { getDefaultXAxis, getDefaultZAxis } from \"../../../../constants/axisDefaults\";\n\nexport class LaneManager {\n  private propertyResolver: PropertyValueResolver;\n  private endcapCreator: EndcapBlockCreator;\n  private swimlaneCreator: SwimLaneBlockCreator;\n  private shadowCreator: ShadowBlockCreator;\n\n  constructor() {\n    this.propertyResolver = new PropertyValueResolver();\n    this.endcapCreator = new EndcapBlockCreator();\n    this.swimlaneCreator = new SwimLaneBlockCreator();\n    this.shadowCreator = new ShadowBlockCreator();\n  }\n\n  /**\n   * Creates all lanes (both X-parallel and Z-parallel) and returns the result\n   */\n  public createAllLanes(\n    cluster: Cluster,\n    targetOrigin: Vector3,\n    config: EnhancedGeneratorConfig,\n    lanesParent: Instance\n  ): LaneManagerResult {\n    // Create Z-parallel lanes first (lanes that run along Z axis)\n    const zParallelModel = new Instance(\"Model\");\n    zParallelModel.Name = `ZParallel_Lanes_Group`;\n    zParallelModel.Parent = lanesParent;\n\n    const zParallelLanes = this.createZParallelLaneBlocks(\n      cluster,\n      zParallelModel,\n      targetOrigin,\n      config\n    );\n\n    // Now create X-parallel lanes (lanes that run along X axis)\n    const xParallelModel = new Instance(\"Model\");\n    xParallelModel.Name = `XParallel_Lanes_Group`;\n    xParallelModel.Parent = lanesParent;\n\n    // Pass the Z-parallel lanes so we can calculate proper bounds\n    const xParallelLanes = this.createXParallelLaneBlocks(\n      cluster,\n      xParallelModel,\n      targetOrigin,\n      config,\n      zParallelLanes\n    );\n\n    // Calculate bounds for all lanes\n    const allLaneBounds = this.calculateLaneBounds(\n      xParallelLanes,\n      zParallelLanes\n    );\n\n    return {\n      xParallelLanes,\n      zParallelLanes,\n      allLaneBounds\n    };\n  }\n\n  /**\n   * Creates Z-parallel lane blocks (lanes that run along Z axis, grouped by X position)\n   */\n  public createZParallelLaneBlocks(\n    cluster: Cluster,\n    parent: Instance,\n    _origin: Vector3,\n    config: EnhancedGeneratorConfig\n  ): Map<string, Part> {\n    const swimlaneBlocks = new Map<string, Part>();\n    // Use axis mapping if available - X axis sorts on service for Harness data\n    const xAxisProperty = config.axisMapping?.xAxis || getDefaultXAxis(cluster.discoveredProperties);\n\n    // Organize nodes by X grouping property to determine lane placement\n    const nodesByType = new Map<string, Node[]>();\n    const typeBounds = new Map<string, PropertyBounds>();\n\n    // Get node radius from spacing config\n    const nodeRadius = config?.spacing?.nodeRadius || 0.5;\n    print(`[SWIMLANE CALC] Using nodeRadius=${nodeRadius}`);\n    \n    // Group nodes by X grouping property and calculate bounds\n    cluster.groups[0].nodes.forEach((node: Node) => {\n      const propertyValue = this.propertyResolver.getPropertyValue(\n        node,\n        xAxisProperty\n      );\n      \n      if (!nodesByType.has(propertyValue)) {\n        nodesByType.set(propertyValue, []);\n        typeBounds.set(propertyValue, {\n          minX: math.huge,\n          maxX: -math.huge,\n          minZ: math.huge,\n          maxZ: -math.huge,\n        });\n      }\n\n      nodesByType.get(propertyValue)!.push(node);\n\n      const bounds = typeBounds.get(propertyValue)!;\n      const oldMinX = bounds.minX;\n      const oldMaxX = bounds.maxX;\n      \n      // Account for node radius when calculating bounds\n      bounds.minX = math.min(bounds.minX, node.position.x - nodeRadius);\n      bounds.maxX = math.max(bounds.maxX, node.position.x + nodeRadius);\n      bounds.minZ = math.min(bounds.minZ, node.position.z - nodeRadius);\n      bounds.maxZ = math.max(bounds.maxZ, node.position.z + nodeRadius);\n      \n      // Debug first few nodes of each type\n      if (nodesByType.get(propertyValue)!.size() <= 3) {\n        print(`[SWIMLANE CALC] ${propertyValue} node #${nodesByType.get(propertyValue)!.size()}: pos.x=${node.position.x}, bounds updated from (${oldMinX},${oldMaxX}) to (${bounds.minX},${bounds.maxX})`);\n      }\n    });\n\n    // Create a block for each swimlane based on actual node positions\n    let swimlaneIndex = 0;\n\n    // Find the overall Z bounds across all lanes\n    let overallMinZ = math.huge;\n    let overallMaxZ = -math.huge;\n    \n    nodesByType.forEach((_nodes: Node[], typeName: string) => {\n      const bounds = typeBounds.get(typeName)!;\n      overallMinZ = math.min(overallMinZ, bounds.minZ);\n      overallMaxZ = math.max(overallMaxZ, bounds.maxZ);\n    });\n    \n    // Calculate the common center Z position for all lanes\n    const commonCenterZ = (overallMinZ + overallMaxZ) / 2;\n\n    nodesByType.forEach((nodes: Node[], typeName: string) => {\n      const bounds = typeBounds.get(typeName)!;\n\n      // Use actual node bounds to determine X position\n      const centerX = (bounds.minX + bounds.maxX) / 2;\n      // Use the common center Z for all lanes to ensure alignment\n      const centerZ = commonCenterZ;\n\n      // Calculate actual swimlane dimensions based on node bounds\n\n      // Apply buffer to dimensions\n      const zBuffer = BLOCK_CONSTANTS.DIMENSIONS.Z_PARALLEL_LANE_BUFFER;\n\n      // Calculate this lane's specific width based on its actual node bounds - NO BUFFER!\n      const laneWidth = bounds.maxX - bounds.minX;\n      const blockWidth = laneWidth; // No buffer on X-axis to prevent overlap\n      // Use the overall Z extent for all lanes to ensure uniform Z-length\n      const blockDepth = (overallMaxZ - overallMinZ) + zBuffer * 2;\n      \n      // Debug: Print width of Z-parallel swimlane with node count\n      print(`[Z-PARALLEL LANE] ${typeName}: nodes=${nodes.size()}, width=${blockWidth} (laneWidth=${laneWidth}, bounds=${bounds.minX} to ${bounds.maxX})`)\n\n      // Fixed Y position for Z-parallel lane blocks - use SHADOW_LAYER_DISPLACEMENT above shadow block\n      // Shadow block is at Y = 1.6 (top at 2.1)\n      // X-axis blocks should have their tops at 2.1 + SHADOW_LAYER_DISPLACEMENT\n      const shadowBlockTop =\n        BLOCK_CONSTANTS.DIMENSIONS.UNIFORM_SHADOW_THICKNESS +\n        BLOCK_CONSTANTS.DIMENSIONS.Z_FIGHTING_OFFSET +\n        BLOCK_CONSTANTS.DIMENSIONS.UNIFORM_SHADOW_THICKNESS / 2;\n      const blockYPosition =\n        shadowBlockTop +\n        BLOCK_CONSTANTS.DIMENSIONS.SHADOW_LAYER_DISPLACEMENT +\n        BLOCK_CONSTANTS.DIMENSIONS.Z_TO_X_SHADOW_LANE_SPACING; // Above X shadow lanes to avoid z-fighting\n\n      // Get color from Z_AXIS_COLORS array using swimlane index\n      const colors = BLOCK_CONSTANTS.COLORS.Z_AXIS_COLORS;\n      const color = colors[swimlaneIndex % colors.size()];\n\n      // Create swimlane block\n      const swimlaneBlock = this.swimlaneCreator.createSwimLaneBlock({\n        position: new Vector3(centerX, blockYPosition, centerZ),\n        width: blockWidth,\n        depth: blockDepth,\n        height: BLOCK_CONSTANTS.DIMENSIONS.UNIFORM_SHADOW_THICKNESS,\n        color: color,\n        typeName: typeName,\n        parent: parent,\n        propertyName: xAxisProperty,\n      });\n\n      // Create swimlane model with endcaps\n      this.endcapCreator.createSwimlaneWithEndcaps({\n        swimlaneBlock: swimlaneBlock,\n        swimlaneName: typeName,\n        parent: parent,\n        gap: 2, // Increased gap for person endcaps\n        isZAxis: false,\n      });\n\n      // Store the block in the map (still store the block, not the model)\n      swimlaneBlocks.set(typeName, swimlaneBlock);\n\n      swimlaneIndex++;\n    });\n\n    return swimlaneBlocks;\n  }\n\n  /**\n   * Creates X-parallel lane blocks (lanes that run along X axis, grouped by Z position)\n   */\n  public createXParallelLaneBlocks(\n    cluster: Cluster,\n    parent: Instance,\n    targetOrigin: Vector3,\n    config: EnhancedGeneratorConfig | undefined,\n    zParallelLanes: Map<string, Part>\n  ): Map<string, Part> {\n    const swimlaneBlocks = new Map<string, Part>();\n    // Use axis mapping if available - Z axis sorts on type for Harness data\n    const zAxisProperty = config?.axisMapping?.zAxis || getDefaultZAxis(cluster.discoveredProperties);\n\n    // Organize nodes by z-axis property\n    const nodesByProperty = new Map<string, Node[]>();\n\n    cluster.groups[0].nodes.forEach((node: Node) => {\n      const propertyValue = this.propertyResolver.getPropertyValue(\n        node,\n        zAxisProperty\n      );\n      if (!nodesByProperty.has(propertyValue)) {\n        nodesByProperty.set(propertyValue, []);\n      }\n      nodesByProperty.get(propertyValue)!.push(node);\n    });\n\n    // Calculate dimensions based on content\n    const { lanePositions } =\n      this.calculateXParallelLaneDimensions(nodesByProperty);\n\n    // Create property bounds - X-parallel lanes should span full width of Z-parallel lanes\n    const propertyBounds = new Map<string, PropertyBounds>();\n\n    // Calculate the actual X extent from the Z-parallel lanes\n    let fullMinX = math.huge;\n    let fullMaxX = -math.huge;\n\n    zParallelLanes.forEach((lane: Part) => {\n      const halfWidth = lane.Size.X / 2;\n      fullMinX = math.min(fullMinX, lane.Position.X - halfWidth);\n      fullMaxX = math.max(fullMaxX, lane.Position.X + halfWidth);\n    });\n\n    // Set same X bounds for all X-parallel lanes\n    lanePositions.forEach((position: { z: number; minZ: number; maxZ: number }, propertyValue: string) => {\n      propertyBounds.set(propertyValue, {\n        minX: fullMinX,\n        maxX: fullMaxX,\n        minZ: position.minZ,\n        maxZ: position.maxZ,\n      });\n    });\n\n    // Create X-parallel shadow blocks with fixed dimensions\n    const shadowBlockTop =\n      BLOCK_CONSTANTS.DIMENSIONS.UNIFORM_SHADOW_THICKNESS +\n      BLOCK_CONSTANTS.DIMENSIONS.Z_FIGHTING_OFFSET +\n      BLOCK_CONSTANTS.DIMENSIONS.UNIFORM_SHADOW_THICKNESS / 2;\n    const yPosition =\n      shadowBlockTop + BLOCK_CONSTANTS.DIMENSIONS.SHADOW_LAYER_DISPLACEMENT;\n\n    this.shadowCreator.createXParallelShadowBlocks(\n      nodesByProperty,\n      propertyBounds,\n      parent,\n      yPosition,\n      swimlaneBlocks,\n      zAxisProperty,\n      targetOrigin\n    );\n    return swimlaneBlocks;\n  }\n\n  /**\n   * Calculate the required dimensions for X-parallel lanes based on content\n   */\n  public calculateXParallelLaneDimensions(\n    nodesByProperty: Map<string, Node[]>\n  ): LaneDimensions {\n    // Calculate Z positions for each lane\n    const lanePositions = new Map<\n      string,\n      { z: number; minZ: number; maxZ: number }\n    >();\n\n    // Collect actual Z bounds for each property group and store with property names\n    const boundsArray: Array<\n      [string, { minZ: number; maxZ: number; centerZ: number }]\n    > = [];\n\n    nodesByProperty.forEach((nodes: Node[], propertyValue: string) => {\n      let minZ = math.huge;\n      let maxZ = -math.huge;\n      nodes.forEach((node: Node) => {\n        minZ = math.min(minZ, node.position.z);\n        maxZ = math.max(maxZ, node.position.z);\n      });\n      const centerZ = (minZ + maxZ) / 2;\n      boundsArray.push([propertyValue, { minZ, maxZ, centerZ }]);\n    });\n\n    // Sort by center Z position to maintain proper ordering\n    boundsArray.sort((a: [string, { minZ: number; maxZ: number; centerZ: number }], b: [string, { minZ: number; maxZ: number; centerZ: number }]) => a[1].centerZ < b[1].centerZ);\n\n    // Assign lane positions based on actual positions\n    boundsArray.forEach(([propertyValue, bounds]: [string, { minZ: number; maxZ: number; centerZ: number }]) => {\n      lanePositions.set(propertyValue, {\n        z: bounds.centerZ, // Use actual center position\n        minZ: bounds.minZ,\n        maxZ: bounds.maxZ,\n      });\n    });\n\n    return { lanePositions };\n  }\n\n  /**\n   * Calculate bounds for all lanes to determine shadow size\n   */\n  public calculateLaneBounds(\n    xParallelLanes: Map<string, Part>,\n    zParallelLanes: Map<string, Part>\n  ): LaneBounds {\n    let minX = math.huge;\n    let maxX = -math.huge;\n    let minZ = math.huge;\n    let maxZ = -math.huge;\n\n    // Check X-parallel lanes\n    xParallelLanes.forEach((block: Part) => {\n      const halfWidth = block.Size.X / 2;\n      const halfDepth = block.Size.Z / 2;\n      minX = math.min(minX, block.Position.X - halfWidth);\n      maxX = math.max(maxX, block.Position.X + halfWidth);\n      minZ = math.min(minZ, block.Position.Z - halfDepth);\n      maxZ = math.max(maxZ, block.Position.Z + halfDepth);\n    });\n\n    // Check Z-parallel lanes\n    zParallelLanes.forEach((block: Part) => {\n      const halfWidth = block.Size.X / 2;\n      const halfDepth = block.Size.Z / 2;\n      minX = math.min(minX, block.Position.X - halfWidth);\n      maxX = math.max(maxX, block.Position.X + halfWidth);\n      minZ = math.min(minZ, block.Position.Z - halfDepth);\n      maxZ = math.max(maxZ, block.Position.Z + halfDepth);\n    });\n\n    return {\n      width: maxX - minX,\n      depth: maxZ - minZ,\n    };\n  }\n\n  /**\n   * Calculate the Z-axis offset needed to center lanes\n   */\n  public calculateZAxisOffset(\n    cluster: Cluster,\n    zAxisProperty: string\n  ): number {\n    // Organize nodes by z-axis property and find bounds\n    const propertyBounds = new Map<string, { minZ: number; maxZ: number }>();\n\n    cluster.groups[0].nodes.forEach((node: Node) => {\n      const propertyValue = this.propertyResolver.getPropertyValue(\n        node,\n        zAxisProperty\n      );\n      if (!propertyBounds.has(propertyValue)) {\n        propertyBounds.set(propertyValue, {\n          minZ: math.huge,\n          maxZ: -math.huge,\n        });\n      }\n\n      const bounds = propertyBounds.get(propertyValue)!;\n      bounds.minZ = math.min(bounds.minZ, node.position.z);\n      bounds.maxZ = math.max(bounds.maxZ, node.position.z);\n    });\n\n    // Calculate collective bounds of all Z-axis lanes\n    let collectiveMinZ = math.huge;\n    let collectiveMaxZ = -math.huge;\n\n    propertyBounds.forEach((bounds: { minZ: number; maxZ: number }) => {\n      collectiveMinZ = math.min(collectiveMinZ, bounds.minZ);\n      collectiveMaxZ = math.max(collectiveMaxZ, bounds.maxZ);\n    });\n\n    // Calculate the center of the collective Z-axis lanes\n    const collectiveCenter = (collectiveMinZ + collectiveMaxZ) / 2;\n\n    // The group shadow block is centered at Z=0, so we need to offset the lanes\n    const offsetZ = 0 - collectiveCenter;\n\n    return offsetZ;\n  }\n}",
      "patterns": {
        "functions": 13,
        "classes": 1,
        "interfaces": 0,
        "exports": 1,
        "imports": 9,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/renderers/unifiedDataRenderer/core/positionCalculator.ts",
      "relativePath": "shared/modules/renderers/unifiedDataRenderer/core/positionCalculator.ts",
      "name": "positionCalculator.ts",
      "size": 14113,
      "lines": 397,
      "lastModified": "2025-07-11T04:09:35.139Z",
      "content": "/**\n * Position Calculator for Unified Data Renderer\n * \n * Handles swim lane positioning and origin centering for nodes\n * Refactored into modular internal classes for better organization\n */\n\nimport { Cluster, Node } from \"../../../../interfaces/simpleDataGenerator.interface\";\nimport { EnhancedGeneratorConfig } from \"../../../../interfaces/enhancedGenerator.interface\";\nimport { IPositionCalculator, SpacingConfig } from \"../interfaces\";\nimport { RENDERER_CONSTANTS } from \"../../dataGeneratorRobloxRendererUtils/constants\";\nimport { PropertyValueResolver } from \"../../propertyValueResolver\";\nimport { POSITION_CONSTANTS } from \"../../constants/positionConstants\";\nimport { getDefaultXAxis, getDefaultZAxis } from \"../../../../constants/axisDefaults\";\n\n/**\n * Bounds Calculator - Handles cluster boundary calculations\n */\nclass BoundsCalculator {\n  /**\n   * Calculate bounds of the cluster\n   */\n  public calculateBounds(cluster: Cluster): { minX: number, maxX: number, minY: number, minZ: number, maxZ: number } {\n    let minX = math.huge;\n    let maxX = -math.huge;\n    let minY = math.huge;\n    let minZ = math.huge;\n    let maxZ = -math.huge;\n    \n    cluster.groups[0].nodes.forEach(node => {\n      minX = math.min(minX, node.position.x);\n      maxX = math.max(maxX, node.position.x);\n      minY = math.min(minY, node.position.y);\n      minZ = math.min(minZ, node.position.z);\n      maxZ = math.max(maxZ, node.position.z);\n    });\n    \n    return { minX, maxX, minY, minZ, maxZ };\n  }\n}\n\n/**\n * Position Mapper - Handles position transformations and property mapping\n */\nclass PositionMapper {\n  private propertyResolver: PropertyValueResolver;\n\n  constructor(propertyResolver: PropertyValueResolver) {\n    this.propertyResolver = propertyResolver;\n  }\n\n  /**\n   * Apply position offsets to all nodes\n   */\n  public applyOffsets(cluster: Cluster, offsetX: number, offsetY: number, offsetZ: number): void {\n    cluster.groups[0].nodes.forEach(node => {\n      node.position.x += offsetX;\n      node.position.y += offsetY;\n      node.position.z += offsetZ;\n    });\n  }\n\n  /**\n   * Create position mapping for a property\n   */\n  public createPropertyPositionMap(nodesByTypeAndLayer: Map<string, Node[]>, propertyName: string, isYAxis: boolean = false): Map<string, number> {\n    const uniqueValues = new Set<string>();\n    \n    // Collect all unique values for the property\n    nodesByTypeAndLayer.forEach(nodes => {\n      nodes.forEach(node => {\n        const value = this.propertyResolver.getPropertyValue(node, propertyName);\n        uniqueValues.add(value);\n      });\n    });\n    \n    // Sort values and assign positions\n    const sortedValues = [...uniqueValues].sort();\n    const positionMap = new Map<string, number>();\n    \n    sortedValues.forEach((value, index) => {\n      if (isYAxis) {\n        // For Y-axis, position values vertically\n        positionMap.set(value, index);\n      } else {\n        // Position values apart on the Z axis\n        positionMap.set(value, (index - sortedValues.size() / 2) * POSITION_CONSTANTS.Z_DIMENSION_GROUP_SPACING);\n      }\n    });\n    \n    return positionMap;\n  }\n}\n\n/**\n * Node Organizer - Handles node organization and sorting\n */\nclass NodeOrganizer {\n  private propertyResolver: PropertyValueResolver;\n\n  constructor(propertyResolver: PropertyValueResolver) {\n    this.propertyResolver = propertyResolver;\n  }\n\n  /**\n   * Organize nodes by layer and property\n   */\n  public organizeNodesByProperty(cluster: Cluster, propertyName: string) {\n    const nodesByLayer = new Map<number, Node[]>();\n    const typeCounters = new Map<string, number>();\n    const nodesByTypeAndLayer = new Map<string, Node[]>();\n    \n    // First organize by layer\n    cluster.groups.forEach(group => {\n      group.nodes.forEach((node) => {\n        const nodeWithLevel = node as Node & { level?: number };\n        const layer = nodeWithLevel.level || 1;\n        \n        if (!nodesByLayer.has(layer)) {\n          nodesByLayer.set(layer, []);\n        }\n        nodesByLayer.get(layer)!.push(node);\n      });\n    });\n    \n    // Then organize by property and layer\n    nodesByLayer.forEach((nodes, layer) => {\n      nodes.forEach(node => {\n        const propertyValue = this.propertyResolver.getPropertyValue(node, propertyName);\n        const key = `${propertyValue}-${layer}`;\n        \n        if (!nodesByTypeAndLayer.has(key)) {\n          nodesByTypeAndLayer.set(key, []);\n        }\n        nodesByTypeAndLayer.get(key)!.push(node);\n        \n        // Track total count per property value\n        typeCounters.set(propertyValue, (typeCounters.get(propertyValue) || 0) + 1);\n      });\n    });\n    \n    return { nodesByLayer, nodesByTypeAndLayer, typeCounters };\n  }\n\n  /**\n   * Sort types by count (descending)\n   */\n  public sortTypesByCount(typeCounters: Map<string, number>): string[] {\n    const sortedTypes: string[] = [];\n    typeCounters.forEach((_, nodeType) => {\n      sortedTypes.push(nodeType);\n    });\n    \n    // Use table.sort instead of manual bubble sort\n    table.sort(sortedTypes, (a, b) => {\n      const countA = typeCounters.get(a) || 0;\n      const countB = typeCounters.get(b) || 0;\n      return countB > countA;\n    });\n    \n    return sortedTypes;\n  }\n}\n\n/**\n * Swim Lane Calculator - Handles swim lane positioning calculations\n */\nclass SwimLaneCalculator {\n  private propertyResolver: PropertyValueResolver;\n\n  constructor(propertyResolver: PropertyValueResolver) {\n    this.propertyResolver = propertyResolver;\n  }\n\n  /**\n   * Calculate X positions for each type column\n   */\n  public calculateTypeColumnPositions(\n    sortedTypes: string[],\n    nodesByTypeAndLayer: Map<string, Node[]>,\n    numLayers: number,\n    spacing: SpacingConfig\n  ): Map<string, number> {\n    let typeXOffset = 0;\n    const typeXPositions = new Map<string, number>();\n    \n    sortedTypes.forEach((nodeType, typeIndex) => {\n      typeXPositions.set(nodeType, typeXOffset);\n      \n      // Find max nodes of this type in any layer\n      let maxNodesInLayer = 0;\n      for (let layer = 1; layer <= numLayers; layer++) {\n        const key = `${nodeType}-${layer}`;\n        const nodes = nodesByTypeAndLayer.get(key) || [];\n        maxNodesInLayer = math.max(maxNodesInLayer, nodes.size());\n      }\n      \n      // Move to next type column\n      typeXOffset += maxNodesInLayer * spacing.nodeSpacing;\n      if (typeIndex < sortedTypes.size() - 1) {\n        typeXOffset += spacing.swimlaneSpacing; // Gap between swim lanes\n      }\n    });\n    \n    return typeXPositions;\n  }\n\n  /**\n   * Assign positions to nodes with property-based positioning\n   */\n  public assignNodePositionsWithProperties(\n    sortedTypes: string[],\n    nodesByTypeAndLayer: Map<string, Node[]>,\n    typeXPositions: Map<string, number>,\n    numLayers: number,\n    spacing: SpacingConfig,\n    config: EnhancedGeneratorConfig,\n    zAxisProperty: string,\n    zPositionMap: Map<string, number>,\n    yPositionMap?: Map<string, number>\n  ): void {\n    const typeNodeCounters = new Map<string, number>();\n    sortedTypes.forEach(nodeType => typeNodeCounters.set(nodeType, 0));\n    \n    // Check if Y-axis should use property-based positioning\n    const yAxisFromMapping = config.axisMapping?.yAxis;\n    const useLayerForY = !yAxisFromMapping || yAxisFromMapping === \"none\";\n    const yAxisProperty = yAxisFromMapping || \"type\";\n    \n    for (let layer = 1; layer <= numLayers; layer++) {\n      // Invert Y so layer 1 is at top\n      const layerY = RENDERER_CONSTANTS.POSITIONING.BASE_Y + \n                    (numLayers - layer) * spacing.layerSpacing;\n      \n      sortedTypes.forEach(xValue => {\n        const key = `${xValue}-${layer}`;\n        const nodes = nodesByTypeAndLayer.get(key) || [];\n        \n        // Sort nodes alphabetically within type-layer group\n        table.sort(nodes, (a, b) => a.name < b.name);\n        \n        nodes.forEach((node, index) => {\n          const baseX = typeXPositions.get(xValue)!;\n          \n          // Find max nodes of this type for centering\n          let maxNodesForType = 0;\n          for (let checkLayer = 1; checkLayer <= numLayers; checkLayer++) {\n            const checkKey = `${xValue}-${checkLayer}`;\n            const checkNodes = nodesByTypeAndLayer.get(checkKey) || [];\n            maxNodesForType = math.max(maxNodesForType, checkNodes.size());\n          }\n          \n          // Calculate centering offset\n          const laneWidth = maxNodesForType * spacing.nodeSpacing;\n          const nodesWidth = nodes.size() * spacing.nodeSpacing;\n          const centeringOffset = (laneWidth - nodesWidth) / 2;\n          \n          const x = baseX + centeringOffset + index * spacing.nodeSpacing;\n          \n          // Get Z position based on z-axis property\n          const zValue = this.propertyResolver.getPropertyValue(node, zAxisProperty);\n          const z = zPositionMap.get(zValue) || 0;\n          \n          // Get Y position based on Y-axis configuration\n          const y = useLayerForY \n            ? layerY \n            : (yPositionMap!.get(this.propertyResolver.getPropertyValue(node, yAxisProperty)) || 0) * spacing.layerSpacing + RENDERER_CONSTANTS.POSITIONING.BASE_Y;\n          \n          // Update node position\n          node.position = { x, y, z };\n          \n          // Add type number for labeling\n          const typeCounter = typeNodeCounters.get(xValue)! + 1;\n          typeNodeCounters.set(xValue, typeCounter);\n          const paddedNumber = typeCounter < 10 ? `0${typeCounter}` : `${typeCounter}`;\n          const nodeWithType = node as Node & { typeNumber?: string };\n          nodeWithType.typeNumber = `${xValue.lower()}${paddedNumber}`;\n        });\n      });\n    }\n  }\n}\n\n/**\n * Main PositionCalculator - Orchestrates all modules\n */\nexport class PositionCalculator implements IPositionCalculator {\n  private propertyResolver: PropertyValueResolver;\n  private boundsCalculator: BoundsCalculator;\n  private positionMapper: PositionMapper;\n  private nodeOrganizer: NodeOrganizer;\n  private swimLaneCalculator: SwimLaneCalculator;\n\n  constructor() {\n    this.propertyResolver = new PropertyValueResolver();\n    this.boundsCalculator = new BoundsCalculator();\n    this.positionMapper = new PositionMapper(this.propertyResolver);\n    this.nodeOrganizer = new NodeOrganizer(this.propertyResolver);\n    this.swimLaneCalculator = new SwimLaneCalculator(this.propertyResolver);\n  }\n\n  /**\n   * Get bounds of the cluster (public method for external use)\n   */\n  public getClusterBounds(cluster: Cluster): { minX: number, maxX: number, minY: number, minZ: number, maxZ: number } {\n    return this.boundsCalculator.calculateBounds(cluster);\n  }\n\n  /**\n   * Centers the bottom of the group at the specified origin\n   */\n  public centerBottomAtOrigin(cluster: Cluster, origin: Vector3, config?: EnhancedGeneratorConfig): void {\n    if (cluster.groups[0].nodes.size() === 0) return;\n    \n    // Find bounding box\n    const bounds = this.boundsCalculator.calculateBounds(cluster);\n    \n    // Calculate offsets to center bottom at origin\n    const centerX = (bounds.minX + bounds.maxX) / 2;\n    const offsetX = origin.X - centerX;\n    \n    // Apply origin Y offset if configured\n    const yOffset = config?.spacing?.originYOffset || 0;\n    const offsetY = origin.Y - bounds.minY + yOffset; // Bottom of group at origin Y + offset\n    const offsetZ = origin.Z;\n    \n    // Ensure nodes stay above ground level\n    const minFinalY = bounds.minY + offsetY;\n    const groundClearanceAdjustment = minFinalY < POSITION_CONSTANTS.MIN_GROUND_CLEARANCE ? POSITION_CONSTANTS.MIN_GROUND_CLEARANCE - minFinalY : 0;\n    const finalOffsetY = offsetY + groundClearanceAdjustment;\n    \n    // Apply offsets to all nodes\n    this.positionMapper.applyOffsets(cluster, offsetX, finalOffsetY, offsetZ);\n  }\n\n  /**\n   * Calculates swim lane positions for layer-based data\n   */\n  public calculateLayerSwimLanePositions(cluster: Cluster, config: EnhancedGeneratorConfig): void {\n    const spacing = this.getSpacingConfig(config);\n    const numLayers = config.layers.size();\n    \n    // Use spatial grouping properties if available, otherwise use dynamic defaults\n    const discoveredProperties = cluster.discoveredProperties;\n    const xAxisProperty = config.axisMapping?.xAxis || getDefaultXAxis(discoveredProperties);\n    const zAxisProperty = config.axisMapping?.zAxis || getDefaultZAxis(discoveredProperties);\n    \n    // Organize nodes by layer and X grouping property\n    const { nodesByTypeAndLayer, typeCounters } = this.nodeOrganizer.organizeNodesByProperty(cluster, xAxisProperty);\n    \n    // Sort values by count\n    const sortedTypes = this.nodeOrganizer.sortTypesByCount(typeCounters);\n    \n    // Calculate type column positions\n    const typeXPositions = this.swimLaneCalculator.calculateTypeColumnPositions(\n      sortedTypes,\n      nodesByTypeAndLayer,\n      numLayers,\n      spacing\n    );\n    \n    // Create Z position mapping for the z-axis property\n    const zPositionMap = this.positionMapper.createPropertyPositionMap(nodesByTypeAndLayer, zAxisProperty);\n    \n    // Create Y position mapping if using property-based Y-axis\n    const yAxisFromMapping = config.axisMapping?.yAxis;\n    const yPositionMap = (!yAxisFromMapping || yAxisFromMapping === \"none\") \n      ? undefined \n      : this.positionMapper.createPropertyPositionMap(nodesByTypeAndLayer, yAxisFromMapping, true);\n    \n    // Assign positions to each node\n    this.swimLaneCalculator.assignNodePositionsWithProperties(\n      sortedTypes,\n      nodesByTypeAndLayer,\n      typeXPositions,\n      numLayers,\n      spacing,\n      config,\n      zAxisProperty,\n      zPositionMap,\n      yPositionMap\n    );\n  }\n\n  /**\n   * Get spacing configuration\n   */\n  private getSpacingConfig(config: EnhancedGeneratorConfig): SpacingConfig {\n    return config.spacing || {\n      nodeHeight: RENDERER_CONSTANTS.HEXAGON.HEIGHT,\n      nodeRadius: RENDERER_CONSTANTS.HEXAGON.WIDTH / 2,\n      layerSpacing: RENDERER_CONSTANTS.POSITIONING.LEVEL_SPACING,\n      nodeSpacing: RENDERER_CONSTANTS.POSITIONING.COLUMN_SPACING,\n      swimlaneSpacing: RENDERER_CONSTANTS.POSITIONING.COLUMN_SPACING\n    };\n  }\n}",
      "patterns": {
        "functions": 14,
        "classes": 5,
        "interfaces": 0,
        "exports": 1,
        "imports": 7,
        "anyTypes": 0,
        "typeAssertions": 2,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [
          {
            "name": "BoundsCalculator",
            "methodCount": 1,
            "methods": [
              "calculateBounds"
            ]
          },
          {
            "name": "PositionMapper",
            "methodCount": 3,
            "methods": [
              "applyOffsets",
              "createPropertyPositionMap",
              "if"
            ]
          },
          {
            "name": "NodeOrganizer",
            "methodCount": 2,
            "methods": [
              "organizeNodesByProperty",
              "sortTypesByCount"
            ]
          },
          {
            "name": "SwimLaneCalculator",
            "methodCount": 6,
            "methods": [
              "calculateTypeColumnPositions",
              "for",
              "assignNodePositionsWithProperties",
              "for",
              "for",
              "lower"
            ]
          }
        ],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/renderers/unifiedDataRenderer/rendering/updateManager.ts",
      "relativePath": "shared/modules/renderers/unifiedDataRenderer/rendering/updateManager.ts",
      "name": "updateManager.ts",
      "size": 13786,
      "lines": 397,
      "lastModified": "2025-07-09T02:37:58.209Z",
      "content": "/**\n * Update Manager for Unified Data Renderer\n * \n * Handles incremental updates of the graph\n */\n\nimport { Cluster, Node, Link, Group } from \"../../../../interfaces/simpleDataGenerator.interface\";\nimport { EnhancedGeneratorConfig, LayerConfig } from \"../../../../interfaces/enhancedGenerator.interface\";\nimport { IUpdateManager } from \"../interfaces\";\nimport { makeHexagon } from \"../../../hexagonMaker\";\nimport { createRopeConnectors } from \"../../dataGeneratorRobloxRendererUtils/ropeCreator\";\nimport { RENDERER_CONSTANTS } from \"../../dataGeneratorRobloxRendererUtils/constants\";\nimport { COLOR_PALETTES, NODE_TYPE_NAMES, ANIMAL_TYPES, DEFAULT_ATTACHMENTS } from \"../constants\";\n\nexport class UpdateManager implements IUpdateManager {\n  private nodeIdCounter = 0;\n  private linkIdCounter = 0;\n\n  /**\n   * Performs incremental update of the graph\n   */\n  public performIncrementalUpdate(\n    newConfig: EnhancedGeneratorConfig, \n    nodesFolder: Folder, \n    linksFolder: Folder, \n    origin: Vector3\n  ): void {\n    // Build current state\n    const currentNodesByLayer = this.buildCurrentState(nodesFolder);\n    \n    // Clear all existing connections (we'll rebuild them)\n    linksFolder.ClearAllChildren();\n    \n    // Create update plan\n    const { updatedNodeToHexagon, allNodes, nodesByLayer } = this.processLayers(\n      newConfig,\n      currentNodesByLayer,\n      nodesFolder\n    );\n    \n    // Remove layers that no longer exist\n    this.removeObsoleteLayers(currentNodesByLayer, newConfig.layers.size());\n    \n    // Create cluster for positioning\n    const cluster = this.createClusterFromNodes(allNodes);\n    \n    // Recalculate positions (would normally use PositionCalculator)\n    // For now, keeping existing logic inline\n    this.updateNodePositions(allNodes, updatedNodeToHexagon);\n    \n    // Recreate connections\n    const allLinks = this.recreateConnections(newConfig, nodesByLayer);\n    cluster.relations = allLinks;\n    \n    // Create rope connectors\n    createRopeConnectors({\n      cluster,\n      nodeToHexagon: updatedNodeToHexagon,\n      linksFolder,\n      visualization: newConfig.visualization,\n      linkDiameter: newConfig.spacing?.linkDiameter\n    });\n    \n  }\n\n  /**\n   * Build current state map of nodes by layer\n   */\n  private buildCurrentState(nodesFolder: Folder): Map<number, Model[]> {\n    const currentNodesByLayer = new Map<number, Model[]>();\n    \n    nodesFolder.GetChildren().forEach(node => {\n      if (node.IsA(\"Model\")) {\n        // Extract layer number from node name (e.g., \"Hexagon_L1_N2\")\n        const match = node.Name.match(\"Hexagon_L(\\\\d+)_N(\\\\d+)\");\n        if (match) {\n          const layerNum = tonumber(match[1]) || 1;\n          if (!currentNodesByLayer.has(layerNum)) {\n            currentNodesByLayer.set(layerNum, []);\n          }\n          currentNodesByLayer.get(layerNum)!.push(node);\n        }\n      }\n    });\n    \n    // Sort nodes within each layer by their index\n    currentNodesByLayer.forEach((nodes, layer) => {\n      table.sort(nodes, (a, b) => {\n        const matchA = a.Name.match(\"Hexagon_L\\\\d+_N(\\\\d+)\");\n        const matchB = b.Name.match(\"Hexagon_L\\\\d+_N(\\\\d+)\");\n        const indexA = matchA ? tonumber(matchA[1]) || 0 : 0;\n        const indexB = matchB ? tonumber(matchB[1]) || 0 : 0;\n        return indexA < indexB;\n      });\n    });\n    \n    return currentNodesByLayer;\n  }\n\n  /**\n   * Process layers and handle node updates\n   */\n  private processLayers(\n    newConfig: EnhancedGeneratorConfig,\n    currentNodesByLayer: Map<number, Model[]>,\n    nodesFolder: Folder\n  ) {\n    const updatedNodeToHexagon = new Map<string, Model>();\n    const allNodes: Node[] = [];\n    const nodesByLayer = new Map<number, Node[]>();\n    const newNodesToCreate: Node[] = [];\n    \n    newConfig.layers.forEach((newLayer, layerIndex) => {\n      const layerNum = layerIndex + 1;\n      const currentLayerNodes = currentNodesByLayer.get(layerNum) || [];\n      const layerNodes: Node[] = [];\n      \n      // Handle node count changes\n      if (newLayer.numNodes > currentLayerNodes.size()) {\n        // Add new nodes\n        for (let i = 0; i < newLayer.numNodes; i++) {\n          if (i < currentLayerNodes.size()) {\n            // Keep existing node\n            const hexagon = currentLayerNodes[i];\n            const node = this.createNodeFromHexagon(hexagon, newConfig, i, layerNum);\n            allNodes.push(node);\n            layerNodes.push(node);\n            updatedNodeToHexagon.set(node.uuid, hexagon);\n          } else {\n            // Create new node\n            const node = this.createNewNode(newConfig, i, layerNum, newLayer);\n            allNodes.push(node);\n            layerNodes.push(node);\n            newNodesToCreate.push(node);\n          }\n        }\n      } else if (newLayer.numNodes < currentLayerNodes.size()) {\n        // Remove excess nodes\n        for (let i = 0; i < currentLayerNodes.size(); i++) {\n          if (i < newLayer.numNodes) {\n            // Keep existing node\n            const hexagon = currentLayerNodes[i];\n            const node = this.createNodeFromHexagon(hexagon, newConfig, i, layerNum);\n            allNodes.push(node);\n            layerNodes.push(node);\n            updatedNodeToHexagon.set(node.uuid, hexagon);\n          } else {\n            // Remove excess node\n            currentLayerNodes[i].Destroy();\n          }\n        }\n      } else {\n        // Same number of nodes, just update\n        currentLayerNodes.forEach((hexagon, i) => {\n          const node = this.createNodeFromHexagon(hexagon, newConfig, i, layerNum);\n          allNodes.push(node);\n          layerNodes.push(node);\n          updatedNodeToHexagon.set(node.uuid, hexagon);\n        });\n      }\n      \n      nodesByLayer.set(layerNum, layerNodes);\n    });\n    \n    // Create hexagons for new nodes\n    newNodesToCreate.forEach(node => {\n      const hexagon = this.createSingleHexagon(node, nodesFolder, newConfig);\n      updatedNodeToHexagon.set(node.uuid, hexagon);\n    });\n    \n    return { updatedNodeToHexagon, allNodes, nodesByLayer };\n  }\n\n  /**\n   * Remove layers that no longer exist\n   */\n  private removeObsoleteLayers(currentNodesByLayer: Map<number, Model[]>, newLayerCount: number): void {\n    currentNodesByLayer.forEach((nodes, layerNum) => {\n      if (layerNum > newLayerCount) {\n        nodes.forEach(node => node.Destroy());\n      }\n    });\n  }\n\n  /**\n   * Create cluster from nodes\n   */\n  private createClusterFromNodes(allNodes: Node[]): Cluster {\n    const mainGroup: Group = {\n      id: \"group_1\",\n      name: \"Group1\",\n      nodes: allNodes\n    };\n    \n    return {\n      groups: [mainGroup],\n      relations: []\n    };\n  }\n\n  /**\n   * Update node positions by moving hexagons\n   */\n  private updateNodePositions(allNodes: Node[], nodeToHexagon: Map<string, Model>): void {\n    allNodes.forEach(node => {\n      const hexagon = nodeToHexagon.get(node.uuid);\n      if (hexagon && node.position) {\n        const currentPos = hexagon.PrimaryPart?.Position || new Vector3(0, 0, 0);\n        const targetPos = new Vector3(node.position.x, node.position.y, node.position.z);\n        const offset = targetPos.sub(currentPos);\n        \n        // Move all parts manually to preserve anchoring\n        hexagon.GetChildren().forEach(part => {\n          if (part.IsA(\"BasePart\")) {\n            part.Position = part.Position.add(offset);\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Recreate connections based on new configuration\n   */\n  private recreateConnections(\n    config: EnhancedGeneratorConfig,\n    nodesByLayer: Map<number, Node[]>\n  ): Link[] {\n    const allLinks: Link[] = [];\n    this.linkIdCounter = 0;\n    \n    config.layers.forEach((layer, layerIndex) => {\n      const layerNum = layerIndex + 1;\n      const currentLayerNodes = nodesByLayer.get(layerNum) || [];\n      const nextLayerNodes = nodesByLayer.get(layerNum + 1);\n      \n      // Create intra-layer connections\n      const allowSameLevelLinks = config.visualization?.allowSameLevelLinks ?? true;\n      if (allowSameLevelLinks && layer.connectionsPerNode > 0 && currentLayerNodes.size() > 1) {\n        currentLayerNodes.forEach((sourceNode, nodeIndex) => {\n          const availableTargets = currentLayerNodes.filter((_, idx) => idx !== nodeIndex);\n          const numConnections = math.min(layer.connectionsPerNode, availableTargets.size());\n          \n          // Shuffle and select targets\n          const shuffled = [...availableTargets];\n          for (let i = shuffled.size() - 1; i > 0; i--) {\n            const j = math.random(0, i);\n            [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n          }\n          \n          for (let i = 0; i < numConnections; i++) {\n            const targetNode = shuffled[i];\n            const link = this.createLink(sourceNode, targetNode, config);\n            allLinks.push(link);\n          }\n        });\n      }\n      \n      // Create inter-layer connections\n      if (nextLayerNodes && nextLayerNodes.size() > 0) {\n        currentLayerNodes.forEach(sourceNode => {\n          const targetNode = nextLayerNodes[math.random(0, nextLayerNodes.size() - 1)];\n          const link = this.createLink(sourceNode, targetNode, config);\n          allLinks.push(link);\n        });\n      }\n    });\n    \n    return allLinks;\n  }\n\n  /**\n   * Create a link between two nodes\n   */\n  private createLink(sourceNode: Node, targetNode: Node, config: EnhancedGeneratorConfig): Link {\n    const linkTypeIndex = this.linkIdCounter % config.numLinkTypes;\n    const linkColor = COLOR_PALETTES.LINK_COLORS[linkTypeIndex % COLOR_PALETTES.LINK_COLORS.size()];\n    \n    return {\n      uuid: `link_${this.linkIdCounter++}`,\n      type: `Link${linkTypeIndex + 1}`,\n      sourceNodeUuid: sourceNode.uuid,\n      targetNodeUuid: targetNode.uuid,\n      color: linkColor\n    };\n  }\n\n  /**\n   * Creates a node from an existing hexagon model\n   */\n  private createNodeFromHexagon(hexagon: Model, config: EnhancedGeneratorConfig, nodeIndex: number, layerNum: number): Node {\n    const nodeTypeIndex = nodeIndex % config.numNodeTypes;\n    const nodeTypeName = NODE_TYPE_NAMES[math.min(nodeTypeIndex, NODE_TYPE_NAMES.size() - 1)];\n    const color = COLOR_PALETTES.NODE_COLORS[nodeTypeIndex % COLOR_PALETTES.NODE_COLORS.size()];\n    \n    const primaryPart = hexagon.PrimaryPart;\n    const position = primaryPart ? primaryPart.Position : new Vector3(0, 0, 0);\n    \n    const node: Node = {\n      uuid: `node_${layerNum}_${nodeIndex}`,\n      name: `${nodeTypeName} ${nodeIndex + 1}`,\n      type: nodeTypeName as \"People\" | \"Animals\",\n      position: { x: position.X, y: position.Y, z: position.Z },\n      color: color,\n      attachmentNames: DEFAULT_ATTACHMENTS\n    };\n    \n    // Add level property for swim lane algorithm\n    const nodeWithLevel = node as Node & { level: number };\n    nodeWithLevel.level = layerNum;\n    \n    // Add type-specific properties\n    if (nodeTypeName === \"Animals\") {\n      node.properties = { animalType: ANIMAL_TYPES[math.random(0, ANIMAL_TYPES.size() - 1)] };\n    }\n    \n    return node;\n  }\n\n  /**\n   * Creates a new node\n   */\n  private createNewNode(config: EnhancedGeneratorConfig, nodeIndex: number, layerNum: number, layer: LayerConfig): Node {\n    const nodeTypeIndex = nodeIndex % config.numNodeTypes;\n    const nodeTypeName = NODE_TYPE_NAMES[math.min(nodeTypeIndex, NODE_TYPE_NAMES.size() - 1)];\n    const color = COLOR_PALETTES.NODE_COLORS[nodeTypeIndex % COLOR_PALETTES.NODE_COLORS.size()];\n    \n    const node: Node = {\n      uuid: `node_${layerNum}_${nodeIndex}`,\n      name: `${nodeTypeName} ${nodeIndex + 1}`,\n      type: nodeTypeName as \"People\" | \"Animals\",\n      position: { x: 0, y: 0, z: 0 }, // Will be set by swim lane positioning\n      color: color,\n      attachmentNames: DEFAULT_ATTACHMENTS\n    };\n    \n    // Add level property for swim lane algorithm\n    const nodeWithLevel = node as Node & { level: number };\n    nodeWithLevel.level = layerNum;\n    \n    // Add type-specific properties\n    if (nodeTypeName === \"Animals\") {\n      node.properties = { animalType: ANIMAL_TYPES[math.random(0, ANIMAL_TYPES.size() - 1)] };\n    }\n    \n    return node;\n  }\n\n  /**\n   * Creates a single hexagon for a node\n   */\n  private createSingleHexagon(node: Node, nodesFolder: Folder, config?: EnhancedGeneratorConfig): Model {\n    // Use spacing from config if provided, otherwise use defaults\n    const spacing = config?.spacing || {\n      nodeHeight: RENDERER_CONSTANTS.HEXAGON.HEIGHT,\n      nodeRadius: RENDERER_CONSTANTS.HEXAGON.WIDTH / 2,\n      layerSpacing: RENDERER_CONSTANTS.POSITIONING.LEVEL_SPACING,\n      nodeSpacing: RENDERER_CONSTANTS.POSITIONING.COLUMN_SPACING,\n      swimlaneSpacing: RENDERER_CONSTANTS.POSITIONING.COLUMN_SPACING\n    };\n    \n    const WIDTH = spacing.nodeRadius * 2;\n    const HEIGHT = spacing.nodeHeight;\n    \n    const labels: string[] = [\n      node.name,\n      node.type,\n      \"\"  // typeNumber would be added later\n    ];\n    \n    if (node.properties?.animalType) {\n      labels.push(node.properties.animalType);\n    }\n    \n    const hexagon = makeHexagon({\n      id: this.nodeIdCounter++,\n      position: new Vector3(node.position.x, node.position.y, node.position.z),\n      width: WIDTH,\n      height: HEIGHT,\n      barColor: new Color3(node.color[0], node.color[1], node.color[2]),\n      barMaterial: Enum.Material.SmoothPlastic,\n      castShadow: false,\n      labels: labels,\n      stackIndex: 1,\n      hexIndex: this.nodeIdCounter,\n      guid: node.uuid\n    });\n    \n    // Set name to match pattern for layer tracking\n    const layerNum = tonumber(node.uuid.match(\"node_(\\\\d+)_\")?.[1]) || 1;\n    const nodeIndex = tonumber(node.uuid.match(\"node_\\\\d+_(\\\\d+)\")?.[1]) || 1;\n    hexagon.Name = `Hexagon_L${layerNum}_N${nodeIndex}`;\n    hexagon.Parent = nodesFolder;\n    \n    return hexagon;\n  }\n}",
      "patterns": {
        "functions": 12,
        "classes": 1,
        "interfaces": 0,
        "exports": 1,
        "imports": 7,
        "anyTypes": 0,
        "typeAssertions": 2,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/client/services/configGui/stateManager.ts",
      "relativePath": "client/services/configGui/stateManager.ts",
      "name": "stateManager.ts",
      "size": 13445,
      "lines": 403,
      "lastModified": "2025-07-11T03:08:40.325Z",
      "content": "/**\n * State Manager for Configuration GUI\n * \n * Manages the centralized state for the configuration GUI,\n * providing a clean interface for state updates and subscriptions.\n */\n\nimport { GUIState, EnhancedGeneratorConfig } from \"./interfaces\";\nimport { GUI_CONSTANTS } from \"./constants\";\nimport type { SpacingConfig, VisualizationOptions, AxisMapping, VisualMapping, YAxisConfig } from \"../../../shared/interfaces/enhancedGenerator.interface\";\nimport { getDefaultXAxis, getDefaultZAxis, isUsingLegacyDefaults } from \"../../../shared/constants/axisDefaults\";\nimport { updateAvailableProperties } from \"./components/axisMappingControls/constants\";\n\nexport class GUIStateManager {\n  private state: GUIState;\n  private listeners: ((state: GUIState) => void)[] = [];\n\n  constructor(initialConfig?: EnhancedGeneratorConfig) {\n    // Initialize spacing with defaults\n    const defaultSpacing: SpacingConfig = {\n      nodeHeight: GUI_CONSTANTS.SPACING_DEFAULTS.NODE_HEIGHT,\n      nodeRadius: GUI_CONSTANTS.SPACING_DEFAULTS.NODE_RADIUS,\n      layerSpacing: GUI_CONSTANTS.SPACING_DEFAULTS.LAYER_SPACING,\n      nodeSpacing: GUI_CONSTANTS.SPACING_DEFAULTS.NODE_SPACING,\n      swimlaneSpacing: GUI_CONSTANTS.SPACING_DEFAULTS.SWIMLANE_SPACING,\n      linkDiameter: GUI_CONSTANTS.SPACING_DEFAULTS.LINK_DIAMETER\n    };\n    \n    // Initialize visualization options with defaults\n    const defaultVisualization: VisualizationOptions = {\n      showNodes: true,\n      showLinkLabels: false,\n      showConnectors: true,\n      allowSameLevelLinks: false\n    };\n    \n    // Initialize spatial grouping with defaults (using legacy interface for compatibility)\n    const defaultAxisMapping: AxisMapping = {\n      xAxis: getDefaultXAxis(),\n      zAxis: getDefaultZAxis(),\n      yAxis: \"none\", // Default to none, will be updated with discovered properties\n      xGroupingProperty: getDefaultXAxis(),\n      zGroupingProperty: getDefaultZAxis()\n    };\n    \n    // Initialize visual mapping with defaults\n    const defaultVisualMapping: VisualMapping = {\n      backgroundColor: \"none\",  // Will be updated to first discovered property\n      borderColor: \"none\"\n    };\n    \n    // Initialize Y-axis config with defaults\n    const defaultYAxisConfig: YAxisConfig = {\n      useLayer: true,\n      property: undefined\n    };\n    \n    this.state = {\n      isVisible: false,\n      enhancedConfig: initialConfig || {\n        numNodeTypes: 4,\n        numLinkTypes: 3,\n        layers: [],\n        spacing: defaultSpacing,\n        visualization: defaultVisualization,\n        axisMapping: defaultAxisMapping,\n        visualMapping: defaultVisualMapping,\n        yAxisConfig: defaultYAxisConfig,\n        numPetTypes: 5\n      },\n      layerRows: []\n    };\n    \n    // Ensure spacing is always defined\n    if (!this.state.enhancedConfig.spacing) {\n      this.state.enhancedConfig.spacing = defaultSpacing;\n    }\n    \n    // Ensure visualization is always defined\n    if (!this.state.enhancedConfig.visualization) {\n      this.state.enhancedConfig.visualization = defaultVisualization;\n    }\n    \n    // Ensure axis mapping is always defined\n    if (!this.state.enhancedConfig.axisMapping) {\n      this.state.enhancedConfig.axisMapping = defaultAxisMapping;\n    }\n    \n    // Ensure visual mapping is always defined\n    if (!this.state.enhancedConfig.visualMapping) {\n      this.state.enhancedConfig.visualMapping = defaultVisualMapping;\n    }\n    \n    // Ensure Y-axis config is always defined\n    if (!this.state.enhancedConfig.yAxisConfig) {\n      this.state.enhancedConfig.yAxisConfig = defaultYAxisConfig;\n    }\n    \n    // Ensure numPetTypes is always defined\n    if (!this.state.enhancedConfig.numPetTypes) {\n      this.state.enhancedConfig.numPetTypes = 5;\n    }\n  }\n\n  /**\n   * Gets the current state\n   */\n  public getState(): GUIState {\n    return { ...this.state };\n  }\n\n  /**\n   * Gets the enhanced configuration\n   */\n  public getEnhancedConfig(): EnhancedGeneratorConfig {\n    return { ...this.state.enhancedConfig };\n  }\n\n  /**\n   * Updates the GUI visibility\n   */\n  public setVisible(visible: boolean): void {\n    this.state.isVisible = visible;\n    this.notifyListeners();\n  }\n\n  /**\n   * Updates the GUI instance\n   */\n  public setGUI(gui: ScreenGui | undefined): void {\n    this.state.gui = gui;\n    this.notifyListeners();\n  }\n\n  /**\n   * Updates the config frame\n   */\n  public setConfigFrame(frame: Frame | undefined): void {\n    this.state.configFrame = frame;\n    this.notifyListeners();\n  }\n\n  /**\n   * Updates the status label\n   */\n  public setStatusLabel(label: TextLabel | undefined): void {\n    this.state.statusLabel = label;\n    this.notifyListeners();\n  }\n\n\n  /**\n   * Updates the layers configuration\n   */\n  public setLayers(layers: EnhancedGeneratorConfig[\"layers\"]): void {\n    this.state.enhancedConfig.layers = layers;\n    this.notifyListeners();\n  }\n\n  /**\n   * Updates a spacing field\n   */\n  public updateSpacing<K extends keyof SpacingConfig>(field: K, value: SpacingConfig[K]): void {\n    if (this.state.enhancedConfig.spacing) {\n      this.state.enhancedConfig.spacing[field] = value;\n      this.notifyListeners();\n    }\n  }\n\n  /**\n   * Updates a visualization field\n   */\n  public updateVisualization<K extends keyof VisualizationOptions>(field: K, value: VisualizationOptions[K]): void {\n    if (this.state.enhancedConfig.visualization) {\n      this.state.enhancedConfig.visualization[field] = value;\n      this.notifyListeners();\n    }\n  }\n\n  /**\n   * Resets the configuration to defaults\n   */\n  public resetConfig(): void {\n    const defaultSpacing: SpacingConfig = {\n      nodeHeight: GUI_CONSTANTS.SPACING_DEFAULTS.NODE_HEIGHT,\n      nodeRadius: GUI_CONSTANTS.SPACING_DEFAULTS.NODE_RADIUS,\n      layerSpacing: GUI_CONSTANTS.SPACING_DEFAULTS.LAYER_SPACING,\n      nodeSpacing: GUI_CONSTANTS.SPACING_DEFAULTS.NODE_SPACING,\n      swimlaneSpacing: GUI_CONSTANTS.SPACING_DEFAULTS.SWIMLANE_SPACING,\n      linkDiameter: GUI_CONSTANTS.SPACING_DEFAULTS.LINK_DIAMETER\n    };\n    \n    const defaultVisualization: VisualizationOptions = {\n      showNodes: true,\n      showLinkLabels: false,\n      showConnectors: true,\n      allowSameLevelLinks: false\n    };\n    \n    this.state.enhancedConfig = {\n      numNodeTypes: 4,\n      numLinkTypes: 3,\n      layers: [],\n      spacing: defaultSpacing,\n      visualization: defaultVisualization\n    };\n    \n    this.notifyListeners();\n  }\n\n  /**\n   * Updates the entire enhanced configuration\n   */\n  public updateEnhancedConfig(config: EnhancedGeneratorConfig): void {\n    // Preserve important properties if not provided in the new config\n    const axisMapping = config.axisMapping || this.state.enhancedConfig.axisMapping;\n    const visualMapping = config.visualMapping || this.state.enhancedConfig.visualMapping;\n    const yAxisConfig = config.yAxisConfig || this.state.enhancedConfig.yAxisConfig;\n    const spacing = config.spacing || this.state.enhancedConfig.spacing;\n    const visualization = config.visualization || this.state.enhancedConfig.visualization;\n    \n    this.state.enhancedConfig = { \n      ...config, \n      axisMapping,\n      visualMapping,\n      yAxisConfig,\n      spacing,\n      visualization\n    };\n    this.notifyListeners();\n  }\n  \n  /**\n   * Updates the discovered properties from the cluster data\n   */\n  public updateDiscoveredProperties(properties: string[]): void {\n    this.state.discoveredProperties = properties;\n    \n    // Update the available properties in the dropdown controls\n    updateAvailableProperties(properties);\n    \n    // If we have at least 2 properties and no axis mapping is set, use the first two\n    if (properties.size() >= 2 && this.state.enhancedConfig.axisMapping) {\n      const currentMapping = this.state.enhancedConfig.axisMapping;\n      \n      // Always set Y-axis if we have 3+ properties and it's not already set\n      const shouldUpdateYAxis = properties.size() >= 3 && \n                               (!currentMapping.yAxis || currentMapping.yAxis === \"none\");\n      \n      // Only update X,Z if current values are the hardcoded defaults\n      if (isUsingLegacyDefaults(currentMapping.xAxis, currentMapping.zAxis)) {\n        this.state.enhancedConfig.axisMapping = {\n          xAxis: getDefaultXAxis(properties),\n          zAxis: getDefaultZAxis(properties),\n          yAxis: properties.size() >= 3 ? properties[2] : \"none\", // Set to 3rd property if available\n          xGroupingProperty: getDefaultXAxis(properties),\n          zGroupingProperty: getDefaultZAxis(properties)\n        };\n      } else if (shouldUpdateYAxis) {\n        // Update only Y-axis if X,Z are already properly set\n        this.state.enhancedConfig.axisMapping = {\n          ...currentMapping,\n          yAxis: properties[2] // Set to 3rd property\n        };\n        \n        print(`[GUIStateManager] Updated Y-axis to discovered property: ${properties[2]}`);\n      }\n      \n      if (isUsingLegacyDefaults(currentMapping.xAxis, currentMapping.zAxis) || shouldUpdateYAxis) {\n        print(`[GUIStateManager] Updated axis mapping to discovered properties:`);\n        print(`  X-axis: ${this.state.enhancedConfig.axisMapping.xAxis}`);\n        print(`  Z-axis: ${this.state.enhancedConfig.axisMapping.zAxis}`);\n        print(`  Y-axis: ${this.state.enhancedConfig.axisMapping.yAxis}`);\n      }\n    }\n    \n    // Update visual mapping to use httpMethod as default background color if available\n    if (properties.size() > 0 && this.state.enhancedConfig.visualMapping) {\n      const currentVisualMapping = this.state.enhancedConfig.visualMapping;\n      \n      // Only update if background is still \"None\" or \"none\"\n      if (currentVisualMapping.backgroundColor === \"None\" || currentVisualMapping.backgroundColor === \"none\") {\n        // Prefer \"httpMethod\" if it exists in discovered properties\n        const httpMethodIndex = properties.indexOf(\"httpMethod\");\n        if (httpMethodIndex !== -1) {\n          this.state.enhancedConfig.visualMapping.backgroundColor = \"httpMethod\";\n          print(`[GUIStateManager] Updated background color to httpMethod`);\n        } else {\n          this.state.enhancedConfig.visualMapping.backgroundColor = properties[0];\n          print(`[GUIStateManager] Updated background color to first property: ${properties[0]}`);\n        }\n      }\n    }\n    \n    \n    // Notify listeners about the changes\n    this.notifyListeners();\n  }\n  \n  /**\n   * Sets the axis mapping configuration for delayed creation\n   */\n  public setAxisMappingConfig(config: any): void {\n    this.state.axisMappingConfig = config;\n  }\n  \n  /**\n   * Gets the stored axis mapping configuration\n   */\n  public getAxisMappingConfig(): any {\n    return this.state.axisMappingConfig;\n  }\n  \n  /**\n   * Updates spatial grouping (formerly axis mapping)\n   */\n  public updateAxisMapping(axis: \"xAxis\" | \"zAxis\" | \"yAxis\", value: string): void {\n    if (!this.state.enhancedConfig.axisMapping) {\n      this.state.enhancedConfig.axisMapping = {\n        xAxis: getDefaultXAxis(this.state.discoveredProperties),\n        zAxis: getDefaultZAxis(this.state.discoveredProperties),\n        yAxis: this.state.discoveredProperties && this.state.discoveredProperties.size() >= 3 ? this.state.discoveredProperties[2] : \"none\",\n        xGroupingProperty: getDefaultXAxis(this.state.discoveredProperties),\n        zGroupingProperty: getDefaultZAxis(this.state.discoveredProperties)\n      };\n    }\n    \n    // Update both legacy and new property names for compatibility\n    this.state.enhancedConfig.axisMapping[axis] = value;\n    if (axis === \"xAxis\") {\n      this.state.enhancedConfig.axisMapping.xGroupingProperty = value;\n    } else if (axis === \"zAxis\") {\n      this.state.enhancedConfig.axisMapping.zGroupingProperty = value;\n    }\n    \n    this.notifyListeners();\n  }\n  \n  /**\n   * Updates visual mapping\n   */\n  public updateVisualMapping(mapping: \"backgroundColor\" | \"borderColor\", value: string): void {\n    if (!this.state.enhancedConfig.visualMapping) {\n      this.state.enhancedConfig.visualMapping = {\n        backgroundColor: \"type\",\n        borderColor: \"none\"\n      };\n    }\n    this.state.enhancedConfig.visualMapping[mapping] = value;\n    this.notifyListeners();\n  }\n  \n  /**\n   * Updates Y-axis configuration\n   */\n  public updateYAxisConfig(config: { useLayer: boolean; property?: string }): void {\n    this.state.enhancedConfig.yAxisConfig = config;\n    this.notifyListeners();\n  }\n\n  /**\n   * Subscribes to state changes\n   */\n  public subscribe(listener: (state: GUIState) => void): () => void {\n    this.listeners.push(listener);\n    \n    // Return unsubscribe function\n    return () => {\n      const index = this.listeners.indexOf(listener);\n      if (index >= 0) {\n        const newListeners: ((state: GUIState) => void)[] = [];\n        for (let i = 0; i < this.listeners.size(); i++) {\n          if (i !== index) {\n            newListeners.push(this.listeners[i]);\n          }\n        }\n        this.listeners = newListeners;\n      }\n    };\n  }\n\n  /**\n   * Notifies all listeners of state changes\n   */\n  private notifyListeners(): void {\n    const currentState = this.getState();\n    this.listeners.forEach(listener => listener(currentState));\n  }\n\n  /**\n   * Cleans up the state manager\n   */\n  public destroy(): void {\n    this.listeners = [];\n    if (this.state.gui) {\n      this.state.gui.Destroy();\n    }\n    this.state.gui = undefined;\n    this.state.configFrame = undefined;\n    this.state.statusLabel = undefined;\n    this.state.isVisible = false;\n  }\n}",
      "patterns": {
        "functions": 2,
        "classes": 1,
        "interfaces": 2,
        "exports": 1,
        "imports": 5,
        "anyTypes": 2,
        "typeAssertions": 1,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": [
          {
            "name": "return",
            "type": "function",
            "isExported": false
          }
        ]
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/client/services/configGui/components/layerGrid.ts",
      "relativePath": "client/services/configGui/components/layerGrid.ts",
      "name": "layerGrid.ts",
      "size": 12152,
      "lines": 365,
      "lastModified": "2025-07-09T02:33:35.659Z",
      "content": "import { GUI_CONSTANTS } from \"../constants\";\nimport { LayerConfig } from \"../interfaces\";\n\ninterface LayerGridProps {\n  parent: Frame;\n  onLayerUpdate: (layers: LayerConfig[]) => void;\n  nodeTypes: string[];\n  linkTypes: string[];\n  initialLayers?: LayerConfig[];\n}\n\ninterface LayerRow {\n  frame: Frame;\n  config: LayerConfig;\n}\n\nexport function createLayerGrid({\n  parent,\n  onLayerUpdate,\n  nodeTypes,\n  linkTypes,\n  initialLayers\n}: LayerGridProps): Frame {\n  const layers: LayerRow[] = [];\n  \n  // Create container for the grid\n  const gridContainer = new Instance(\"Frame\");\n  gridContainer.Name = \"LayerGrid\";\n  const topOffset = 40 + GUI_CONSTANTS.ENHANCED.GLOBAL_SETTINGS_HEIGHT + 10 + GUI_CONSTANTS.ENHANCED.NODE_LINK_TYPES_HEIGHT + 10;\n  // Use remaining space after fixed elements and before buttons (80px from bottom)\n  gridContainer.Size = new UDim2(1, -20, 1, -topOffset - 80);\n  gridContainer.Position = new UDim2(0, 0, 0, 0); // Position will be set by layout manager\n  gridContainer.BackgroundColor3 = new Color3(0.15, 0.15, 0.15);\n  gridContainer.BorderSizePixel = 0;\n  gridContainer.Parent = parent;\n\n  const gridCorner = new Instance(\"UICorner\");\n  gridCorner.CornerRadius = new UDim(0, 4);\n  gridCorner.Parent = gridContainer;\n\n  // Create header\n  createGridHeader(gridContainer);\n\n  // Create scrolling frame for rows\n  const scrollFrame = new Instance(\"ScrollingFrame\");\n  scrollFrame.Name = \"LayerRows\";\n  scrollFrame.Size = new UDim2(1, -10, 1, -GUI_CONSTANTS.ENHANCED.GRID_HEADER_HEIGHT - 40);\n  scrollFrame.Position = new UDim2(0, 5, 0, GUI_CONSTANTS.ENHANCED.GRID_HEADER_HEIGHT);\n  scrollFrame.BackgroundTransparency = 1;\n  scrollFrame.BorderSizePixel = 0;\n  scrollFrame.ScrollBarThickness = 6;\n  scrollFrame.CanvasSize = new UDim2(0, 0, 0, 0);\n  scrollFrame.Parent = gridContainer;\n\n  // Create list layout for rows\n  const rowLayout = new Instance(\"UIListLayout\");\n  rowLayout.SortOrder = Enum.SortOrder.LayoutOrder;\n  rowLayout.Padding = new UDim(0, 2);\n  rowLayout.Parent = scrollFrame;\n\n  // Function to update canvas size\n  const updateCanvasSize = () => {\n    const contentHeight = (layers.size() * (GUI_CONSTANTS.ENHANCED.GRID_ROW_HEIGHT + 2)) + 40;\n    scrollFrame.CanvasSize = new UDim2(0, 0, 0, contentHeight);\n  };\n\n  // Function to notify about layer changes\n  const notifyLayerChange = () => {\n    const configs = layers.map(row => row.config);\n    onLayerUpdate(configs);\n  };\n\n  // Function to add a new layer\n  const addLayer = () => {\n    if (layers.size() >= GUI_CONSTANTS.ENHANCED.MAX_LAYERS) {\n      return;\n    }\n\n    const layerNumber = layers.size() + 1;\n    \n    // Copy values from the previous layer if it exists\n    let layerConfig: LayerConfig;\n    if (layers.size() > 0) {\n      const previousLayer = layers[layers.size() - 1].config;\n      layerConfig = {\n        layerNumber,\n        numNodes: previousLayer.numNodes,\n        connectionsPerNode: previousLayer.connectionsPerNode,\n        nodeType: previousLayer.nodeType,\n        linkType: previousLayer.linkType\n      };\n    } else {\n      // Default values for first layer\n      layerConfig = {\n        layerNumber,\n        numNodes: 3,\n        connectionsPerNode: 2,\n        nodeType: nodeTypes[0],\n        linkType: linkTypes[0]\n      };\n    }\n\n    const row = createLayerRow({\n      parent: scrollFrame,\n      config: layerConfig,\n      nodeTypes,\n      linkTypes,\n      onUpdate: (updatedConfig) => {\n        const index = layers.findIndex(r => r.config.layerNumber === updatedConfig.layerNumber);\n        if (index >= 0) {\n          layers[index].config = updatedConfig;\n          notifyLayerChange();\n        }\n      },\n      onDelete: () => {\n        const index = layers.findIndex(r => r.config.layerNumber === layerConfig.layerNumber);\n        if (index >= 0) {\n          layers[index].frame.Destroy();\n          layers.remove(index);\n          // Renumber remaining layers\n          layers.forEach((row, idx) => {\n            row.config.layerNumber = idx + 1;\n            updateLayerNumber(row.frame, idx + 1);\n          });\n          updateCanvasSize();\n          notifyLayerChange();\n        }\n      }\n    });\n\n    layers.push({ frame: row, config: layerConfig });\n    updateCanvasSize();\n    notifyLayerChange();\n  };\n\n  // Create Add Layer button\n  const addButton = new Instance(\"TextButton\");\n  addButton.Name = \"AddLayerButton\";\n  addButton.Size = new UDim2(0, 120, 0, 30);\n  addButton.Position = new UDim2(0, 5, 1, -35);\n  addButton.BackgroundColor3 = GUI_CONSTANTS.COLORS.BUTTON.DEFAULT;\n  addButton.BorderSizePixel = 0;\n  addButton.Font = GUI_CONSTANTS.TYPOGRAPHY.BUTTON_FONT;\n  addButton.Text = \"[+] Add Layer\";\n  addButton.TextColor3 = GUI_CONSTANTS.COLORS.TEXT;\n  addButton.TextScaled = true;\n  addButton.Parent = gridContainer;\n\n  const addButtonCorner = new Instance(\"UICorner\");\n  addButtonCorner.CornerRadius = new UDim(0, 4);\n  addButtonCorner.Parent = addButton;\n\n  addButton.MouseButton1Click.Connect(addLayer);\n\n  // Add initial layers from config or default to 3 empty layers\n  if (initialLayers && initialLayers.size() > 0) {\n    initialLayers.forEach((layerConfig) => {\n      const row = createLayerRow({\n        parent: scrollFrame,\n        config: layerConfig,\n        nodeTypes,\n        linkTypes,\n        onUpdate: (updatedConfig) => {\n          const index = layers.findIndex(r => r.config.layerNumber === updatedConfig.layerNumber);\n          if (index >= 0) {\n            layers[index].config = updatedConfig;\n            notifyLayerChange();\n          }\n        },\n        onDelete: () => {\n          const index = layers.findIndex(r => r.config.layerNumber === layerConfig.layerNumber);\n          if (index >= 0) {\n            layers[index].frame.Destroy();\n            layers.remove(index);\n            // Renumber remaining layers\n            layers.forEach((row, idx) => {\n              row.config.layerNumber = idx + 1;\n              updateLayerNumber(row.frame, idx + 1);\n            });\n            updateCanvasSize();\n            notifyLayerChange();\n          }\n        }\n      });\n      layers.push({ frame: row, config: layerConfig });\n    });\n    updateCanvasSize();\n  } else {\n    // Default to 3 empty layers\n    for (let i = 0; i < 3; i++) {\n      addLayer();\n    }\n  }\n\n  return gridContainer;\n}\n\nfunction createGridHeader(parent: Frame): Frame {\n  const header = new Instance(\"Frame\");\n  header.Name = \"GridHeader\";\n  header.Size = new UDim2(1, -10, 0, GUI_CONSTANTS.ENHANCED.GRID_HEADER_HEIGHT);\n  header.Position = new UDim2(0, 5, 0, 5);\n  header.BackgroundColor3 = new Color3(0.1, 0.1, 0.1);\n  header.BorderSizePixel = 0;\n  header.Parent = parent;\n\n  const headerCorner = new Instance(\"UICorner\");\n  headerCorner.CornerRadius = new UDim(0, 4);\n  headerCorner.Parent = header;\n\n  // Create column headers\n  const columns = [\n    { text: \"Layer\", width: GUI_CONSTANTS.ENHANCED.COLUMN_WIDTHS.LAYER },\n    { text: \"# Nodes\", width: GUI_CONSTANTS.ENHANCED.COLUMN_WIDTHS.NODES },\n    { text: \"Connections/Node\", width: GUI_CONSTANTS.ENHANCED.COLUMN_WIDTHS.CONNECTIONS },\n    { text: \"Del\", width: GUI_CONSTANTS.ENHANCED.COLUMN_WIDTHS.DELETE }\n  ];\n\n  let xOffset = 5;\n  columns.forEach(col => {\n    const label = new Instance(\"TextLabel\");\n    label.Size = new UDim2(0, col.width, 1, 0);\n    label.Position = new UDim2(0, xOffset, 0, 0);\n    label.BackgroundTransparency = 1;\n    label.Font = GUI_CONSTANTS.TYPOGRAPHY.LABEL_FONT;\n    label.Text = col.text;\n    label.TextColor3 = GUI_CONSTANTS.COLORS.TEXT;\n    label.TextScaled = true;\n    label.Parent = header;\n    xOffset += col.width + 5;\n  });\n\n  return header;\n}\n\ninterface LayerRowProps {\n  parent: ScrollingFrame;\n  config: LayerConfig;\n  nodeTypes: string[];\n  linkTypes: string[];\n  onUpdate: (config: LayerConfig) => void;\n  onDelete: () => void;\n}\n\nfunction createLayerRow({\n  parent,\n  config,\n  nodeTypes,\n  linkTypes,\n  onUpdate,\n  onDelete\n}: LayerRowProps): Frame {\n  const row = new Instance(\"Frame\");\n  row.Name = `LayerRow_${config.layerNumber}`;\n  row.Size = new UDim2(1, 0, 0, GUI_CONSTANTS.ENHANCED.GRID_ROW_HEIGHT);\n  row.BackgroundColor3 = new Color3(0.18, 0.18, 0.18);\n  row.BorderSizePixel = 0;\n  row.Parent = parent;\n\n  const rowCorner = new Instance(\"UICorner\");\n  rowCorner.CornerRadius = new UDim(0, 4);\n  rowCorner.Parent = row;\n\n  let xOffset = 5;\n\n  // Layer number (read-only)\n  const layerLabel = new Instance(\"TextLabel\");\n  layerLabel.Name = \"LayerNumber\";\n  layerLabel.Size = new UDim2(0, GUI_CONSTANTS.ENHANCED.COLUMN_WIDTHS.LAYER, 1, -4);\n  layerLabel.Position = new UDim2(0, xOffset, 0, 2);\n  layerLabel.BackgroundTransparency = 1;\n  layerLabel.Font = GUI_CONSTANTS.TYPOGRAPHY.LABEL_FONT;\n  layerLabel.Text = tostring(config.layerNumber);\n  layerLabel.TextColor3 = GUI_CONSTANTS.COLORS.TEXT;\n  layerLabel.TextScaled = true;\n  layerLabel.Parent = row;\n  xOffset += GUI_CONSTANTS.ENHANCED.COLUMN_WIDTHS.LAYER + 5;\n\n  // Number of nodes input\n  const nodesInput = new Instance(\"TextBox\");\n  nodesInput.Name = \"NodesInput\";\n  nodesInput.Size = new UDim2(0, GUI_CONSTANTS.ENHANCED.COLUMN_WIDTHS.NODES, 1, -4);\n  nodesInput.Position = new UDim2(0, xOffset, 0, 2);\n  nodesInput.BackgroundColor3 = new Color3(0.25, 0.25, 0.25);\n  nodesInput.BorderSizePixel = 0;\n  nodesInput.Font = GUI_CONSTANTS.TYPOGRAPHY.INPUT_FONT;\n  nodesInput.Text = tostring(config.numNodes);\n  nodesInput.TextColor3 = GUI_CONSTANTS.COLORS.TEXT;\n  nodesInput.TextScaled = true;\n  nodesInput.Parent = row;\n  xOffset += GUI_CONSTANTS.ENHANCED.COLUMN_WIDTHS.NODES + 5;\n\n  const nodesCorner = new Instance(\"UICorner\");\n  nodesCorner.CornerRadius = new UDim(0, 4);\n  nodesCorner.Parent = nodesInput;\n\n  // Connections per node input\n  const connectionsInput = new Instance(\"TextBox\");\n  connectionsInput.Name = \"ConnectionsInput\";\n  connectionsInput.Size = new UDim2(0, GUI_CONSTANTS.ENHANCED.COLUMN_WIDTHS.CONNECTIONS, 1, -4);\n  connectionsInput.Position = new UDim2(0, xOffset, 0, 2);\n  connectionsInput.BackgroundColor3 = new Color3(0.25, 0.25, 0.25);\n  connectionsInput.BorderSizePixel = 0;\n  connectionsInput.Font = GUI_CONSTANTS.TYPOGRAPHY.INPUT_FONT;\n  connectionsInput.Text = tostring(config.connectionsPerNode);\n  connectionsInput.TextColor3 = GUI_CONSTANTS.COLORS.TEXT;\n  connectionsInput.TextScaled = true;\n  connectionsInput.Parent = row;\n  xOffset += GUI_CONSTANTS.ENHANCED.COLUMN_WIDTHS.CONNECTIONS + 5;\n\n  const connectionsCorner = new Instance(\"UICorner\");\n  connectionsCorner.CornerRadius = new UDim(0, 4);\n  connectionsCorner.Parent = connectionsInput;\n\n  // Delete button\n  const deleteButton = new Instance(\"TextButton\");\n  deleteButton.Name = \"DeleteButton\";\n  deleteButton.Size = new UDim2(0, GUI_CONSTANTS.ENHANCED.COLUMN_WIDTHS.DELETE, 1, -4);\n  deleteButton.Position = new UDim2(0, xOffset, 0, 2);\n  deleteButton.BackgroundColor3 = GUI_CONSTANTS.COLORS.ERROR;\n  deleteButton.BorderSizePixel = 0;\n  deleteButton.Font = GUI_CONSTANTS.TYPOGRAPHY.BUTTON_FONT;\n  deleteButton.Text = \"[X]\";\n  deleteButton.TextColor3 = GUI_CONSTANTS.COLORS.TEXT;\n  deleteButton.TextScaled = true;\n  deleteButton.Parent = row;\n\n  const deleteCorner = new Instance(\"UICorner\");\n  deleteCorner.CornerRadius = new UDim(0, 4);\n  deleteCorner.Parent = deleteButton;\n\n  deleteButton.MouseButton1Click.Connect(onDelete);\n\n  // Input validation\n  nodesInput.FocusLost.Connect(() => {\n    const value = tonumber(nodesInput.Text);\n    if (value && value > 0) {\n      config.numNodes = math.floor(value);\n      nodesInput.Text = tostring(config.numNodes);\n      onUpdate(config);\n    } else {\n      nodesInput.Text = tostring(config.numNodes);\n    }\n  });\n\n  connectionsInput.FocusLost.Connect(() => {\n    const value = tonumber(connectionsInput.Text);\n    if (value && value >= 0) {\n      config.connectionsPerNode = math.floor(value);\n      connectionsInput.Text = tostring(config.connectionsPerNode);\n      onUpdate(config);\n    } else {\n      connectionsInput.Text = tostring(config.connectionsPerNode);\n    }\n  });\n\n  return row;\n}\n\nfunction updateLayerNumber(row: Frame, newNumber: number): void {\n  const layerLabel = row.FindFirstChild(\"LayerNumber\") as TextLabel;\n  if (layerLabel) {\n    layerLabel.Text = tostring(newNumber);\n  }\n}",
      "patterns": {
        "functions": 17,
        "classes": 0,
        "interfaces": 3,
        "exports": 1,
        "imports": 2,
        "anyTypes": 0,
        "typeAssertions": 2,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": [
          {
            "name": "createLayerGrid",
            "type": "function",
            "isExported": true
          },
          {
            "name": "createGridHeader",
            "type": "function",
            "isExported": false
          },
          {
            "name": "createLayerRow",
            "type": "function",
            "isExported": false
          },
          {
            "name": "updateLayerNumber",
            "type": "function",
            "isExported": false
          },
          {
            "name": "updateCanvasSize",
            "type": "arrow",
            "isExported": false
          },
          {
            "name": "notifyLayerChange",
            "type": "arrow",
            "isExported": false
          },
          {
            "name": "addLayer",
            "type": "arrow",
            "isExported": false
          }
        ]
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/client/services/configGui/makeConfigGui.ts",
      "relativePath": "client/services/configGui/makeConfigGui.ts",
      "name": "makeConfigGui.ts",
      "size": 11736,
      "lines": 359,
      "lastModified": "2025-07-11T03:08:40.324Z",
      "content": "/**\n * Configuration GUI Service\n *\n * Implements the Screen GUI specification defined in:\n * 000ProjectSpecification/002ScreenGuiSpec.md\n *\n * This service provides the user interface for configuring the simple data generator\n * with level-based node counts and other parameters.\n */\n\nimport { Players } from \"@rbxts/services\";\nimport { GUI_CONSTANTS } from \"./constants\";\nimport { EnhancedGeneratorConfig, ConfigGUIServiceOptions } from \"./interfaces\";\nimport { createCollapsibleFrame } from \"./components/collapsibleFrame\";\nimport { createGlobalSettings } from \"./components/globalSettings\";\nimport { createLayerGrid } from \"./components/layerGrid\";\nimport { createStatusArea } from \"./components/status\";\nimport { createVisualizationControls } from \"./components/visualizationControls\";\nimport { createAxisMappingControls } from \"./components/axisMappingControls/index\";\nimport { refreshAxisDropdownGUI } from \"./components/axisMappingControls/utils/screenGuiManager\";\nimport { GUIStateManager } from \"./stateManager\";\nimport { GUIEventHandlers } from \"./eventHandlers\";\nimport { ComponentFactory } from \"./componentFactory\";\nimport { GuiLayoutManager, COMPONENT_HEIGHTS } from \"./guiLayout\";\n\nexport class ConfigGUIService {\n  private stateManager: GUIStateManager;\n  private eventHandlers: GUIEventHandlers;\n\n  constructor(options: ConfigGUIServiceOptions) {\n    // Initialize state manager\n    this.stateManager = new GUIStateManager(options.initialConfig);\n\n    // Initialize event handlers\n    this.eventHandlers = new GUIEventHandlers({\n      stateManager: this.stateManager,\n      onEnhancedConfigChange: options.onEnhancedConfigChange,\n      onClearRequest: options.onClearRequest,\n      onUpdateRequest: options.onUpdateRequest,\n    });\n  }\n\n  /**\n   * Creates and displays the configuration GUI\n   */\n  public createGUI(): void {\n    const player = Players.LocalPlayer;\n    const playerGui = player.WaitForChild(\"PlayerGui\") as PlayerGui;\n\n    // Check if GUI already exists\n    const existingGui = playerGui.FindFirstChild(\n      GUI_CONSTANTS.NAMES.SCREEN_GUI\n    );\n    if (existingGui) {\n      existingGui.Destroy();\n    }\n\n    // Create ScreenGui\n    const gui = new Instance(\"ScreenGui\");\n    gui.Name = GUI_CONSTANTS.NAMES.SCREEN_GUI;\n    gui.ResetOnSpawn = false;\n    gui.Parent = playerGui;\n    this.stateManager.setGUI(gui);\n\n    // Create collapsible main frame - full height\n    const mainFrameSize = new UDim2(\n      0,\n      GUI_CONSTANTS.FRAME.ENHANCED_WIDTH,\n      0.9,\n      0\n    );\n    const collapsibleFrame = createCollapsibleFrame({\n      parent: gui,\n      size: mainFrameSize,\n      title: \"Graph Configuration\",\n      position: new UDim2(0, 10, 0, 10),\n    });\n\n    // Store the main frame\n    this.stateManager.setConfigFrame(collapsibleFrame.frame);\n\n    // Create visualization controls on the right side\n    const vizFrameSize = new UDim2(0, 300, 0, 200);\n    const vizCollapsibleFrame = createCollapsibleFrame({\n      parent: gui,\n      size: vizFrameSize,\n      title: \"Visualization Controls\",\n      position: new UDim2(0, GUI_CONSTANTS.FRAME.ENHANCED_WIDTH + 20, 0, 10), // Position to the right\n    });\n\n    // Create unified UI in the content frames\n    this.createUnifiedUI(\n      collapsibleFrame.contentFrame,\n      vizCollapsibleFrame.contentFrame\n    );\n\n    this.stateManager.setVisible(true);\n  }\n\n  /**\n   * Creates the unified UI\n   */\n  private createUnifiedUI(contentFrame?: Frame, vizContentFrame?: Frame): void {\n    const state = this.stateManager.getState();\n    const parentFrame = contentFrame || state.configFrame;\n    if (!parentFrame) return;\n\n    const config = this.stateManager.getEnhancedConfig();\n\n    // Create layout manager\n    const layoutManager = new GuiLayoutManager(parentFrame);\n\n    // Create scrolling frame for content\n    const scrollFrame = layoutManager.createScrollingFrame();\n\n    // Create global settings with spacing controls\n    const globalSettings = createGlobalSettings({\n      parent: scrollFrame,\n      spacing: config.spacing!,\n      onSpacingChange: (field, value) => {\n        this.eventHandlers.handleSpacingChange(field, value);\n      },\n    });\n    globalSettings.Position = layoutManager.getNextPosition(\n      COMPONENT_HEIGHTS.GLOBAL_SETTINGS\n    );\n\n\n    // Generate default type arrays (legacy layer grid support)\n    const nodeTypes = this.eventHandlers.generateTypeArray(\"Type\", 5);\n    const linkTypes = this.eventHandlers.generateTypeArray(\"Link\", 3);\n\n    // Create layer grid with initial layers\n    const layerGrid = createLayerGrid({\n      parent: scrollFrame,\n      onLayerUpdate: (layers) => {\n        this.eventHandlers.handleLayerUpdate(layers);\n      },\n      nodeTypes,\n      linkTypes,\n      initialLayers: config.layers,\n    });\n    layerGrid.Position = layoutManager.getNextPosition(\n      COMPONENT_HEIGHTS.LAYER_GRID_HEADER +\n        config.layers.size() * COMPONENT_HEIGHTS.LAYER_ROW +\n        50\n    );\n\n    // Move visualization controls to separate frame\n    if (vizContentFrame) {\n      const visualizationControls = createVisualizationControls({\n        parent: vizContentFrame,\n        visualization: config.visualization!,\n        onVisualizationChange: (field, value) => {\n          this.eventHandlers.handleVisualizationChange(field, value);\n        },\n      });\n      visualizationControls.Position = new UDim2(0, 10, 0, 10);\n      visualizationControls.Size = new UDim2(1, -20, 1, -20);\n    }\n\n    // Store axis mapping config for later creation\n    this.stateManager.setAxisMappingConfig({\n      parent: parentFrame, // Not actually used since dropdowns are separate GUIs\n      axisMapping: config.axisMapping,\n      visualMapping: config.visualMapping,\n      useLayerForYAxis: config.yAxisConfig?.useLayer !== false, // Default to true\n      yAxisProperty: config.yAxisConfig?.property,\n      onAxisMappingChange: (axis: \"xAxis\" | \"zAxis\" | \"yAxis\", value: string) => {\n        this.stateManager.updateAxisMapping(axis, value);\n        // Trigger re-render with new axis mapping\n        this.eventHandlers.handleRegenerateClick();\n      },\n      onVisualMappingChange: (\n        mapping: \"backgroundColor\" | \"borderColor\",\n        value: string\n      ) => {\n        this.stateManager.updateVisualMapping(mapping, value);\n        // Trigger re-render with new visual mapping\n        this.eventHandlers.handleRegenerateClick();\n      },\n      onYAxisModeChange: (useLayer: boolean) => {\n        this.stateManager.updateYAxisConfig({ useLayer });\n        // Trigger re-render with new Y-axis mode\n        this.eventHandlers.handleRegenerateClick();\n      },\n      onYAxisPropertyChange: (property: string) => {\n        this.stateManager.updateYAxisConfig({ useLayer: false, property });\n        // Trigger re-render with new Y-axis property\n        this.eventHandlers.handleRegenerateClick();\n      },\n    });\n\n    // Update scrolling frame canvas size\n    layoutManager.updateCanvasSize(scrollFrame);\n\n    // Create action buttons (outside scrolling frame)\n    this.createActionButtons(parentFrame);\n\n    // Create status area (outside scrolling frame)\n    const statusLabel = createStatusArea({\n      parent: parentFrame,\n    });\n    this.stateManager.setStatusLabel(statusLabel);\n  }\n\n  /**\n   * Creates action buttons for enhanced mode\n   */\n  private createActionButtons(parentFrame?: Frame): void {\n    const state = this.stateManager.getState();\n    const parent = parentFrame || state.configFrame;\n    if (!parent) return;\n\n    // Position buttons 70 pixels from bottom using scale\n    const buttonYScale = 1;\n    const buttonYOffset = -70;\n\n    // Regenerate button\n    ComponentFactory.createButton({\n      name: \"RegenerateButton\",\n      text: \"Regenerate\",\n      position: new UDim2(0, 10, buttonYScale, buttonYOffset),\n      parent: parent,\n      onClick: () => this.eventHandlers.handleRegenerateClick(),\n    });\n\n    // Update button\n    ComponentFactory.createButton({\n      name: \"UpdateButton\",\n      text: \"Update\",\n      position: new UDim2(\n        0,\n        10 + GUI_CONSTANTS.BUTTON.WIDTH + GUI_CONSTANTS.BUTTON.SPACING,\n        buttonYScale,\n        buttonYOffset\n      ),\n      parent: parent,\n      onClick: () => this.eventHandlers.handleUpdateClick(),\n    });\n\n    // Clear button\n    ComponentFactory.createButton({\n      name: \"ClearButton\",\n      text: \"Clear\",\n      position: new UDim2(\n        0,\n        10 + (GUI_CONSTANTS.BUTTON.WIDTH + GUI_CONSTANTS.BUTTON.SPACING) * 2,\n        buttonYScale,\n        buttonYOffset\n      ),\n      parent: parent,\n      onClick: () =>\n        this.eventHandlers.handleClearClick(() => this.createGUI()),\n    });\n\n    // Export Config button\n    ComponentFactory.createButton({\n      name: \"ExportConfigButton\",\n      text: \"Export\",\n      position: new UDim2(\n        0,\n        10 + (GUI_CONSTANTS.BUTTON.WIDTH + GUI_CONSTANTS.BUTTON.SPACING) * 3,\n        buttonYScale,\n        buttonYOffset\n      ),\n      parent: parent,\n      onClick: () => this.eventHandlers.handleExportConfigClick(),\n    });\n  }\n\n  /**\n   * Updates the enhanced configuration\n   */\n  public updateEnhancedConfig(config: EnhancedGeneratorConfig): void {\n    this.stateManager.updateEnhancedConfig(config);\n\n    // If GUI is visible, update the display\n    const state = this.stateManager.getState();\n    if (state.configFrame) {\n      // Recreate the GUI to reflect new configuration\n      state.configFrame.Destroy();\n      this.createGUI();\n    }\n  }\n\n  /**\n   * Updates the discovered properties from the data\n   */\n  public updateDiscoveredProperties(properties: string[]): void {\n    properties.forEach((prop, index) => {});\n\n    // Update the state manager with discovered properties\n    this.stateManager.updateDiscoveredProperties(properties);\n\n    // First refresh the axis dropdown GUI to clear old dropdowns\n    refreshAxisDropdownGUI();\n\n    // Create axis mapping controls now that we have properties\n    const axisMappingConfig = this.stateManager.getAxisMappingConfig();\n    if (axisMappingConfig) {\n      // Update the config with the new axis mapping values from state\n      const currentState = this.stateManager.getState();\n      if (currentState.enhancedConfig.axisMapping) {\n        axisMappingConfig.axisMapping = currentState.enhancedConfig.axisMapping;\n      }\n      createAxisMappingControls(axisMappingConfig);\n    }\n  }\n\n  /**\n   * Gets the current visibility state\n   */\n  public isVisible(): boolean {\n    return this.stateManager.getState().isVisible;\n  }\n\n  /**\n   * Shows an error message to the user\n   */\n  public showError(message: string): void {\n    const state = this.stateManager.getState();\n    const screenGui = state.configFrame?.Parent?.Parent as ScreenGui;\n    if (!screenGui) return;\n\n    // Create error notification\n    const errorFrame = new Instance(\"Frame\");\n    errorFrame.Name = \"ErrorNotification\";\n    errorFrame.Size = new UDim2(0, 400, 0, 100);\n    errorFrame.Position = new UDim2(0.5, -200, 0, 50);\n    errorFrame.BackgroundColor3 = new Color3(0.8, 0.2, 0.2);\n    errorFrame.BorderSizePixel = 2;\n    errorFrame.BorderColor3 = new Color3(0.6, 0, 0);\n    errorFrame.Parent = screenGui;\n\n    const errorText = new Instance(\"TextLabel\");\n    errorText.Text = \"⚠️ \" + message;\n    errorText.Size = new UDim2(1, -20, 1, -20);\n    errorText.Position = new UDim2(0, 10, 0, 10);\n    errorText.BackgroundTransparency = 1;\n    errorText.TextColor3 = new Color3(1, 1, 1);\n    errorText.TextScaled = true;\n    errorText.TextWrapped = true;\n    errorText.Font = Enum.Font.SourceSansBold;\n    errorText.Parent = errorFrame;\n\n    // Auto-dismiss after 5 seconds\n    wait(5);\n    errorFrame.Destroy();\n  }\n\n  /**\n   * Destroys the GUI\n   */\n  public destroy(): void {\n    this.stateManager.destroy();\n  }\n}\n",
      "patterns": {
        "functions": 8,
        "classes": 1,
        "interfaces": 1,
        "exports": 1,
        "imports": 14,
        "anyTypes": 0,
        "typeAssertions": 3,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [
          {
            "name": "ConfigGUIService",
            "methodCount": 13,
            "methods": [
              "createGUI",
              "if",
              "createUnifiedUI",
              "if",
              "createActionButtons",
              "updateEnhancedConfig",
              "if",
              "updateDiscoveredProperties",
              "if",
              "if",
              "isVisible",
              "showError",
              "destroy"
            ]
          }
        ],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/renderers/unifiedDataRenderer/unifiedDataRenderer.ts",
      "relativePath": "shared/modules/renderers/unifiedDataRenderer/unifiedDataRenderer.ts",
      "name": "unifiedDataRenderer.ts",
      "size": 10869,
      "lines": 302,
      "lastModified": "2025-07-11T00:38:16.570Z",
      "content": "/**\n * Unified Data Renderer - Refactored Version\n *\n * Main orchestrator that delegates to specialized modules\n */\n\nimport { EnhancedGeneratorConfig } from \"../../../interfaces/enhancedGenerator.interface\";\nimport {\n  Cluster,\n  Node,\n} from \"../../../interfaces/simpleDataGenerator.interface\";\nimport { DataGenerator } from \"./core/dataGenerator\";\nimport { PositionCalculator } from \"./core/positionCalculator\";\nimport { NodeRenderer } from \"./rendering/nodeRenderer\";\nimport { UpdateManager } from \"./rendering/updateManager\";\n// import { LabelRenderer } from \"./rendering/labelRenderer\"; // Disabled per T17\nimport { PropertyValueResolver } from \"../propertyValueResolver\";\nimport { LAYOUT_CONSTANTS } from \"../constants/layoutConstants\";\nimport { getDefaultXAxis, getDefaultZAxis } from \"../../../constants/axisDefaults\";\nimport { LaneManager } from \"./managers/laneManager\";\nimport { PlatformShadowManager } from \"./managers/platformShadowManager\";\nimport { WallManager } from \"./managers/wallManager\";\nimport { YParallelShadowManager } from \"./managers/yParallelShadowManager\";\n\nexport class UnifiedDataRenderer {\n  private dataGenerator: DataGenerator;\n  private positionCalculator: PositionCalculator;\n  private nodeRenderer: NodeRenderer;\n  private updateManager: UpdateManager;\n  // private labelRenderer: LabelRenderer; // Disabled per T17\n  private propertyResolver: PropertyValueResolver;\n  private laneManager: LaneManager;\n  private platformShadowManager: PlatformShadowManager;\n  private wallManager: WallManager;\n  private yParallelShadowManager: YParallelShadowManager;\n  private currentConfig?: EnhancedGeneratorConfig;\n\n  constructor() {\n    this.dataGenerator = new DataGenerator();\n    this.positionCalculator = new PositionCalculator();\n    this.nodeRenderer = new NodeRenderer();\n    this.updateManager = new UpdateManager();\n    // this.labelRenderer = new LabelRenderer(); // Disabled per T17\n    this.propertyResolver = new PropertyValueResolver();\n    this.laneManager = new LaneManager();\n    this.platformShadowManager = new PlatformShadowManager();\n    this.wallManager = new WallManager();\n    this.yParallelShadowManager = new YParallelShadowManager();\n  }\n\n  /**\n   * Main entry point - renders data based on enhanced configuration\n   */\n  public renderEnhancedData(\n    parentFolder: Folder,\n    config: EnhancedGeneratorConfig,\n    origin?: Vector3\n  ): Cluster {\n    // Delete any existing platform and shadow blocks\n    const existingPlatform = parentFolder.FindFirstChild(\"PlatformBlock\");\n    if (existingPlatform) {\n      existingPlatform.Destroy();\n    }\n\n    // Also check for legacy flat block\n    const existingBlock = parentFolder.FindFirstChild(\"FlatBlockFoundation\");\n    if (existingBlock) {\n      existingBlock.Destroy();\n    }\n\n    // Generate the cluster data\n    const cluster = this.dataGenerator.generateClusterFromLayers(config);\n    \n    // Print how many nodes were actually created\n    const nodeCount = cluster.groups[0].nodes.size();\n    print(`[UnifiedDataRenderer] Created ${nodeCount} nodes from data`);\n\n    // Calculate swim lane positions\n    this.positionCalculator.calculateLayerSwimLanePositions(cluster, config);\n\n    // Adjust positions to center bottom at origin\n    const targetOrigin = origin || new Vector3(0, 0, 0);\n    this.positionCalculator.centerBottomAtOrigin(cluster, targetOrigin, config);\n\n    // Calculate Z-axis centering offset for type lanes\n    const zAxisProperty = config?.axisMapping?.zAxis || getDefaultZAxis(cluster.discoveredProperties);\n    const zAxisOffset = this.laneManager.calculateZAxisOffset(cluster, zAxisProperty);\n\n    // Apply the Z-axis centering offset to all nodes\n    if (zAxisOffset !== 0) {\n      cluster.groups[0].nodes.forEach((node: Node) => {\n        node.position.z += zAxisOffset;\n      });\n    }\n\n    // Create temporary parent for lanes during construction\n    const lanesParent = new Instance(\"Model\");\n    lanesParent.Name = \"TemporaryLanesParent\";\n    lanesParent.Parent = parentFolder;\n\n    // Use LaneManager to create all lanes\n    const laneResult = this.laneManager.createAllLanes(\n      cluster,\n      targetOrigin,\n      config,\n      lanesParent\n    );\n\n    const { zParallelLanes, allLaneBounds } = laneResult;\n\n    // Create platform and shadow blocks last, sized to encompass all lanes\n    const { platform, shadow } = this.platformShadowManager.createPlatformAndShadow(\n      targetOrigin,\n      parentFolder,\n      allLaneBounds\n    );\n\n    // Re-parent lanes to shadow block\n    const xParallelModel = lanesParent.FindFirstChild(\"XParallel_Lanes_Group\");\n    const zParallelModel = lanesParent.FindFirstChild(\"ZParallel_Lanes_Group\");\n    if (xParallelModel) xParallelModel.Parent = shadow;\n    if (zParallelModel) zParallelModel.Parent = shadow;\n    lanesParent.Destroy();\n\n    // Create vertical walls if Y-axis property is configured\n    const shadowWidth =\n      allLaneBounds.width + LAYOUT_CONSTANTS.SHADOW_PADDING.X_PADDING * 2;\n    const shadowDepth =\n      allLaneBounds.depth + LAYOUT_CONSTANTS.SHADOW_PADDING.Z_PADDING * 2;\n    \n    this.wallManager.createWalls(\n      cluster,\n      config,\n      targetOrigin,\n      shadowWidth,\n      shadowDepth,\n      platform\n    );\n\n    // Render the cluster first\n    this.nodeRenderer.renderCluster(cluster, parentFolder, config);\n\n    // Create Y-parallel shadows if Y-axis property is configured\n    this.yParallelShadowManager.createYParallelShadows(\n      cluster,\n      parentFolder,\n      config,\n      allLaneBounds\n    );\n\n    // Log alignment check between nodes and swimlanes\n    const nodesByType = new Map<string, Node[]>();\n\n    \n    zParallelLanes.forEach((_lane: Part, _laneName: string) => {\n    });\n\n    cluster.groups[0].nodes.forEach((node: Node) => {\n      const xAxisProperty = config.axisMapping?.xAxis || getDefaultXAxis(cluster.discoveredProperties);\n      const propertyValue = this.propertyResolver.getPropertyValue(\n        node,\n        xAxisProperty\n      );\n      \n      if (!nodesByType.has(propertyValue)) {\n        nodesByType.set(propertyValue, []);\n      }\n      nodesByType.get(propertyValue)!.push(node);\n    });\n\n    nodesByType.forEach((nodes: Node[], typeName: string) => {\n      const swimlane = zParallelLanes.get(typeName);\n      if (swimlane) {\n        nodes.forEach((_node: Node) => {\n        });\n      } else {\n      }\n    });\n\n    // Swimlane labels disabled per T17\n    // Labels are now provided by endcaps on the swimlanes\n\n    // Store current configuration for update comparison\n    this.currentConfig = config;\n    \n    // Return the cluster with discovered properties\n    return cluster;\n  }\n\n  /**\n   * Updates existing data incrementally based on configuration changes\n   */\n  public updateEnhancedData(\n    parentFolder: Folder,\n    config: EnhancedGeneratorConfig,\n    origin?: Vector3\n  ): Cluster | void {\n    // Find GraphMaker folder\n    const graphMakerFolder = parentFolder.FindFirstChild(\"GraphMaker\");\n    if (!graphMakerFolder || !this.currentConfig) {\n      const cluster = this.renderEnhancedData(parentFolder, config, origin);\n      return cluster;\n    }\n\n    // Find nodes and links folders\n    const clusterFolder = graphMakerFolder.FindFirstChild(\"UnifiedDataCluster\");\n    if (!clusterFolder) {\n      const cluster = this.renderEnhancedData(parentFolder, config, origin);\n      return cluster;\n    }\n\n    const nodesFolder = clusterFolder.FindFirstChild(\"Nodes\") as Folder;\n    const linksFolder = clusterFolder.FindFirstChild(\"Links\") as Folder;\n\n    if (!nodesFolder || !linksFolder) {\n      const cluster = this.renderEnhancedData(parentFolder, config, origin);\n      return cluster;\n    }\n\n    // Delegate to update manager\n    this.updateManager.performIncrementalUpdate(\n      config,\n      nodesFolder,\n      linksFolder,\n      origin || new Vector3(0, 0, 0)\n    );\n\n    // Update stored configuration\n    this.currentConfig = config;\n  }\n\n  /**\n   * Creates labels for X and Z axis swimlanes\n   * DISABLED: Per T17 - swimlane labels removed, using endcaps instead\n   */\n  /*\n  private createSwimLaneLabels(\n    cluster: Cluster,\n    parentFolder: Folder,\n    config?: EnhancedGeneratorConfig,\n    xAxisBlocks?: Map<string, Part>,\n    zAxisBlocks?: Map<string, Part>,\n    platformBounds?: { minX: number; maxX: number; minZ: number; maxZ: number }\n  ): void {\n    // Use axis mapping if available\n    const xAxisProperty = config?.axisMapping?.xAxis || getDefaultXAxis(cluster.discoveredProperties);\n    const zAxisProperty = config?.axisMapping?.zAxis || getDefaultZAxis(cluster.discoveredProperties);\n    \n    // Organize nodes by x-axis property for X-axis labels\n    const nodesByXProperty = new Map<string, Node[]>();\n    const xPropertyBounds = new Map<string, { minX: number; maxX: number; minZ: number; maxZ: number }>();\n    \n    // Organize nodes by z-axis property for Z-axis labels\n    const nodesByZProperty = new Map<string, Node[]>();\n    const zPropertyBounds = new Map<string, { minX: number; maxX: number; minZ: number; maxZ: number }>();\n    \n    // Group nodes by x and z properties\n    cluster.groups[0].nodes.forEach(node => {\n      // Group by x-axis property\n      const xValue = this.propertyResolver.getPropertyValue(node, xAxisProperty);\n      if (!nodesByXProperty.has(xValue)) {\n        nodesByXProperty.set(xValue, []);\n        xPropertyBounds.set(xValue, {\n          minX: math.huge,\n          maxX: -math.huge,\n          minZ: math.huge,\n          maxZ: -math.huge\n        });\n      }\n      nodesByXProperty.get(xValue)!.push(node);\n      const xBounds = xPropertyBounds.get(xValue)!;\n      xBounds.minX = math.min(xBounds.minX, node.position.x);\n      xBounds.maxX = math.max(xBounds.maxX, node.position.x);\n      xBounds.minZ = math.min(xBounds.minZ, node.position.z);\n      xBounds.maxZ = math.max(xBounds.maxZ, node.position.z);\n      \n      // Group by z-axis property\n      const zValue = this.propertyResolver.getPropertyValue(node, zAxisProperty);\n      if (!nodesByZProperty.has(zValue)) {\n        nodesByZProperty.set(zValue, []);\n        zPropertyBounds.set(zValue, {\n          minX: math.huge,\n          maxX: -math.huge,\n          minZ: math.huge,\n          maxZ: -math.huge\n        });\n      }\n      nodesByZProperty.get(zValue)!.push(node);\n      const zBounds = zPropertyBounds.get(zValue)!;\n      zBounds.minX = math.min(zBounds.minX, node.position.x);\n      zBounds.maxX = math.max(zBounds.maxX, node.position.x);\n      zBounds.minZ = math.min(zBounds.minZ, node.position.z);\n      zBounds.maxZ = math.max(zBounds.maxZ, node.position.z);\n    });\n    \n    // Create labels with swimlane blocks if available\n    this.labelRenderer.createXAxisLabels(nodesByXProperty, xPropertyBounds, parentFolder, 0, xAxisBlocks, platformBounds);\n    this.labelRenderer.createZAxisLabels(zPropertyBounds, parentFolder, 0, zAxisBlocks, platformBounds);\n  }\n  */\n}\n",
      "patterns": {
        "functions": 6,
        "classes": 1,
        "interfaces": 0,
        "exports": 1,
        "imports": 14,
        "anyTypes": 0,
        "typeAssertions": 2,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [
          {
            "name": "UnifiedDataRenderer",
            "methodCount": 10,
            "methods": [
              "renderEnhancedData",
              "if",
              "if",
              "if",
              "if",
              "updateEnhancedData",
              "if",
              "if",
              "if",
              "createSwimLaneLabels"
            ]
          }
        ],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/client/services/nodePropertiesInspector/nodePropertiesInspector.service.ts",
      "relativePath": "client/services/nodePropertiesInspector/nodePropertiesInspector.service.ts",
      "name": "nodePropertiesInspector.service.ts",
      "size": 10482,
      "lines": 315,
      "lastModified": "2025-07-10T09:07:55.036Z",
      "content": "import { Players } from \"@rbxts/services\";\nimport { Node } from \"../../../shared/interfaces/simpleDataGenerator.interface\";\n\nexport class NodePropertiesInspectorService {\n  private static instance: NodePropertiesInspectorService;\n  private gui?: ScreenGui;\n  private panel?: Frame;\n  private currentNode?: Node;\n  private clickConnection?: RBXScriptConnection;\n\n  private constructor() {}\n\n  public static getInstance(): NodePropertiesInspectorService {\n    if (!NodePropertiesInspectorService.instance) {\n      NodePropertiesInspectorService.instance = new NodePropertiesInspectorService();\n    }\n    return NodePropertiesInspectorService.instance;\n  }\n\n  public initialize(): void {\n    const player = Players.LocalPlayer;\n    const playerGui = player.WaitForChild(\"PlayerGui\") as PlayerGui;\n\n    // Create the GUI\n    this.gui = new Instance(\"ScreenGui\");\n    this.gui.Name = \"NodePropertiesInspector\";\n    this.gui.ResetOnSpawn = false;\n    this.gui.Parent = playerGui;\n\n    // Create the panel\n    this.createPanel();\n\n    // Set up click detection\n    this.setupClickDetection();\n  }\n\n  private createPanel(): void {\n    if (!this.gui) return;\n\n    // Create main panel frame\n    this.panel = new Instance(\"Frame\");\n    this.panel.Name = \"PropertiesPanel\";\n    this.panel.Size = new UDim2(0, 300, 0, 400);\n    this.panel.Position = new UDim2(1, -310, 0, 10); // Upper right corner\n    this.panel.BackgroundColor3 = new Color3(0.15, 0.15, 0.15);\n    this.panel.BorderSizePixel = 0;\n    this.panel.Visible = false;\n    this.panel.Parent = this.gui;\n\n    // Add corner radius\n    const corner = new Instance(\"UICorner\");\n    corner.CornerRadius = new UDim(0, 8);\n    corner.Parent = this.panel;\n\n    // Add title bar\n    const titleBar = new Instance(\"Frame\");\n    titleBar.Name = \"TitleBar\";\n    titleBar.Size = new UDim2(1, 0, 0, 40);\n    titleBar.Position = new UDim2(0, 0, 0, 0);\n    titleBar.BackgroundColor3 = new Color3(0.1, 0.1, 0.1);\n    titleBar.BorderSizePixel = 0;\n    titleBar.Parent = this.panel;\n\n    const titleCorner = new Instance(\"UICorner\");\n    titleCorner.CornerRadius = new UDim(0, 8);\n    titleCorner.Parent = titleBar;\n\n    // Fix bottom corners of title bar\n    const titleFix = new Instance(\"Frame\");\n    titleFix.Size = new UDim2(1, 0, 0, 8);\n    titleFix.Position = new UDim2(0, 0, 1, -8);\n    titleFix.BackgroundColor3 = new Color3(0.1, 0.1, 0.1);\n    titleFix.BorderSizePixel = 0;\n    titleFix.Parent = titleBar;\n\n    // Add title text\n    const titleText = new Instance(\"TextLabel\");\n    titleText.Name = \"Title\";\n    titleText.Size = new UDim2(1, -50, 1, 0);\n    titleText.Position = new UDim2(0, 10, 0, 0);\n    titleText.BackgroundTransparency = 1;\n    titleText.Text = \"Node Properties\";\n    titleText.TextColor3 = new Color3(1, 1, 1);\n    titleText.TextScaled = true;\n    titleText.Font = Enum.Font.SourceSansBold;\n    titleText.TextXAlignment = Enum.TextXAlignment.Left;\n    titleText.Parent = titleBar;\n\n    // Add close button\n    const closeButton = new Instance(\"TextButton\");\n    closeButton.Name = \"CloseButton\";\n    closeButton.Size = new UDim2(0, 30, 0, 30);\n    closeButton.Position = new UDim2(1, -35, 0.5, -15);\n    closeButton.BackgroundColor3 = new Color3(0.8, 0.2, 0.2);\n    closeButton.Text = \"X\";\n    closeButton.TextColor3 = new Color3(1, 1, 1);\n    closeButton.TextScaled = true;\n    closeButton.Font = Enum.Font.SourceSansBold;\n    closeButton.Parent = titleBar;\n\n    const closeCorner = new Instance(\"UICorner\");\n    closeCorner.CornerRadius = new UDim(0, 4);\n    closeCorner.Parent = closeButton;\n\n    closeButton.MouseButton1Click.Connect(() => {\n      this.hide();\n    });\n\n    // Create scrolling frame for properties\n    const scrollFrame = new Instance(\"ScrollingFrame\");\n    scrollFrame.Name = \"PropertiesScroll\";\n    scrollFrame.Size = new UDim2(1, -20, 1, -60);\n    scrollFrame.Position = new UDim2(0, 10, 0, 50);\n    scrollFrame.BackgroundTransparency = 1;\n    scrollFrame.BorderSizePixel = 0;\n    scrollFrame.ScrollBarThickness = 6;\n    scrollFrame.CanvasSize = new UDim2(0, 0, 0, 0);\n    scrollFrame.Parent = this.panel;\n\n    // Create list layout\n    const listLayout = new Instance(\"UIListLayout\");\n    listLayout.SortOrder = Enum.SortOrder.LayoutOrder;\n    listLayout.Padding = new UDim(0, 5);\n    listLayout.Parent = scrollFrame;\n\n    // Update canvas size when layout changes\n    listLayout.GetPropertyChangedSignal(\"AbsoluteContentSize\").Connect(() => {\n      scrollFrame.CanvasSize = new UDim2(0, 0, 0, listLayout.AbsoluteContentSize.Y);\n    });\n  }\n\n  private setupClickDetection(): void {\n    const player = Players.LocalPlayer;\n    const mouse = player.GetMouse();\n\n    mouse.Button1Down.Connect(() => {\n      const target = mouse.Target;\n      if (!target) return;\n\n      // Check if the target is part of a hexagon\n      const model = target.FindFirstAncestorOfClass(\"Model\");\n      if (!model) return;\n\n      // Check if it's a hexagon model (has guid attribute)\n      const guid = model.GetAttribute(\"guid\") as string | undefined;\n      if (!guid) return;\n\n      // Find the node data\n      const node = this.findNodeByGuid(guid);\n      if (node) {\n        this.showNodeProperties(node);\n      }\n    });\n  }\n\n  private findNodeByGuid(guid: string): Node | undefined {\n    // This will need to be connected to the actual node data\n    // For now, we'll store nodes in the model as attributes\n    const workspace = game.GetService(\"Workspace\");\n    const graphMaker = workspace.FindFirstChild(\"GraphMaker\", true);\n    if (!graphMaker) return;\n\n    const nodesFolder = graphMaker.FindFirstChild(\"Nodes\", true);\n    if (!nodesFolder) return;\n\n    // Look for the model with matching guid\n    for (const child of nodesFolder.GetChildren()) {\n      if (child.IsA(\"Model\") && child.GetAttribute(\"guid\") === guid) {\n        // Reconstruct node data from attributes\n        const node: Node = {\n          uuid: guid,\n          name: child.GetAttribute(\"nodeName\") as string || \"\",\n          type: child.GetAttribute(\"nodeType\") as string || \"\",\n          color: [0, 0, 0], // We don't need color for display\n          position: { x: 0, y: 0, z: 0 }, // We don't need position for display\n          attachmentNames: [],\n          properties: {}\n        };\n\n        // Get all properties dynamically\n        // First, get standard properties that might be on Person nodes\n        const standardProperties = [\n          \"age\", \"petType\", \"petColor\", \"firstName\", \"lastName\", \n          \"countryOfBirth\", \"countryOfResidence\"\n        ];\n        \n        // Also check for Harness properties\n        const harnessProperties = [\n          \"service\", \"component\", \"language\", \"size\", \"type\",\n          \"resourceDomain\", \"operationType\", \"apiPattern\", \n          \"apiComplexity\", \"httpMethod\", \"path\"\n        ];\n        \n        // Check all known properties\n        const allProperties = [...standardProperties, ...harnessProperties];\n        \n        allProperties.forEach(propName => {\n          const value = child.GetAttribute(propName);\n          if (value !== undefined) {\n            const props = node.properties as Record<string, unknown>;\n            props[propName] = value;\n          }\n        });\n        \n        // Also get any other attributes that might be present\n        const attributes = child.GetAttributes();\n        for (const [key, value] of pairs(attributes)) {\n          // Skip system attributes\n          if (key !== \"nodeName\" && key !== \"nodeType\" && key !== \"nodeGuid\" && \n              !allProperties.includes(key as string)) {\n            const props = node.properties as Record<string, unknown>;\n            props[key as string] = value;\n          }\n        }\n\n        return node;\n      }\n    }\n\n    return undefined;\n  }\n\n  private showNodeProperties(node: Node): void {\n    this.currentNode = node;\n    this.updatePropertiesDisplay();\n    this.show();\n  }\n\n  private updatePropertiesDisplay(): void {\n    if (!this.panel || !this.currentNode) return;\n\n    const scrollFrame = this.panel.FindFirstChild(\"PropertiesScroll\") as ScrollingFrame;\n    if (!scrollFrame) return;\n\n    // Clear existing properties\n    for (const child of scrollFrame.GetChildren()) {\n      if (child.IsA(\"Frame\")) {\n        child.Destroy();\n      }\n    }\n\n    // Add node basic properties\n    this.addPropertyRow(scrollFrame, \"UUID\", this.currentNode.uuid, 1);\n    this.addPropertyRow(scrollFrame, \"Name\", this.currentNode.name, 2);\n    this.addPropertyRow(scrollFrame, \"Type\", this.currentNode.type, 3);\n\n    // Add dynamic properties\n    let order = 4;\n    if (this.currentNode.properties) {\n      for (const [key, value] of pairs(this.currentNode.properties)) {\n        this.addPropertyRow(scrollFrame, key as string, tostring(value), order);\n        order++;\n      }\n    }\n  }\n\n  private addPropertyRow(parent: ScrollingFrame, key: string, value: string, order: number): void {\n    const row = new Instance(\"Frame\");\n    row.Name = `Property_${key}`;\n    row.Size = new UDim2(1, 0, 0, 30);\n    row.BackgroundColor3 = new Color3(0.2, 0.2, 0.2);\n    row.BorderSizePixel = 0;\n    row.LayoutOrder = order;\n    row.Parent = parent;\n\n    const rowCorner = new Instance(\"UICorner\");\n    rowCorner.CornerRadius = new UDim(0, 4);\n    rowCorner.Parent = row;\n\n    // Key label\n    const keyLabel = new Instance(\"TextLabel\");\n    keyLabel.Size = new UDim2(0.4, -5, 1, 0);\n    keyLabel.Position = new UDim2(0, 5, 0, 0);\n    keyLabel.BackgroundTransparency = 1;\n    keyLabel.Text = key + \":\";\n    keyLabel.TextColor3 = new Color3(0.7, 0.7, 0.7);\n    keyLabel.TextScaled = true;\n    keyLabel.Font = Enum.Font.SourceSans;\n    keyLabel.TextXAlignment = Enum.TextXAlignment.Left;\n    keyLabel.Parent = row;\n\n    // Value label\n    const valueLabel = new Instance(\"TextLabel\");\n    valueLabel.Size = new UDim2(0.6, -5, 1, 0);\n    valueLabel.Position = new UDim2(0.4, 0, 0, 0);\n    valueLabel.BackgroundTransparency = 1;\n    valueLabel.Text = value;\n    valueLabel.TextColor3 = new Color3(1, 1, 1);\n    valueLabel.TextScaled = true;\n    valueLabel.Font = Enum.Font.SourceSans;\n    valueLabel.TextXAlignment = Enum.TextXAlignment.Left;\n    valueLabel.Parent = row;\n  }\n\n  private show(): void {\n    if (this.panel) {\n      this.panel.Visible = true;\n    }\n  }\n\n  private hide(): void {\n    if (this.panel) {\n      this.panel.Visible = false;\n    }\n  }\n\n  public cleanup(): void {\n    if (this.clickConnection) {\n      this.clickConnection.Disconnect();\n    }\n    if (this.gui) {\n      this.gui.Destroy();\n    }\n  }\n}",
      "patterns": {
        "functions": 4,
        "classes": 1,
        "interfaces": 0,
        "exports": 1,
        "imports": 2,
        "anyTypes": 0,
        "typeAssertions": 13,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/utils/validation/configValidation.ts",
      "relativePath": "shared/utils/validation/configValidation.ts",
      "name": "configValidation.ts",
      "size": 10444,
      "lines": 364,
      "lastModified": "2025-07-11T04:40:54.082Z",
      "content": "/**\n * Configuration validation utilities for deep object validation\n */\n\nimport { validateArray, ARRAY_LIMITS, hasCircularReference } from \"./arrayValidation\";\nimport { EnhancedGeneratorConfig, LayerConfig } from \"../../interfaces/enhancedGenerator.interface\";\n\ninterface ConfigValidationResult {\n  isValid: boolean;\n  errors: string[];\n  sanitizedConfig?: EnhancedGeneratorConfig;\n}\n\n/**\n * Deep validation for EnhancedGeneratorConfig\n */\nexport function validateEnhancedGeneratorConfig(\n  config: unknown\n): ConfigValidationResult {\n  const errors: string[] = [];\n\n  // Check if config is an object\n  if (!typeIs(config, \"table\") || config === undefined) {\n    return {\n      isValid: false,\n      errors: [\"Configuration must be an object\"],\n    };\n  }\n\n  // Check for circular references\n  if (hasCircularReference([config])) {\n    return {\n      isValid: false,\n      errors: [\"Configuration contains circular references\"],\n    };\n  }\n\n  const cfg = config as EnhancedGeneratorConfig;\n  const sanitized: EnhancedGeneratorConfig = {} as EnhancedGeneratorConfig;\n\n  // Validate numeric fields\n  if (!typeIs(cfg.numNodeTypes, \"number\") || cfg.numNodeTypes < 1 || cfg.numNodeTypes > 50) {\n    errors.push(\"numNodeTypes must be a number between 1 and 50\");\n  } else {\n    sanitized.numNodeTypes = cfg.numNodeTypes;\n  }\n\n  if (!typeIs(cfg.numLinkTypes, \"number\") || cfg.numLinkTypes < 1 || cfg.numLinkTypes > 50) {\n    errors.push(\"numLinkTypes must be a number between 1 and 50\");\n  } else {\n    sanitized.numLinkTypes = cfg.numLinkTypes;\n  }\n\n  // Validate layers array\n  const layersResult = validateArray<LayerConfig>(cfg.layers, {\n    maxSize: ARRAY_LIMITS.MAX_LAYERS,\n    minSize: 1,\n    allowEmpty: false,\n  });\n\n  if (!layersResult.isValid) {\n    errors.push(`Layers: ${layersResult.error}`);\n  } else {\n    // Validate each layer\n    const validatedLayers: LayerConfig[] = [];\n    \n    for (let i = 0; i < cfg.layers.size(); i++) {\n      const layerErrors = validateLayerConfig(cfg.layers[i], i + 1);\n      if (layerErrors.size() > 0) {\n        for (const err of layerErrors) {\n          errors.push(err);\n        }\n      } else {\n        validatedLayers.push(cfg.layers[i]);\n      }\n    }\n    \n    sanitized.layers = validatedLayers;\n  }\n\n  // Validate optional spacing config\n  if (cfg.spacing) {\n    const spacingErrors = validateSpacingConfig(cfg.spacing);\n    if (spacingErrors.size() > 0) {\n      for (const err of spacingErrors) {\n        errors.push(err);\n      }\n    } else {\n      sanitized.spacing = cfg.spacing;\n    }\n  }\n\n  // Validate optional visualization config\n  if (cfg.visualization) {\n    const vizErrors = validateVisualizationConfig(cfg.visualization);\n    if (vizErrors.size() > 0) {\n      for (const err of vizErrors) {\n        errors.push(err);\n      }\n    } else {\n      sanitized.visualization = cfg.visualization;\n    }\n  }\n\n  // Validate optional axis mapping / spatial grouping config\n  if (cfg.axisMapping || cfg.spatialGrouping) {\n    const mappingConfig = cfg.spatialGrouping || cfg.axisMapping;\n    const mappingErrors = validateAxisMappingConfig(mappingConfig);\n    if (mappingErrors.size() > 0) {\n      for (const err of mappingErrors) {\n        errors.push(err);\n      }\n    } else {\n      // Support both old and new property names\n      if (cfg.spatialGrouping) {\n        sanitized.spatialGrouping = cfg.spatialGrouping;\n      }\n      if (cfg.axisMapping) {\n        sanitized.axisMapping = cfg.axisMapping;\n      }\n    }\n  }\n\n  // Validate optional visual mapping config\n  if (cfg.visualMapping) {\n    const visualMappingErrors = validateVisualMappingConfig(cfg.visualMapping);\n    if (visualMappingErrors.size() > 0) {\n      for (const err of visualMappingErrors) {\n        errors.push(err);\n      }\n    } else {\n      sanitized.visualMapping = cfg.visualMapping;\n    }\n  }\n\n  // Validate optional Y-axis config\n  if (cfg.yAxisConfig) {\n    const yAxisErrors = validateYAxisConfig(cfg.yAxisConfig);\n    if (yAxisErrors.size() > 0) {\n      for (const err of yAxisErrors) {\n        errors.push(err);\n      }\n    } else {\n      sanitized.yAxisConfig = cfg.yAxisConfig;\n    }\n  }\n\n  // Validate optional numPetTypes\n  if (cfg.numPetTypes !== undefined) {\n    if (!typeIs(cfg.numPetTypes, \"number\") || cfg.numPetTypes < 1 || cfg.numPetTypes > 50) {\n      errors.push(\"numPetTypes must be a number between 1 and 50\");\n    } else {\n      sanitized.numPetTypes = cfg.numPetTypes;\n    }\n  }\n\n  // Validate optional maxDataItems\n  if (cfg.maxDataItems !== undefined) {\n    if (!typeIs(cfg.maxDataItems, \"number\") || cfg.maxDataItems < 1 || cfg.maxDataItems > 10000) {\n      errors.push(\"maxDataItems must be a number between 1 and 10000\");\n    } else {\n      sanitized.maxDataItems = cfg.maxDataItems;\n    }\n  }\n\n  return {\n    isValid: errors.size() === 0,\n    errors,\n    sanitizedConfig: errors.size() === 0 ? sanitized : undefined,\n  };\n}\n\n/**\n * Validates a single layer configuration\n */\nfunction validateLayerConfig(layer: LayerConfig, layerIndex: number): string[] {\n  const errors: string[] = [];\n  const prefix = `Layer ${layerIndex}:`;\n\n  // Validate layer number\n  if (!typeIs(layer.layerNumber, \"number\") || layer.layerNumber < 1) {\n    errors.push(`${prefix} layerNumber must be a positive number`);\n  }\n\n  // Validate numNodes\n  if (!typeIs(layer.numNodes, \"number\") || layer.numNodes < 1 || layer.numNodes > ARRAY_LIMITS.MAX_NODES) {\n    errors.push(`${prefix} numNodes must be between 1 and ${ARRAY_LIMITS.MAX_NODES}`);\n  }\n\n  // Validate connectionsPerNode\n  if (!typeIs(layer.connectionsPerNode, \"number\") || layer.connectionsPerNode < 0 || layer.connectionsPerNode > 100) {\n    errors.push(`${prefix} connectionsPerNode must be between 0 and 100`);\n  }\n\n  return errors;\n}\n\n/**\n * Validates spacing configuration\n */\nfunction validateSpacingConfig(spacing: unknown): string[] {\n  const errors: string[] = [];\n\n  if (!typeIs(spacing, \"table\")) {\n    errors.push(\"Spacing must be an object\");\n    return errors;\n  }\n  \n  const spacingObj = spacing as Record<string, unknown>;\n\n  // Validate numeric spacing values\n  const numericFields = [\"nodeHeight\", \"nodeRadius\", \"layerSpacing\", \"nodeSpacing\", \"swimlaneSpacing\", \"linkDiameter\"];\n  \n  for (const field of numericFields) {\n    const value = spacingObj[field];\n    if (value !== undefined) {\n      if (!typeIs(value, \"number\") || value <= 0 || value > 1000) {\n        errors.push(`Spacing.${field} must be a positive number less than 1000`);\n      }\n    }\n  }\n\n  return errors;\n}\n\n/**\n * Validates visualization configuration\n */\nfunction validateVisualizationConfig(viz: unknown): string[] {\n  const errors: string[] = [];\n\n  if (!typeIs(viz, \"table\")) {\n    errors.push(\"Visualization must be an object\");\n    return errors;\n  }\n  \n  const vizObj = viz as Record<string, unknown>;\n\n  // Validate boolean fields\n  const booleanFields = [\"showNodes\", \"showLinkLabels\", \"showConnectors\", \"allowSameLevelLinks\"];\n  \n  for (const field of booleanFields) {\n    const value = vizObj[field];\n    if (value !== undefined && !typeIs(value, \"boolean\")) {\n      errors.push(`Visualization.${field} must be a boolean`);\n    }\n  }\n\n  return errors;\n}\n\n/**\n * Validates axis mapping / spatial grouping configuration\n */\nfunction validateAxisMappingConfig(mapping: unknown): string[] {\n  const errors: string[] = [];\n\n  if (!typeIs(mapping, \"table\")) {\n    errors.push(\"Axis mapping / spatial grouping must be an object\");\n    return errors;\n  }\n  \n  const mappingObj = mapping as Record<string, unknown>;\n\n  // Check for required fields (support both old and new names)\n  const hasOldNames = mappingObj[\"xAxis\"] !== undefined && mappingObj[\"zAxis\"] !== undefined;\n  const hasNewNames = mappingObj[\"xGroupingProperty\"] !== undefined && mappingObj[\"zGroupingProperty\"] !== undefined;\n  \n  if (!hasOldNames && !hasNewNames) {\n    errors.push(\"Axis mapping must have either xAxis/zAxis or xGroupingProperty/zGroupingProperty\");\n  }\n\n  // Validate string fields\n  const stringFields = [\"xAxis\", \"zAxis\", \"xGroupingProperty\", \"zGroupingProperty\"];\n  \n  for (const field of stringFields) {\n    const value = mappingObj[field];\n    if (value !== undefined && !typeIs(value, \"string\")) {\n      errors.push(`AxisMapping.${field} must be a string`);\n    }\n  }\n\n  return errors;\n}\n\n/**\n * Validates visual mapping configuration\n */\nfunction validateVisualMappingConfig(visualMapping: unknown): string[] {\n  const errors: string[] = [];\n\n  if (!typeIs(visualMapping, \"table\")) {\n    errors.push(\"Visual mapping must be an object\");\n    return errors;\n  }\n  \n  const mappingObj = visualMapping as Record<string, unknown>;\n\n  // Validate string fields\n  const stringFields = [\"backgroundColor\", \"borderColor\"];\n  \n  for (const field of stringFields) {\n    const value = mappingObj[field];\n    if (value !== undefined && !typeIs(value, \"string\")) {\n      errors.push(`VisualMapping.${field} must be a string`);\n    }\n  }\n\n  return errors;\n}\n\n/**\n * Validates Y-axis configuration\n */\nfunction validateYAxisConfig(yAxisConfig: unknown): string[] {\n  const errors: string[] = [];\n\n  if (!typeIs(yAxisConfig, \"table\")) {\n    errors.push(\"Y-axis config must be an object\");\n    return errors;\n  }\n  \n  const configObj = yAxisConfig as Record<string, unknown>;\n\n  // Validate boolean field\n  if (configObj[\"useLayer\"] !== undefined && !typeIs(configObj[\"useLayer\"], \"boolean\")) {\n    errors.push(\"YAxisConfig.useLayer must be a boolean\");\n  }\n\n  // Validate string field\n  if (configObj[\"property\"] !== undefined && !typeIs(configObj[\"property\"], \"string\")) {\n    errors.push(\"YAxisConfig.property must be a string\");\n  }\n\n  return errors;\n}\n\n\n/**\n * Sanitizes and validates remote data\n */\nexport function validateRemoteData(data: unknown): { isValid: boolean; error?: string } {\n  // For Roblox, we can't easily check serialized size, so check structure depth\n  function checkDepth(obj: unknown, currentDepth: number): boolean {\n    if (currentDepth > 20) return false; // Max depth of 20\n    if (typeIs(obj, \"table\")) {\n      for (const [_, value] of pairs(obj)) {\n        if (!checkDepth(value, currentDepth + 1)) return false;\n      }\n    }\n    return true;\n  }\n  \n  if (!checkDepth(data, 0)) {\n    return { isValid: false, error: \"Data structure too deep (max 20 levels)\" };\n  }\n\n  // Check for suspicious patterns\n  if (hasCircularReference([data])) {\n    return { isValid: false, error: \"Data contains circular references\" };\n  }\n\n  return { isValid: true };\n}",
      "patterns": {
        "functions": 9,
        "classes": 0,
        "interfaces": 1,
        "exports": 2,
        "imports": 2,
        "anyTypes": 0,
        "typeAssertions": 7,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": [
          {
            "name": "validateEnhancedGeneratorConfig",
            "type": "function",
            "isExported": true
          },
          {
            "name": "validateLayerConfig",
            "type": "function",
            "isExported": false
          },
          {
            "name": "validateSpacingConfig",
            "type": "function",
            "isExported": false
          },
          {
            "name": "validateVisualizationConfig",
            "type": "function",
            "isExported": false
          },
          {
            "name": "validateAxisMappingConfig",
            "type": "function",
            "isExported": false
          },
          {
            "name": "validateVisualMappingConfig",
            "type": "function",
            "isExported": false
          },
          {
            "name": "validateYAxisConfig",
            "type": "function",
            "isExported": false
          },
          {
            "name": "validateRemoteData",
            "type": "function",
            "isExported": true
          },
          {
            "name": "checkDepth",
            "type": "function",
            "isExported": false
          }
        ]
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/renderers/unifiedDataRenderer/core/dataGenerator/linkGenerator.ts",
      "relativePath": "shared/modules/renderers/unifiedDataRenderer/core/dataGenerator/linkGenerator.ts",
      "name": "linkGenerator.ts",
      "size": 9408,
      "lines": 334,
      "lastModified": "2025-07-11T02:42:14.805Z",
      "content": "/**\n * Link Generator for Unified Data Renderer\n * \n * Handles creation and management of relationships between nodes\n */\n\nimport { COLOR_PALETTES } from \"../../constants\";\nimport {\n  EnhancedGeneratorConfig,\n  LayerConfig,\n} from \"../../../../../interfaces/enhancedGenerator.interface\";\nimport { \n  Link, \n  Node \n} from \"../../../../../interfaces/simpleDataGenerator.interface\";\nimport { ILinkGenerator } from \"./interfaces\";\n\nexport class LinkGenerator implements ILinkGenerator {\n  private linkIdCounter = 0;\n\n  /**\n   * Generate all links between and within layers\n   */\n  public generateAllLinks(\n    nodesByLayer: Map<number, Node[]>,\n    config: EnhancedGeneratorConfig\n  ): Link[] {\n    const allLinks: Link[] = [];\n    this.linkIdCounter = 0;\n\n    // Generate links for each layer\n    const layerNumbers: number[] = [];\n    nodesByLayer.forEach((_, layerNumber) => {\n      layerNumbers.push(layerNumber);\n    });\n    table.sort(layerNumbers, (a, b) => a < b);\n    \n    layerNumbers.forEach((layerNumber) => {\n      const currentLayerNodes = nodesByLayer.get(layerNumber)!;\n      const nextLayerNodes = nodesByLayer.get(layerNumber + 1);\n      \n      // Create a mock layer config for the link generation\n      const layer: LayerConfig = {\n        layerNumber,\n        numNodes: currentLayerNodes.size(),\n        connectionsPerNode: this.getDefaultConnectionsPerNode(config),\n      };\n\n      this.generateLayerLinks(\n        currentLayerNodes,\n        nextLayerNodes,\n        layer,\n        config,\n        allLinks\n      );\n\n      // Add backward connections for first layer (connecting to second layer)\n      if (layerNumber === 1 && nextLayerNodes) {\n        this.ensureBackwardConnections(currentLayerNodes, nextLayerNodes, config, allLinks);\n      }\n    });\n\n    return allLinks;\n  }\n\n  /**\n   * Generate links for a layer\n   */\n  private generateLayerLinks(\n    currentLayerNodes: Node[],\n    nextLayerNodes: Node[] | undefined,\n    layer: LayerConfig,\n    config: EnhancedGeneratorConfig,\n    allLinks: Link[]\n  ): void {\n    currentLayerNodes.forEach((sourceNode) => {\n      // Create intra-layer connections\n      this.generateIntraLayerLinks(\n        sourceNode,\n        currentLayerNodes,\n        layer,\n        config,\n        allLinks\n      );\n\n      // Create inter-layer connections\n      if (nextLayerNodes && nextLayerNodes.size() > 0) {\n        this.generateInterLayerLink(\n          sourceNode,\n          nextLayerNodes,\n          config,\n          allLinks\n        );\n      } else if (layer.connectionsPerNode > 0 && currentLayerNodes.size() > 1) {\n        // For the last layer, ensure at least some connections within the layer\n        this.generateIntraLayerLinks(\n          sourceNode,\n          currentLayerNodes,\n          {\n            ...layer,\n            connectionsPerNode: math.max(1, layer.connectionsPerNode),\n          },\n          config,\n          allLinks\n        );\n      }\n    });\n  }\n\n  /**\n   * Generate intra-layer connections\n   */\n  private generateIntraLayerLinks(\n    sourceNode: Node,\n    currentLayerNodes: Node[],\n    layer: LayerConfig,\n    config: EnhancedGeneratorConfig,\n    allLinks: Link[]\n  ): void {\n    const allowSameLevelLinks =\n      config.visualization?.allowSameLevelLinks ?? true;\n\n    if (\n      !allowSameLevelLinks ||\n      layer.connectionsPerNode <= 0 ||\n      currentLayerNodes.size() <= 1\n    ) {\n      return;\n    }\n\n    const availableTargets = currentLayerNodes.filter(\n      (n) => n.uuid !== sourceNode.uuid\n    );\n    const numConnections = math.min(\n      layer.connectionsPerNode,\n      availableTargets.size()\n    );\n\n    // Randomly select target nodes\n    const shuffled = this.shuffleArray([...availableTargets]);\n\n    for (let i = 0; i < numConnections; i++) {\n      const targetNode = shuffled[i];\n      const link = this.createLink(sourceNode, targetNode, config);\n      allLinks.push(link);\n    }\n  }\n\n  /**\n   * Generate inter-layer connection\n   */\n  private generateInterLayerLink(\n    sourceNode: Node,\n    nextLayerNodes: Node[],\n    config: EnhancedGeneratorConfig,\n    allLinks: Link[]\n  ): void {\n    if (nextLayerNodes.size() === 0) return;\n\n    // Prefer connecting to nodes of the same type\n    const sameTypeNodes = nextLayerNodes.filter(\n      (n) => n.type === sourceNode.type\n    );\n    const candidateNodes =\n      sameTypeNodes.size() > 0 ? sameTypeNodes : nextLayerNodes;\n\n    // Connect to at least one node, potentially more for better connectivity\n    const numConnections = math.min(2, candidateNodes.size()); // Connect to up to 2 nodes\n    const shuffled = this.shuffleArray([...candidateNodes]);\n\n    for (let i = 0; i < numConnections; i++) {\n      const targetNode = shuffled[i];\n      // Check if this link already exists\n      const linkExists = allLinks.some(\n        (link) =>\n          (link.sourceNodeUuid === sourceNode.uuid &&\n            link.targetNodeUuid === targetNode.uuid) ||\n          (link.sourceNodeUuid === targetNode.uuid &&\n            link.targetNodeUuid === sourceNode.uuid)\n      );\n\n      if (!linkExists) {\n        const link = this.createLink(sourceNode, targetNode, config);\n        allLinks.push(link);\n      }\n    }\n  }\n\n  /**\n   * Create a link between two nodes\n   */\n  public createLink(\n    sourceNode: Node,\n    targetNode: Node,\n    config: EnhancedGeneratorConfig\n  ): Link {\n    const linkTypeIndex = this.linkIdCounter % config.numLinkTypes;\n    const linkColor =\n      COLOR_PALETTES.LINK_COLORS[\n        linkTypeIndex % COLOR_PALETTES.LINK_COLORS.size()\n      ];\n\n    const link: Link = {\n      uuid: `link-${++this.linkIdCounter}`,\n      type: `Link${linkTypeIndex + 1}`,\n      sourceNodeUuid: sourceNode.uuid,\n      targetNodeUuid: targetNode.uuid,\n      color: linkColor,\n    };\n\n    return link;\n  }\n\n  /**\n   * Ensure all nodes have at least one connection\n   */\n  public ensureConnectivity(\n    nodes: Node[],\n    links: Link[],\n    config: EnhancedGeneratorConfig\n  ): void {\n    // Create a map to track connections per node\n    const nodeConnections = new Map<string, number>();\n    nodes.forEach((node) => nodeConnections.set(node.uuid, 0));\n\n    // Count existing connections\n    links.forEach((link) => {\n      nodeConnections.set(\n        link.sourceNodeUuid,\n        (nodeConnections.get(link.sourceNodeUuid) || 0) + 1\n      );\n      nodeConnections.set(\n        link.targetNodeUuid,\n        (nodeConnections.get(link.targetNodeUuid) || 0) + 1\n      );\n    });\n\n    // Find isolated nodes\n    const isolatedNodes: Node[] = [];\n    nodeConnections.forEach((count, uuid) => {\n      if (count === 0) {\n        const node = nodes.find((n) => n.uuid === uuid);\n        if (node) isolatedNodes.push(node);\n      }\n    });\n\n    if (isolatedNodes.size() > 0) {\n      // Create fallback connections\n      isolatedNodes.forEach((isolatedNode) => {\n        // Find a suitable connection target\n        const targetNode = this.findConnectionTarget(isolatedNode, nodes);\n        if (targetNode) {\n          const fallbackLink: Link = {\n            uuid: `link_fallback_${this.linkIdCounter++}`,\n            type: \"Fallback\",\n            sourceNodeUuid: isolatedNode.uuid,\n            targetNodeUuid: targetNode.uuid,\n            color: [0.5, 0.5, 0.5], // Gray color for fallback links\n          };\n          links.push(fallbackLink);\n        }\n      });\n    }\n  }\n\n  /**\n   * Fisher-Yates shuffle algorithm\n   */\n  private shuffleArray<T>(array: T[]): T[] {\n    for (let i = array.size() - 1; i > 0; i--) {\n      const j = math.random(0, i);\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  }\n\n  /**\n   * Find a suitable connection target for an isolated node\n   */\n  private findConnectionTarget(\n    isolatedNode: Node,\n    allNodes: Node[]\n  ): Node | undefined {\n    // Try to connect to a node of the same type first\n    const sameTypeNodes = allNodes.filter(\n      (n) => n.type === isolatedNode.type && n.uuid !== isolatedNode.uuid\n    );\n    if (sameTypeNodes.size() > 0) {\n      return sameTypeNodes[math.random(0, sameTypeNodes.size() - 1)];\n    }\n\n    // Otherwise, connect to any other node\n    const otherNodes = allNodes.filter((n) => n.uuid !== isolatedNode.uuid);\n    if (otherNodes.size() > 0) {\n      return otherNodes[math.random(0, otherNodes.size() - 1)];\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Ensure backward connections for first layer\n   */\n  private ensureBackwardConnections(\n    currentLayerNodes: Node[],\n    nextLayerNodes: Node[],\n    config: EnhancedGeneratorConfig,\n    allLinks: Link[]\n  ): void {\n    nextLayerNodes.forEach((nextNode) => {\n      // Ensure each node in layer 2 connects back to at least one node in layer 1\n      const hasBackwardConnection = allLinks.some(\n        (link) =>\n          link.targetNodeUuid === nextNode.uuid &&\n          currentLayerNodes.some((n) => n.uuid === link.sourceNodeUuid)\n      );\n\n      if (!hasBackwardConnection) {\n        const sourceNode =\n          currentLayerNodes[math.random(0, currentLayerNodes.size() - 1)];\n        const link = this.createLink(sourceNode, nextNode, config);\n        allLinks.push(link);\n      }\n    });\n  }\n\n  /**\n   * Get default connections per node from config or use reasonable default\n   */\n  private getDefaultConnectionsPerNode(config: EnhancedGeneratorConfig): number {\n    // Check if the config has a default value, otherwise use 2\n    return 2; // Default to 2 connections per node\n  }\n}",
      "patterns": {
        "functions": 7,
        "classes": 1,
        "interfaces": 0,
        "exports": 1,
        "imports": 4,
        "anyTypes": 0,
        "typeAssertions": 1,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/client/services/configGui/components/yAxisControls.ts",
      "relativePath": "client/services/configGui/components/yAxisControls.ts",
      "name": "yAxisControls.ts",
      "size": 9054,
      "lines": 257,
      "lastModified": "2025-07-10T09:46:29.338Z",
      "content": "import { GUI_CONSTANTS } from \"../constants\";\nimport { getAvailableProperties } from \"./axisMappingControls/constants\";\n\ninterface YAxisControlsProps {\n  parent: Frame;\n  useLayerForYAxis: boolean;\n  yAxisProperty?: string;\n  onYAxisModeChange: (useLayer: boolean) => void;\n  onYAxisPropertyChange: (property: string) => void;\n}\n\n// Y-axis properties now use the same dynamic properties as X and Z axes\nfunction getYAxisProperties(): string[] {\n  return getAvailableProperties();\n}\n\nexport function createYAxisControls({\n  parent,\n  useLayerForYAxis,\n  yAxisProperty,\n  onYAxisModeChange,\n  onYAxisPropertyChange\n}: YAxisControlsProps): Frame {\n  // Create container WITHOUT clipping for dropdowns to show\n  const container = new Instance(\"Frame\");\n  container.Name = \"YAxisControls\";\n  container.Size = new UDim2(1, -20, 0, 80);\n  container.Position = new UDim2(0, 0, 0, 0); // Position will be set by layout manager\n  container.BackgroundColor3 = new Color3(0.15, 0.15, 0.15);\n  container.BorderSizePixel = 0;\n  container.ClipsDescendants = false; // Disable clipping so dropdowns can extend\n  container.ZIndex = 2;\n  container.Parent = parent;\n\n  const containerCorner = new Instance(\"UICorner\");\n  containerCorner.CornerRadius = new UDim(0, 4);\n  containerCorner.Parent = container;\n\n  // Title\n  const title = new Instance(\"TextLabel\");\n  title.Size = new UDim2(1, -20, 0, 20);\n  title.Position = new UDim2(0, 10, 0, 5);\n  title.BackgroundTransparency = 1;\n  title.Font = GUI_CONSTANTS.TYPOGRAPHY.TITLE_FONT;\n  title.Text = \"Y-Axis Configuration\";\n  title.TextColor3 = GUI_CONSTANTS.COLORS.TEXT;\n  title.TextSize = 16;\n  title.TextXAlignment = Enum.TextXAlignment.Left;\n  title.Parent = container;\n\n  // Toggle frame\n  const toggleFrame = new Instance(\"Frame\");\n  toggleFrame.Size = new UDim2(0.5, -20, 0, 40);\n  toggleFrame.Position = new UDim2(0, 10, 0, 30);\n  toggleFrame.BackgroundTransparency = 1;\n  toggleFrame.Parent = container;\n\n  // Toggle label\n  const toggleLabel = new Instance(\"TextLabel\");\n  toggleLabel.Size = new UDim2(0.6, 0, 0, 20);\n  toggleLabel.Position = new UDim2(0, 0, 0, 0);\n  toggleLabel.BackgroundTransparency = 1;\n  toggleLabel.Font = GUI_CONSTANTS.TYPOGRAPHY.LABEL_FONT;\n  toggleLabel.Text = \"Use Layer:\";\n  toggleLabel.TextColor3 = GUI_CONSTANTS.COLORS.TEXT;\n  toggleLabel.TextSize = 14;\n  toggleLabel.TextXAlignment = Enum.TextXAlignment.Left;\n  toggleLabel.Parent = toggleFrame;\n\n  // Toggle checkbox\n  const checkbox = new Instance(\"TextButton\");\n  checkbox.Size = new UDim2(0, 25, 0, 25);\n  checkbox.Position = new UDim2(0.6, 0, 0, -2);\n  checkbox.BackgroundColor3 = useLayerForYAxis \n    ? GUI_CONSTANTS.COLORS.BUTTON.DEFAULT \n    : new Color3(0.3, 0.3, 0.3);\n  checkbox.BorderSizePixel = 2;\n  checkbox.BorderColor3 = new Color3(0.5, 0.5, 0.5);\n  checkbox.Text = useLayerForYAxis ? \"✓\" : \"\";\n  checkbox.TextColor3 = GUI_CONSTANTS.COLORS.TEXT;\n  checkbox.TextScaled = true;\n  checkbox.Font = GUI_CONSTANTS.TYPOGRAPHY.BUTTON_FONT;\n  checkbox.Parent = toggleFrame;\n\n  const checkboxCorner = new Instance(\"UICorner\");\n  checkboxCorner.CornerRadius = new UDim(0, 4);\n  checkboxCorner.Parent = checkbox;\n\n  // Property dropdown (only visible when not using layer)\n  const dropdownFrame = new Instance(\"Frame\");\n  dropdownFrame.Size = new UDim2(0.5, -20, 0, 40);\n  dropdownFrame.Position = new UDim2(0.5, 10, 0, 30);\n  dropdownFrame.BackgroundTransparency = 1;\n  dropdownFrame.Visible = !useLayerForYAxis;\n  dropdownFrame.Parent = container;\n\n  // Property dropdown\n  createYAxisDropdown({\n    parent: dropdownFrame,\n    label: \"Y-Axis Property:\",\n    currentValue: yAxisProperty || \"type\",\n    onValueChange: onYAxisPropertyChange\n  });\n\n  // Toggle handler\n  checkbox.MouseButton1Click.Connect(() => {\n    const newUseLayer = !useLayerForYAxis;\n    \n    // Update checkbox appearance\n    checkbox.BackgroundColor3 = newUseLayer \n      ? GUI_CONSTANTS.COLORS.BUTTON.DEFAULT \n      : new Color3(0.3, 0.3, 0.3);\n    checkbox.Text = newUseLayer ? \"✓\" : \"\";\n    \n    // Toggle dropdown visibility\n    dropdownFrame.Visible = !newUseLayer;\n    \n    // Notify parent\n    onYAxisModeChange(newUseLayer);\n  });\n\n  return container;\n}\n\ninterface YAxisDropdownProps {\n  parent: Frame;\n  label: string;\n  currentValue: string;\n  onValueChange: (value: string) => void;\n}\n\nfunction createYAxisDropdown({\n  parent,\n  label,\n  currentValue,\n  onValueChange\n}: YAxisDropdownProps): void {\n  // Label\n  const dropdownLabel = new Instance(\"TextLabel\");\n  dropdownLabel.Size = new UDim2(1, 0, 0, 20);\n  dropdownLabel.Position = new UDim2(0, 0, 0, 0);\n  dropdownLabel.BackgroundTransparency = 1;\n  dropdownLabel.Font = GUI_CONSTANTS.TYPOGRAPHY.LABEL_FONT;\n  dropdownLabel.Text = label;\n  dropdownLabel.TextColor3 = GUI_CONSTANTS.COLORS.TEXT;\n  dropdownLabel.TextSize = 14;\n  dropdownLabel.TextXAlignment = Enum.TextXAlignment.Left;\n  dropdownLabel.Parent = parent;\n\n  // Dropdown button\n  const dropdownButton = new Instance(\"TextButton\");\n  dropdownButton.Size = new UDim2(1, 0, 0, 25);\n  dropdownButton.Position = new UDim2(0, 0, 0, 20);\n  dropdownButton.BackgroundColor3 = new Color3(0.25, 0.25, 0.25);\n  dropdownButton.BorderSizePixel = 0;\n  dropdownButton.Font = GUI_CONSTANTS.TYPOGRAPHY.INPUT_FONT;\n  dropdownButton.Text = currentValue + \" ▼\";\n  dropdownButton.TextColor3 = GUI_CONSTANTS.COLORS.TEXT;\n  dropdownButton.TextSize = 14;\n  dropdownButton.Parent = parent;\n\n  const buttonCorner = new Instance(\"UICorner\");\n  buttonCorner.CornerRadius = new UDim(0, 4);\n  buttonCorner.Parent = dropdownButton;\n\n  // Dropdown list - always use ScrollingFrame for consistency\n  const yAxisProperties = getYAxisProperties();\n  const itemHeight = 25;\n  const maxItems = 6;\n  const actualHeight = math.min(yAxisProperties.size() * itemHeight, maxItems * itemHeight);\n  \n  const dropdownList = new Instance(\"ScrollingFrame\");\n  dropdownList.Size = new UDim2(1, 0, 0, actualHeight);\n  dropdownList.Position = new UDim2(0, 0, 0, -actualHeight - 5); // Position above button with gap\n  dropdownList.BackgroundColor3 = new Color3(0.1, 0.1, 0.1);\n  dropdownList.BorderSizePixel = 1;\n  dropdownList.BorderColor3 = new Color3(0.3, 0.3, 0.3);\n  dropdownList.ScrollBarThickness = 4;\n  dropdownList.ScrollBarImageColor3 = new Color3(0.5, 0.5, 0.5);\n  dropdownList.CanvasSize = new UDim2(0, 0, 0, yAxisProperties.size() * itemHeight);\n  dropdownList.Visible = false;\n  dropdownList.ZIndex = 100; // Higher z-index\n  dropdownList.Parent = dropdownButton;\n\n  const listCorner = new Instance(\"UICorner\");\n  listCorner.CornerRadius = new UDim(0, 4);\n  listCorner.Parent = dropdownList;\n\n  // Create option buttons\n  yAxisProperties.forEach((property, index) => {\n    const optionButton = new Instance(\"TextButton\");\n    optionButton.Size = new UDim2(1, -10, 0, itemHeight); // Always account for scrollbar\n    optionButton.Position = new UDim2(0, 0, 0, index * itemHeight);\n    optionButton.BackgroundColor3 = new Color3(0.1, 0.1, 0.1);\n    optionButton.BackgroundTransparency = 0;\n    optionButton.Font = GUI_CONSTANTS.TYPOGRAPHY.INPUT_FONT;\n    optionButton.Text = property;\n    optionButton.TextColor3 = new Color3(0.9, 0.9, 0.9);\n    optionButton.TextSize = 14;\n    optionButton.TextXAlignment = Enum.TextXAlignment.Center;\n    optionButton.BorderSizePixel = 0;\n    optionButton.Parent = dropdownList; // Parent directly to dropdownList\n\n    // Hover effect\n    optionButton.MouseEnter.Connect(() => {\n      optionButton.BackgroundColor3 = new Color3(0.3, 0.3, 0.3);\n      optionButton.TextColor3 = new Color3(1, 1, 1);\n    });\n\n    optionButton.MouseLeave.Connect(() => {\n      optionButton.BackgroundColor3 = new Color3(0.1, 0.1, 0.1);\n      optionButton.TextColor3 = new Color3(0.9, 0.9, 0.9);\n    });\n\n    // Selection\n    optionButton.MouseButton1Click.Connect(() => {\n      dropdownButton.Text = property + \" ▼\";\n      dropdownList.Visible = false;\n      onValueChange(property);\n    });\n  });\n\n  // Toggle dropdown\n  let closeConnection: RBXScriptConnection | undefined;\n  \n  dropdownButton.MouseButton1Click.Connect(() => {\n    const isOpening = !dropdownList.Visible;\n    dropdownList.Visible = isOpening;\n    \n    if (isOpening) {\n      if (closeConnection) {\n        closeConnection.Disconnect();\n      }\n      \n      game.GetService(\"RunService\").Heartbeat.Wait();\n      \n      const userInputService = game.GetService(\"UserInputService\");\n      closeConnection = userInputService.InputBegan.Connect((input, gameProcessed) => {\n        if (input.UserInputType === Enum.UserInputType.MouseButton1 && !gameProcessed) {\n          const mouse = game.GetService(\"Players\").LocalPlayer.GetMouse();\n          const target = mouse.Target;\n          \n          if (!target || !target.IsDescendantOf(dropdownButton)) {\n            dropdownList.Visible = false;\n            if (closeConnection) {\n              closeConnection.Disconnect();\n              closeConnection = undefined;\n            }\n          }\n        }\n      });\n    } else if (closeConnection) {\n      closeConnection.Disconnect();\n      closeConnection = undefined;\n    }\n  });\n}",
      "patterns": {
        "functions": 10,
        "classes": 0,
        "interfaces": 2,
        "exports": 1,
        "imports": 2,
        "anyTypes": 0,
        "typeAssertions": 1,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": [
          {
            "name": "getYAxisProperties",
            "type": "function",
            "isExported": false
          },
          {
            "name": "createYAxisControls",
            "type": "function",
            "isExported": true
          },
          {
            "name": "createYAxisDropdown",
            "type": "function",
            "isExported": false
          }
        ]
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/renderers/blocks/yParallelShadowCreator.ts",
      "relativePath": "shared/modules/renderers/blocks/yParallelShadowCreator.ts",
      "name": "yParallelShadowCreator.ts",
      "size": 8968,
      "lines": 226,
      "lastModified": "2025-07-11T05:14:17.047Z",
      "content": "/**\n * Y-Parallel Shadow Block Creator\n * Creates floating transparent shadow blocks at different Y levels\n * Part of F008 Vertical Swimlanes feature\n */\n\nimport { BaseBlockCreator } from \"./baseBlockCreator\";\nimport { BLOCK_CONSTANTS } from \"../constants/blockConstants\";\nimport { LAYOUT_CONSTANTS } from \"../constants/layoutConstants\";\nimport { Y_AXIS_COLORS } from \"../constants/robloxColors\";\nimport { Node } from \"../../../interfaces/simpleDataGenerator.interface\";\nimport { PropertyValueResolver } from \"../propertyValueResolver\";\n\nexport interface YParallelShadowConfig {\n  nodes: Node[];\n  yAxisProperty: string;\n  parent: Instance;\n  shadowWidth?: number; // Optional: use group shadow width\n  shadowDepth?: number; // Optional: use group shadow depth\n  side?: \"left\" | \"right\" | \"back\"; // Optional: which side to place shadows (default: \"right\")\n}\n\nexport interface YGroupBounds {\n  minX: number;\n  maxX: number;\n  minZ: number;\n  maxZ: number;\n  yPosition: number;\n  propertyValue: string;\n  minY: number;\n  maxY: number;\n}\n\nexport class YParallelShadowCreator extends BaseBlockCreator {\n  private propertyResolver: PropertyValueResolver;\n\n  constructor() {\n    super();\n    this.propertyResolver = new PropertyValueResolver();\n  }\n\n  /**\n   * Create Y-parallel shadow blocks for each Y property value\n   */\n  public createYParallelShadows(config: YParallelShadowConfig): Map<string, Part> {\n    const { nodes, yAxisProperty, parent, shadowWidth, shadowDepth, side = \"right\" } = config;\n    const shadows = new Map<string, Part>();\n\n    // Group nodes by Y property value and calculate bounds\n    const yGroupBounds = this.calculateYGroupBounds(nodes, yAxisProperty);\n\n    // Don't apply layer-based spacing - use the actual node Y positions\n\n    // Create a shadow block for each Y group with different colors\n    let colorIndex = 0;\n    yGroupBounds.forEach((bounds, propertyValue) => {\n      const color = Y_AXIS_COLORS[colorIndex % Y_AXIS_COLORS.size()] || new Color3(0.3, 0.3, 0.8);\n      const shadow = this.createYShadowBlock(bounds, parent, shadowWidth, shadowDepth, color, side);\n      shadows.set(propertyValue, shadow);\n      \n      print(`[YParallelShadow] Created ${side} shadow for ${propertyValue}: X(${string.format(\"%.1f\", bounds.minX)},${string.format(\"%.1f\", bounds.maxX)}) Z(${string.format(\"%.1f\", bounds.minZ)},${string.format(\"%.1f\", bounds.maxZ)}) Y=${string.format(\"%.1f\", bounds.yPosition)} NodeYRange=(${string.format(\"%.1f\", bounds.minY)}-${string.format(\"%.1f\", bounds.maxY)}) Height=${string.format(\"%.1f\", bounds.maxY - bounds.minY)} Color=${colorIndex}`);\n      colorIndex++;\n    });\n\n    return shadows;\n  }\n\n  /**\n   * Calculate bounds for each Y property group\n   */\n  private calculateYGroupBounds(nodes: Node[], yAxisProperty: string): Map<string, YGroupBounds> {\n    const boundsMap = new Map<string, YGroupBounds>();\n    const nodeRadius = 0.5; // Default node radius\n\n    // Initialize bounds for each Y property value\n    nodes.forEach(node => {\n      const yValue = this.propertyResolver.getPropertyValue(node, yAxisProperty);\n      \n      if (!boundsMap.has(yValue)) {\n        boundsMap.set(yValue, {\n          minX: math.huge,\n          maxX: -math.huge,\n          minZ: math.huge,\n          maxZ: -math.huge,\n          yPosition: node.position.y,\n          propertyValue: yValue,\n          minY: node.position.y,\n          maxY: node.position.y\n        });\n      }\n\n      const bounds = boundsMap.get(yValue)!;\n      // Account for node radius when calculating bounds\n      bounds.minX = math.min(bounds.minX, node.position.x - nodeRadius);\n      bounds.maxX = math.max(bounds.maxX, node.position.x + nodeRadius);\n      bounds.minZ = math.min(bounds.minZ, node.position.z - nodeRadius);\n      bounds.maxZ = math.max(bounds.maxZ, node.position.z + nodeRadius);\n      // Track Y bounds for height calculation\n      bounds.minY = math.min(bounds.minY, node.position.y);\n      bounds.maxY = math.max(bounds.maxY, node.position.y);\n      // Y position should be consistent for all nodes with same property value\n      bounds.yPosition = node.position.y;\n    });\n\n    return boundsMap;\n  }\n\n\n  /**\n   * Create a single Y-parallel shadow block\n   */\n  private createYShadowBlock(bounds: YGroupBounds, parent: Instance, shadowWidth?: number, shadowDepth?: number, color?: Color3, side: \"left\" | \"right\" | \"back\" = \"right\"): Part {\n    // T9.8.1: Y shadows start from vertical wall and extend 10 units away\n    const shadowExtension = 10; // Units to extend from wall\n    let width: number;\n    let depth: number;\n    let positionX: number;\n    let positionZ: number;\n    \n    if (shadowWidth !== undefined && shadowDepth !== undefined) {\n      // Position Y shadows to start from vertical wall edge\n      if (side === \"right\") {\n        // The right wall is at shadowWidth/2\n        const wallPosition = shadowWidth / 2;\n        // Y shadow starts at wall position and extends outward to the right (positive X)\n        width = shadowExtension;\n        depth = shadowDepth;\n        positionX = wallPosition + shadowExtension / 2 - 2; // Center of extended shadow (extends right) - 2 units offset\n        positionZ = 0; // Center at origin in Z direction\n      } else if (side === \"left\") {\n        // The left wall is at -shadowWidth/2\n        const wallPosition = -shadowWidth / 2;\n        // Y shadow starts at wall position and extends inward by 1 unit\n        width = shadowExtension;\n        depth = shadowDepth;\n        positionX = wallPosition - shadowExtension / 2 + 1; // Center of extended shadow (extends left) + 1 unit into node area\n        positionZ = 0; // Center at origin in Z direction\n      } else {\n        // The back wall is at shadowDepth/2\n        const wallPosition = shadowDepth / 2;\n        // Y shadow starts at wall position and extends forward (negative Z) by 1 unit into node area\n        width = shadowWidth; // Full width along X axis\n        depth = shadowExtension;\n        positionX = 0; // Center at origin in X direction\n        positionZ = wallPosition - shadowExtension / 2 + 1; // Center of extended shadow (extends forward) + 1 unit into node area\n      }\n    } else {\n      // Fallback: Calculate from node bounds with padding\n      const padding = LAYOUT_CONSTANTS.SHADOW_PADDING.Y_SHADOW_PADDING;\n      width = bounds.maxX - bounds.minX + padding * 2;\n      depth = bounds.maxZ - bounds.minZ + padding * 2;\n      positionX = (bounds.minX + bounds.maxX) / 2;\n      positionZ = (bounds.minZ + bounds.maxZ) / 2;\n    }\n    \n    // Use fixed height for Y shadows\n    const shadowHeight = BLOCK_CONSTANTS.DIMENSIONS.Y_SHADOW_THICKNESS || 5;\n    \n    print(`[YParallelShadow] Creating shadow ${bounds.propertyValue}: Y=${string.format(\"%.1f\", bounds.yPosition)}, height=${string.format(\"%.1f\", shadowHeight)}`);\n    \n    // Create the shadow block\n    const shadow = this.createBlock({\n      name: `YShadow_${side}_${bounds.propertyValue}`,\n      size: new Vector3(\n        width,\n        shadowHeight, // Use height from nodes\n        depth\n      ),\n      position: new Vector3(\n        positionX,\n        bounds.yPosition, // Use layer Y position\n        positionZ\n      ),\n      color: color || BLOCK_CONSTANTS.COLORS.Y_SHADOW_COLOR || new Color3(0.5, 0.5, 0.5),\n      transparency: BLOCK_CONSTANTS.TRANSPARENCY.Y_SHADOW || 0, // Fully opaque\n      material: Enum.Material.Concrete,\n      canCollide: false\n    });\n\n    shadow.Parent = parent;\n\n    // Print actual shadow position\n    const actualPos = shadow.Position;\n    print(`[YParallelShadow] Shadow block ${bounds.propertyValue} actual position: X=${string.format(\"%.1f\", actualPos.X)}, Y=${string.format(\"%.1f\", actualPos.Y)}, Z=${string.format(\"%.1f\", actualPos.Z)} (Y offset from nodes: ${string.format(\"%.1f\", actualPos.Y - bounds.yPosition)})`);\n\n    // Add label\n    this.addLabel(shadow, bounds.propertyValue);\n\n    return shadow;\n  }\n\n  /**\n   * Add labels to all faces of the Y shadow block with black color\n   */\n  private addLabel(shadow: Part, text: string): void {\n    // All faces use black text color\n    const faces = [\n      Enum.NormalId.Top,\n      Enum.NormalId.Bottom,\n      Enum.NormalId.Front,\n      Enum.NormalId.Back,\n      Enum.NormalId.Left,\n      Enum.NormalId.Right\n    ];\n\n    // Add label to each face\n    faces.forEach((face) => {\n      const surfaceGui = new Instance(\"SurfaceGui\");\n      surfaceGui.Face = face;\n      surfaceGui.SizingMode = Enum.SurfaceGuiSizingMode.PixelsPerStud;\n      surfaceGui.PixelsPerStud = 50;\n      surfaceGui.Parent = shadow;\n\n      const label = new Instance(\"TextLabel\");\n      label.Size = new UDim2(1, 0, 1, 0);\n      label.BackgroundTransparency = 1;\n      label.Text = text;\n      label.TextColor3 = new Color3(0, 0, 0); // Black text color\n      label.TextScaled = true;\n      label.Font = Enum.Font.SourceSansBold;\n      label.TextStrokeTransparency = 0;\n      label.TextStrokeColor3 = new Color3(0, 0, 0);\n      label.Parent = surfaceGui;\n    });\n  }\n}",
      "patterns": {
        "functions": 3,
        "classes": 1,
        "interfaces": 2,
        "exports": 3,
        "imports": 6,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/renderers/unifiedDataRenderer/utils/colorMapper.ts",
      "relativePath": "shared/modules/renderers/unifiedDataRenderer/utils/colorMapper.ts",
      "name": "colorMapper.ts",
      "size": 8912,
      "lines": 240,
      "lastModified": "2025-07-10T18:46:23.909Z",
      "content": "/**\n * Color Mapper Utilities\n * Maps node properties to colors for visual customization\n */\n\nimport { Node } from \"../../../../interfaces/simpleDataGenerator.interface\";\nimport { VisualMapping } from \"../../../../interfaces/enhancedGenerator.interface\";\nimport { personColors } from \"../../constants/robloxColors\";\nimport { NODE_TYPE_NAMES } from \"../constants\";\n\n// Create type color mapping from personColors array\nconst typeColorMapping: { [key: string]: Color3 } = {};\nNODE_TYPE_NAMES.forEach((typeName, index) => {\n  if (index < personColors.size()) {\n    typeColorMapping[typeName] = personColors[index];\n  }\n});\n// Add Animals if not in NODE_TYPE_NAMES\nif (!typeColorMapping[\"Animals\"] && personColors.size() > NODE_TYPE_NAMES.size()) {\n  typeColorMapping[\"Animals\"] = personColors[NODE_TYPE_NAMES.size()];\n}\n\n// Define color palettes for different properties\nconst COLOR_SCHEMES = {\n  type: typeColorMapping,\n  // Harness properties\n  component: {\n    cd: new Color3(0.2, 0.8, 0.2),          // Green\n    ci: new Color3(0.2, 0.6, 0.8),          // Blue\n    repository: new Color3(0.8, 0.6, 0.2),  // Orange\n    api: new Color3(0.8, 0.2, 0.8),         // Purple\n    platform: new Color3(0.2, 0.4, 0.8),    // Dark Blue\n    ce: new Color3(0.8, 0.2, 0.4),          // Red\n    core: new Color3(0.8, 0.8, 0.2),        // Yellow\n    default: new Color3(0.5, 0.5, 0.5)\n  },\n  service: {\n    platform: new Color3(0.2, 0.4, 0.8),    // Dark Blue\n    ci: new Color3(0.8, 0.4, 0.2),          // Orange\n    cd: new Color3(0.2, 0.8, 0.2),          // Green\n    ce: new Color3(0.8, 0.2, 0.8),          // Purple\n    core: new Color3(0.8, 0.8, 0.2),        // Yellow\n    default: new Color3(0.5, 0.5, 0.5)\n  },\n  language: {\n    java: new Color3(0.8, 0.4, 0.2),        // Orange (Java)\n    javascript: new Color3(0.9, 0.8, 0.2),  // Yellow (JS)\n    python: new Color3(0.2, 0.4, 0.8),      // Blue (Python)\n    go: new Color3(0.2, 0.8, 0.8),          // Cyan (Go)\n    typescript: new Color3(0.2, 0.6, 0.8),  // Light Blue (TS)\n    kotlin: new Color3(0.8, 0.2, 0.8),      // Purple (Kotlin)\n    scala: new Color3(0.8, 0.2, 0.2),       // Red (Scala)\n    default: new Color3(0.5, 0.5, 0.5)\n  },\n  resourceDomain: {\n    harness: new Color3(0.2, 0.6, 0.8),\n    io: new Color3(0.8, 0.2, 0.4),\n    wings: new Color3(0.2, 0.8, 0.4),\n    software: new Color3(0.8, 0.6, 0.2),\n    default: new Color3(0.5, 0.5, 0.5)\n  },\n  httpMethod: {\n    GET: new Color3(0.2, 0.8, 0.2),       // Green (safe, read-only)\n    POST: new Color3(0.2, 0.6, 0.8),      // Blue (create)\n    PUT: new Color3(0.8, 0.6, 0.2),       // Orange (update)\n    PATCH: new Color3(0.8, 0.8, 0.2),     // Yellow (partial update)\n    DELETE: new Color3(0.8, 0.2, 0.2),    // Red (delete)\n    HEAD: new Color3(0.6, 0.6, 0.6),      // Gray (metadata)\n    OPTIONS: new Color3(0.8, 0.2, 0.8),   // Purple (discovery)\n    MULTIPLE: new Color3(0.4, 0.2, 0.6),  // Dark Purple (multiple methods)\n    INTERNAL: new Color3(0.2, 0.8, 0.8),  // Cyan (internal calls)\n    UNKNOWN: new Color3(0.5, 0.5, 0.5),   // Gray (unknown method)\n    default: new Color3(0.5, 0.5, 0.5)\n  },\n  petType: {\n    Dog: new Color3(0.6, 0.4, 0.2),      // Brown\n    Cat: new Color3(0.5, 0.5, 0.5),      // Gray\n    Bird: new Color3(0.2, 0.8, 0.8),     // Cyan\n    Fish: new Color3(0.2, 0.4, 0.8),     // Blue\n    None: new Color3(0.7, 0.7, 0.7),     // Light gray\n    Hamster: new Color3(0.8, 0.6, 0.2),  // Orange\n    Rabbit: new Color3(0.9, 0.9, 0.9)    // White\n  },\n  petColor: {\n    Brown: new Color3(0.6, 0.4, 0.2),\n    Black: new Color3(0.1, 0.1, 0.1),\n    White: new Color3(0.9, 0.9, 0.9),\n    Gray: new Color3(0.5, 0.5, 0.5),\n    Orange: new Color3(0.9, 0.6, 0.2),\n    Golden: new Color3(0.9, 0.8, 0.4),\n    Spotted: new Color3(0.8, 0.8, 0.8)\n  },\n  age: {\n    \"0-19\": new Color3(0.2, 0.8, 0.2),   // Green (youth)\n    \"20-39\": new Color3(0.2, 0.6, 0.8),  // Blue (young adult)\n    \"40-59\": new Color3(0.8, 0.6, 0.2),  // Orange (middle age)\n    \"60-79\": new Color3(0.8, 0.4, 0.4),  // Red (senior)\n    \"80+\": new Color3(0.6, 0.2, 0.6)     // Purple (elder)\n  },\n  firstName: {\n    // First 5 names get distinct colors\n    James: new Color3(0.8, 0.2, 0.2),\n    Mary: new Color3(0.2, 0.8, 0.2),\n    John: new Color3(0.2, 0.2, 0.8),\n    Patricia: new Color3(0.8, 0.8, 0.2),\n    Robert: new Color3(0.8, 0.2, 0.8),\n    // Rest get a default\n    default: new Color3(0.5, 0.5, 0.5)\n  },\n  lastName: {\n    // First 5 names get distinct colors\n    Smith: new Color3(0.4, 0.2, 0.1),\n    Johnson: new Color3(0.1, 0.4, 0.2),\n    Williams: new Color3(0.2, 0.1, 0.4),\n    Brown: new Color3(0.6, 0.4, 0.2),\n    Jones: new Color3(0.4, 0.1, 0.4),\n    // Rest get a default\n    default: new Color3(0.6, 0.6, 0.6)\n  },\n  countryOfBirth: {\n    \"United States\": new Color3(0.2, 0.3, 0.7),  // Blue\n    \"Canada\": new Color3(0.8, 0.2, 0.2),         // Red\n    \"United Kingdom\": new Color3(0.2, 0.4, 0.6),  // Navy\n    \"Germany\": new Color3(0.1, 0.1, 0.1),        // Black\n    \"France\": new Color3(0.2, 0.3, 0.8),         // Blue\n    \"Japan\": new Color3(0.9, 0.9, 0.9),          // White\n    \"China\": new Color3(0.8, 0.2, 0.2),          // Red\n    \"India\": new Color3(1, 0.6, 0.2),            // Orange\n    \"Brazil\": new Color3(0.2, 0.6, 0.2),         // Green\n    \"Australia\": new Color3(0.2, 0.4, 0.2),      // Dark Green\n    default: new Color3(0.5, 0.5, 0.5)\n  },\n  countryOfResidence: {\n    \"United States\": new Color3(0.2, 0.3, 0.7),\n    \"Canada\": new Color3(0.8, 0.2, 0.2),\n    \"United Kingdom\": new Color3(0.2, 0.4, 0.6),\n    \"Germany\": new Color3(0.1, 0.1, 0.1),\n    \"France\": new Color3(0.2, 0.3, 0.8),\n    \"Japan\": new Color3(0.9, 0.9, 0.9),\n    \"China\": new Color3(0.8, 0.2, 0.2),\n    \"India\": new Color3(1, 0.6, 0.2),\n    \"Brazil\": new Color3(0.2, 0.6, 0.2),\n    \"Australia\": new Color3(0.2, 0.4, 0.2),\n    \"Mexico\": new Color3(0.2, 0.5, 0.2),\n    \"Spain\": new Color3(0.8, 0.8, 0.2),\n    \"Italy\": new Color3(0.2, 0.6, 0.2),\n    \"Netherlands\": new Color3(1, 0.6, 0),\n    \"Sweden\": new Color3(0.2, 0.4, 0.8),\n    default: new Color3(0.5, 0.5, 0.5)\n  }\n};\n\n// Default colors\nconst DEFAULT_BACKGROUND_COLOR = new Color3(0.5, 0.5, 0.5);\nconst DEFAULT_BORDER_COLOR = new Color3(0, 0, 0);\n\n/**\n * Get property value from node for color mapping\n */\nfunction getNodePropertyValue(node: Node, propertyName: string): string {\n  if (propertyName === \"type\") {\n    return node.type;\n  } else if (propertyName === \"age\" && node.properties?.age !== undefined) {\n    const age = node.properties.age;\n    if (age < 20) return \"0-19\";\n    if (age < 40) return \"20-39\";\n    if (age < 60) return \"40-59\";\n    if (age < 80) return \"60-79\";\n    return \"80+\";\n  } else if (node.properties && propertyName in node.properties) {\n    const value = node.properties[propertyName as keyof typeof node.properties];\n    return value ? tostring(value) : \"None\";\n  }\n  return \"Unknown\";\n}\n\n/**\n * Get color for a property value\n */\nfunction getColorForPropertyValue(propertyName: string, value: string): Color3 {\n  const scheme = COLOR_SCHEMES[propertyName as keyof typeof COLOR_SCHEMES];\n  if (!scheme) return DEFAULT_BACKGROUND_COLOR;\n\n  // Check if value exists in scheme\n  if (value in scheme) {\n    return scheme[value as keyof typeof scheme];\n  }\n\n  // Use default color if available\n  if (\"default\" in scheme) {\n    return scheme.default;\n  }\n\n  return DEFAULT_BACKGROUND_COLOR;\n}\n\n/**\n * Get background color for a node based on visual mapping\n */\nexport function getNodeBackgroundColor(node: Node, visualMapping?: VisualMapping): Color3 {\n  if (!visualMapping || visualMapping.backgroundColor === \"none\") {\n    // Use node's default color\n    return new Color3(node.color[0], node.color[1], node.color[2]);\n  }\n\n  const propertyValue = getNodePropertyValue(node, visualMapping.backgroundColor);\n  const mappedColor = getColorForPropertyValue(visualMapping.backgroundColor, propertyValue);\n  \n  return mappedColor;\n}\n\n/**\n * Get border color for a node based on visual mapping\n */\nexport function getNodeBorderColor(node: Node, visualMapping?: VisualMapping): Color3 {\n  if (!visualMapping || visualMapping.borderColor === \"none\") {\n    return DEFAULT_BORDER_COLOR;\n  }\n\n  const propertyValue = getNodePropertyValue(node, visualMapping.borderColor);\n  return getColorForPropertyValue(visualMapping.borderColor, propertyValue);\n}\n\n/**\n * Get text properties for a node (for label visibility)\n */\nexport function getNodeTextProperties(backgroundColor: Color3): { textColor: Color3; borderColor: Color3 } {\n  // Calculate brightness of background\n  const brightness = (backgroundColor.R + backgroundColor.G + backgroundColor.B) / 3;\n  \n  // Use contrasting text color\n  const textColor = brightness > 0.5 \n    ? new Color3(0, 0, 0)  // Black text on light background\n    : new Color3(1, 1, 1); // White text on dark background\n    \n  return {\n    textColor,\n    borderColor: textColor // Use same color for text border\n  };\n}",
      "patterns": {
        "functions": 6,
        "classes": 0,
        "interfaces": 0,
        "exports": 3,
        "imports": 4,
        "anyTypes": 0,
        "typeAssertions": 3,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": [
          {
            "name": "getNodePropertyValue",
            "type": "function",
            "isExported": false
          },
          {
            "name": "getColorForPropertyValue",
            "type": "function",
            "isExported": false
          },
          {
            "name": "getNodeBackgroundColor",
            "type": "function",
            "isExported": true
          },
          {
            "name": "getNodeBorderColor",
            "type": "function",
            "isExported": true
          },
          {
            "name": "getNodeTextProperties",
            "type": "function",
            "isExported": true
          }
        ]
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/client/services/configGui/componentFactory.ts",
      "relativePath": "client/services/configGui/componentFactory.ts",
      "name": "componentFactory.ts",
      "size": 8740,
      "lines": 299,
      "lastModified": "2025-07-11T04:43:39.172Z",
      "content": "/**\n * Component Factory for Configuration GUI\n * \n * Provides a centralized factory for creating GUI components\n * with consistent styling and behavior.\n */\n\nimport { GUI_CONSTANTS } from \"./constants\";\nimport { createDropdown } from \"./components/dropdown\";\nimport { createFrame } from \"./components/frame\";\nimport { createTitle } from \"./components/title\";\n\ninterface ButtonOptions {\n  name: string;\n  text: string;\n  position: UDim2;\n  size?: UDim2;\n  parent: GuiObject;\n  onClick?: () => void;\n  backgroundColor?: Color3;\n}\n\ninterface TextInputOptions {\n  name: string;\n  placeholderText?: string;\n  text?: string;\n  position: UDim2;\n  size?: UDim2;\n  parent: GuiObject;\n  onFocusLost?: (enterPressed: boolean, inputObject: InputObject) => void;\n}\n\nexport interface LabelOptions {\n  name: string;\n  text: string;\n  position: UDim2;\n  size?: UDim2;\n  parent: GuiObject;\n  textColor?: Color3;\n  font?: Enum.Font;\n  textScaled?: boolean;\n}\n\nexport interface FrameOptions {\n  name: string;\n  position?: UDim2;\n  size?: UDim2;\n  parent: GuiObject;\n  backgroundColor?: Color3;\n  borderSizePixel?: number;\n}\n\ninterface DropdownOptions {\n  name: string;\n  items: string[];\n  defaultValue: string;\n  position: UDim2;\n  size?: UDim2;\n  parent: Frame;\n  onChange: (value: string) => void;\n}\n\nexport interface TitleOptions {\n  text: string;\n  parent: Frame;\n  position?: UDim2;\n  size?: UDim2;\n}\n\nexport class ComponentFactory {\n  /**\n   * Creates a styled button\n   */\n  public static createButton(options: ButtonOptions): TextButton {\n    const button = new Instance(\"TextButton\");\n    button.Name = options.name;\n    button.Size = options.size || new UDim2(0, GUI_CONSTANTS.BUTTON.WIDTH, 0, GUI_CONSTANTS.BUTTON.HEIGHT);\n    button.Position = options.position;\n    button.BackgroundColor3 = options.backgroundColor || GUI_CONSTANTS.COLORS.BUTTON.DEFAULT;\n    button.BorderSizePixel = 0;\n    button.Font = GUI_CONSTANTS.TYPOGRAPHY.BUTTON_FONT;\n    button.Text = options.text;\n    button.TextColor3 = GUI_CONSTANTS.COLORS.TEXT;\n    button.TextScaled = true;\n    button.Parent = options.parent;\n\n    // Add corner radius\n    const corner = new Instance(\"UICorner\");\n    corner.CornerRadius = new UDim(0, 4);\n    corner.Parent = button;\n\n    // Add hover effect\n    button.MouseEnter.Connect(() => {\n      button.BackgroundColor3 = GUI_CONSTANTS.COLORS.BUTTON.HOVER;\n    });\n\n    button.MouseLeave.Connect(() => {\n      button.BackgroundColor3 = options.backgroundColor || GUI_CONSTANTS.COLORS.BUTTON.DEFAULT;\n    });\n\n    // Add click feedback\n    button.MouseButton1Down.Connect(() => {\n      button.BackgroundColor3 = GUI_CONSTANTS.COLORS.BUTTON.ACTIVE;\n    });\n\n    button.MouseButton1Up.Connect(() => {\n      button.BackgroundColor3 = GUI_CONSTANTS.COLORS.BUTTON.HOVER;\n    });\n\n    // Connect click handler\n    if (options.onClick) {\n      button.MouseButton1Click.Connect(options.onClick);\n    }\n\n    return button;\n  }\n\n  /**\n   * Creates a styled text input\n   */\n  public static createTextInput(options: TextInputOptions): TextBox {\n    const input = new Instance(\"TextBox\");\n    input.Name = options.name;\n    input.Size = options.size || new UDim2(0.4, 0, 0, GUI_CONSTANTS.INPUT.HEIGHT);\n    input.Position = options.position;\n    input.BackgroundColor3 = new Color3(0.3, 0.3, 0.3);\n    input.BorderSizePixel = 0;\n    input.Font = GUI_CONSTANTS.TYPOGRAPHY.INPUT_FONT;\n    input.Text = options.text || \"\";\n    input.PlaceholderText = options.placeholderText || \"\";\n    input.PlaceholderColor3 = new Color3(0.7, 0.7, 0.7);\n    input.TextColor3 = GUI_CONSTANTS.COLORS.TEXT;\n    input.TextScaled = true;\n    input.ClearTextOnFocus = false;\n    input.Parent = options.parent;\n\n    // Add corner radius\n    const corner = new Instance(\"UICorner\");\n    corner.CornerRadius = new UDim(0, 4);\n    corner.Parent = input;\n\n    // Connect focus lost handler\n    if (options.onFocusLost) {\n      input.FocusLost.Connect(options.onFocusLost);\n    }\n\n    return input;\n  }\n\n  /**\n   * Creates a styled label\n   */\n  public static createLabel(options: LabelOptions): TextLabel {\n    const label = new Instance(\"TextLabel\");\n    label.Name = options.name;\n    label.Size = options.size || new UDim2(0.5, 0, 0, GUI_CONSTANTS.INPUT.HEIGHT);\n    label.Position = options.position;\n    label.BackgroundTransparency = 1;\n    label.Font = options.font || GUI_CONSTANTS.TYPOGRAPHY.LABEL_FONT;\n    label.Text = options.text;\n    label.TextColor3 = options.textColor || GUI_CONSTANTS.COLORS.TEXT;\n    label.TextScaled = options.textScaled !== false;\n    label.TextXAlignment = Enum.TextXAlignment.Left;\n    label.Parent = options.parent;\n\n    return label;\n  }\n\n  /**\n   * Creates a styled frame\n   */\n  public static createFrame(options: FrameOptions): Frame {\n    const frame = new Instance(\"Frame\");\n    frame.Name = options.name;\n    frame.Size = options.size || new UDim2(1, 0, 1, 0);\n    frame.Position = options.position || new UDim2(0, 0, 0, 0);\n    frame.BackgroundColor3 = options.backgroundColor || GUI_CONSTANTS.COLORS.BACKGROUND;\n    frame.BorderSizePixel = options.borderSizePixel !== undefined ? options.borderSizePixel : 0;\n    frame.Parent = options.parent;\n\n    return frame;\n  }\n\n  /**\n   * Creates a checkbox (using a TextButton)\n   */\n  public static createCheckbox(options: ButtonOptions & { checked?: boolean }): TextButton {\n    const checkbox = this.createButton({\n      ...options,\n      size: new UDim2(0, 20, 0, 20),\n      text: options.checked ? \"✓\" : \"\",\n      backgroundColor: new Color3(0.3, 0.3, 0.3)\n    });\n\n    let checked = options.checked || false;\n    \n    checkbox.MouseButton1Click.Connect(() => {\n      checked = !checked;\n      checkbox.Text = checked ? \"✓\" : \"\";\n      if (options.onClick) {\n        options.onClick();\n      }\n    });\n\n    return checkbox;\n  }\n\n  /**\n   * Creates a full dropdown with item selection\n   */\n  public static createDropdown(options: DropdownOptions): TextButton {\n    return createDropdown({\n      parent: options.parent,\n      position: options.position,\n      size: options.size || new UDim2(0, 100, 0, GUI_CONSTANTS.INPUT.HEIGHT),\n      items: options.items,\n      defaultValue: options.defaultValue,\n      onChange: options.onChange\n    });\n  }\n  \n  /**\n   * Creates a styled frame using the modular component\n   */\n  public static createStyledFrame(options: FrameOptions): Frame {\n    return createFrame({\n      name: options.name,\n      parent: options.parent,\n      position: options.position,\n      size: options.size,\n      backgroundColor: options.backgroundColor,\n      borderSizePixel: options.borderSizePixel\n    });\n  }\n  \n  /**\n   * Creates a title component\n   */\n  public static createTitle(options: TitleOptions): TextLabel {\n    return createTitle(options);\n  }\n\n  /**\n   * Creates a numeric input with validation\n   */\n  public static createNumericInput(options: TextInputOptions & { min?: number; max?: number }): TextBox {\n    const input = this.createTextInput(options);\n    \n    input.FocusLost.Connect((enterPressed) => {\n      const value = tonumber(input.Text);\n      if (value === undefined) {\n        input.Text = \"0\";\n      } else if (options.min !== undefined && value < options.min) {\n        input.Text = tostring(options.min);\n      } else if (options.max !== undefined && value > options.max) {\n        input.Text = tostring(options.max);\n      }\n      \n      if (options.onFocusLost) {\n        options.onFocusLost(enterPressed, {} as InputObject);\n      }\n    });\n\n    return input;\n  }\n\n  /**\n   * Creates a section divider\n   */\n  public static createDivider(parent: GuiObject, yPosition: number): Frame {\n    const divider = new Instance(\"Frame\");\n    divider.Name = \"Divider\";\n    divider.Size = new UDim2(0.9, 0, 0, 1);\n    divider.Position = new UDim2(0.05, 0, 0, yPosition);\n    divider.BackgroundColor3 = new Color3(0.4, 0.4, 0.4);\n    divider.BorderSizePixel = 0;\n    divider.Parent = parent;\n\n    return divider;\n  }\n\n  /**\n   * Creates a scrolling frame\n   */\n  public static createScrollingFrame(options: FrameOptions & { canvasSize?: UDim2 }): ScrollingFrame {\n    const scrollFrame = new Instance(\"ScrollingFrame\");\n    scrollFrame.Name = options.name;\n    scrollFrame.Size = options.size || new UDim2(1, 0, 1, 0);\n    scrollFrame.Position = options.position || new UDim2(0, 0, 0, 0);\n    scrollFrame.BackgroundColor3 = options.backgroundColor || GUI_CONSTANTS.COLORS.BACKGROUND;\n    scrollFrame.BorderSizePixel = options.borderSizePixel !== undefined ? options.borderSizePixel : 0;\n    scrollFrame.ScrollBarThickness = 8;\n    scrollFrame.ScrollBarImageColor3 = new Color3(0.5, 0.5, 0.5);\n    scrollFrame.CanvasSize = options.canvasSize || new UDim2(0, 0, 0, 0);\n    scrollFrame.Parent = options.parent;\n\n    return scrollFrame;\n  }\n}",
      "patterns": {
        "functions": 6,
        "classes": 1,
        "interfaces": 6,
        "exports": 4,
        "imports": 4,
        "anyTypes": 0,
        "typeAssertions": 1,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/renderers/unifiedDataRenderer/rendering/nodeRenderer.ts",
      "relativePath": "shared/modules/renderers/unifiedDataRenderer/rendering/nodeRenderer.ts",
      "name": "nodeRenderer.ts",
      "size": 8398,
      "lines": 231,
      "lastModified": "2025-07-11T04:15:45.089Z",
      "content": "/**\n * Node Renderer for Unified Data Renderer\n * \n * Handles creation and rendering of hexagon nodes\n */\n\nimport { Cluster, Node } from \"../../../../interfaces/simpleDataGenerator.interface\";\nimport { INodeRenderer, SpacingConfig } from \"../interfaces\";\n\nimport { EnhancedGeneratorConfig } from \"../../../../interfaces/enhancedGenerator.interface\";\nimport { RENDERER_CONSTANTS } from \"../../dataGeneratorRobloxRendererUtils/constants\";\nimport { createRopeConnectors } from \"../../dataGeneratorRobloxRendererUtils/ropeCreator\";\nimport { getNodeBackgroundColor } from \"../utils/colorMapper\";\nimport { makeHexagon } from \"../../../hexagonMaker\";\nimport { PropertyValueResolver } from \"../../propertyValueResolver\";\nimport { getDefaultXAxis } from \"../../../../constants/axisDefaults\";\n\nexport class NodeRenderer implements INodeRenderer {\n  /**\n   * Renders the cluster with positioned nodes\n   */\n  public renderCluster(cluster: Cluster, parentFolder: Folder, config?: EnhancedGeneratorConfig): void {\n    \n    // Look for existing GraphMaker folder and delete it\n    const existingGraphMaker = parentFolder.FindFirstChild(\"GraphMaker\");\n    if (existingGraphMaker) {\n      existingGraphMaker.Destroy();\n    }\n\n    // Create GraphMaker folder\n    const graphMakerFolder = new Instance(\"Folder\");\n    graphMakerFolder.Name = \"GraphMaker\";\n    graphMakerFolder.Parent = parentFolder;\n\n    // Create folder structure inside GraphMaker\n    const clusterFolder = new Instance(\"Folder\");\n    clusterFolder.Name = \"UnifiedDataCluster\";\n    clusterFolder.Parent = graphMakerFolder;\n    \n    const nodesFolder = new Instance(\"Folder\");\n    nodesFolder.Name = \"Nodes\";\n    nodesFolder.Parent = clusterFolder;\n    \n    const linksFolder = new Instance(\"Folder\");\n    linksFolder.Name = \"Links\";\n    linksFolder.Parent = clusterFolder;\n    \n    // Create hexagons for all nodes if showNodes is true\n    const showNodes = config?.visualization?.showNodes !== false; // Default to true\n    const nodeToHexagon = showNodes \n      ? this.createHexagons(cluster, nodesFolder, config)\n      : new Map<string, Model>();\n    \n    // Create links/ropes for relationships only if nodes are shown and connectors are enabled\n    if (showNodes && config?.visualization?.showConnectors !== false) {\n      print(`[NodeRenderer] Creating links for ${cluster.relations.size()} relations`);\n      createRopeConnectors({\n        cluster,\n        nodeToHexagon,\n        linksFolder,\n        visualization: config?.visualization,\n        linkDiameter: config?.spacing?.linkDiameter\n      });\n    } else {\n      print(`[NodeRenderer] Not creating links - showNodes: ${showNodes}, showConnectors: ${config?.visualization?.showConnectors}`);\n    }\n    \n  }\n\n  /**\n   * Creates hexagons for all nodes in the cluster\n   */\n  public createHexagons(cluster: Cluster, nodesFolder: Folder, config?: EnhancedGeneratorConfig): Map<string, Model> {\n    const nodeToHexagon = new Map<string, Model>();\n    let hexIndex = 1;\n    \n    // Use spacing from config if provided, otherwise use defaults\n    const spacing = this.getSpacingConfig(config);\n    \n    // Create property resolver to group nodes\n    const propertyResolver = new PropertyValueResolver();\n    \n    // Get the X-axis property for swimlane grouping\n    const xAxisProperty = config?.axisMapping?.xAxis || getDefaultXAxis(cluster.discoveredProperties);\n    \n    // Group nodes by swimlane property\n    const nodesBySwimlane = new Map<string, Node[]>();\n    \n    cluster.groups.forEach(group => {\n      group.nodes.forEach(node => {\n        const propertyValue = propertyResolver.getPropertyValue(node, xAxisProperty);\n        \n        if (!nodesBySwimlane.has(propertyValue)) {\n          nodesBySwimlane.set(propertyValue, []);\n        }\n        nodesBySwimlane.get(propertyValue)!.push(node);\n      });\n    });\n    \n    // Create a Model for each swimlane group\n    nodesBySwimlane.forEach((nodes, swimlaneName) => {\n      const swimlaneModel = new Instance(\"Model\");\n      swimlaneModel.Name = `Swimlane_${swimlaneName}`;\n      swimlaneModel.Parent = nodesFolder;\n      \n      // Create hexagons for nodes in this swimlane\n      nodes.forEach(node => {\n        const hexagon = this.createSingleHexagon(node, hexIndex, spacing, config);\n        hexagon.Parent = swimlaneModel;\n        nodeToHexagon.set(node.uuid, hexagon);\n        hexIndex++;\n      });\n    });\n    \n    return nodeToHexagon;\n  }\n\n  /**\n   * Create a single hexagon for a node\n   */\n  private createSingleHexagon(node: Node, hexIndex: number, spacing: SpacingConfig, config?: EnhancedGeneratorConfig): Model {\n    const WIDTH = spacing.nodeRadius * 2; // Diameter from radius\n    const HEIGHT = spacing.nodeHeight;\n    \n    const labels = this.createNodeLabels(node);\n    \n    // Get colors based on visual mapping\n    const backgroundColor = getNodeBackgroundColor(node, config?.visualMapping);\n    // const borderColor = getNodeBorderColor(node, config?.visualMapping); // Not used in standardized version\n    \n    const hexagon = makeHexagon({\n      id: hexIndex,\n      position: new Vector3(node.position.x, node.position.y, node.position.z),\n      width: WIDTH,\n      height: HEIGHT,\n      barColor: backgroundColor,\n      barMaterial: Enum.Material.SmoothPlastic, // Performance optimization\n      castShadow: false, // Performance optimization\n      labels: labels,\n      stackIndex: 1,\n      hexIndex: hexIndex,\n      guid: node.uuid\n    });\n    \n    // Debug: Log node position for Y shadow comparison\n    if (node.properties && \"component\" in node.properties) {\n      const component = node.properties.component;\n      if (component) {\n        print(`[NodeRenderer] Node ${node.name} (${component}): Position Y=${string.format(\"%.1f\", node.position.y)}`);\n      }\n    }\n    \n    // Set hexagon name based on UUID pattern\n    this.setHexagonName(hexagon, node.uuid);\n    \n    // Store node properties as attributes for the inspector\n    hexagon.SetAttribute(\"nodeName\", node.name);\n    hexagon.SetAttribute(\"nodeType\", node.type);\n    \n    // Dynamically store all properties as attributes\n    if (node.properties) {\n      for (const [key, value] of pairs(node.properties)) {\n        if (value !== undefined) {\n          // Convert value to appropriate type for SetAttribute\n          if (typeIs(value, \"string\") || typeIs(value, \"number\") || typeIs(value, \"boolean\")) {\n            hexagon.SetAttribute(key as string, value);\n          } else {\n            // For complex types, convert to string\n            hexagon.SetAttribute(key as string, tostring(value));\n          }\n        }\n      }\n    }\n    \n    return hexagon;\n  }\n\n  /**\n   * Create labels for a node\n   */\n  private createNodeLabels(node: Node): string[] {\n    // For person nodes, use full name if available\n    const isPersonNode = [\"man\", \"woman\", \"child\", \"grandparent\"].includes(node.type);\n    const fullName = isPersonNode && node.properties?.firstName && node.properties?.lastName\n      ? `${node.properties.firstName} ${node.properties.lastName}`\n      : node.name;\n    \n    const labels: string[] = [\n      fullName,\n      node.type,\n      (node as Node & { typeNumber?: string }).typeNumber || \"\"\n    ];\n    \n    // Add type-specific properties\n    if (isPersonNode && node.properties?.age) {\n      labels.push(`Age: ${node.properties.age}`);\n    } else if (node.type === \"Animals\" && node.properties?.animalType) {\n      labels.push(node.properties.animalType);\n    }\n    \n    return labels;\n  }\n\n  /**\n   * Set hexagon name based on UUID pattern\n   */\n  private setHexagonName(hexagon: Model, uuid: string): void {\n    // Extract layer and node index from uuid if available\n    const layerMatch = uuid.match(\"node_(\\\\d+)_(\\\\d+)\");\n    if (layerMatch) {\n      const layerNum = layerMatch[1];\n      const nodeIdx = layerMatch[2];\n      hexagon.Name = `Hexagon_L${layerNum}_N${nodeIdx}`;\n    } else {\n      hexagon.Name = `Hexagon_${uuid}`;\n    }\n  }\n\n  /**\n   * Get spacing configuration\n   */\n  private getSpacingConfig(config?: EnhancedGeneratorConfig): SpacingConfig {\n    return config?.spacing || {\n      nodeHeight: RENDERER_CONSTANTS.HEXAGON.HEIGHT,\n      nodeRadius: RENDERER_CONSTANTS.HEXAGON.WIDTH / 2,\n      layerSpacing: RENDERER_CONSTANTS.POSITIONING.LEVEL_SPACING,\n      nodeSpacing: RENDERER_CONSTANTS.POSITIONING.COLUMN_SPACING,\n      swimlaneSpacing: RENDERER_CONSTANTS.POSITIONING.COLUMN_SPACING\n    };\n  }\n}",
      "patterns": {
        "functions": 4,
        "classes": 1,
        "interfaces": 0,
        "exports": 1,
        "imports": 9,
        "anyTypes": 0,
        "typeAssertions": 5,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/renderers/blocks/shadowBlockCreator.ts",
      "relativePath": "shared/modules/renderers/blocks/shadowBlockCreator.ts",
      "name": "shadowBlockCreator.ts",
      "size": 7914,
      "lines": 252,
      "lastModified": "2025-07-11T03:11:57.388Z",
      "content": "/**\n * Shadow Block Creator\n * Creates shadow blocks for visual depth and grouping\n * Part of F002 Phase 2 refactoring - T6\n */\n\nimport { BaseBlockCreator } from \"./baseBlockCreator\";\nimport { BLOCK_CONSTANTS } from \"../constants/blockConstants\";\nimport { LAYOUT_CONSTANTS } from \"../constants/layoutConstants\";\nimport { EndcapBlockCreator } from \"./endcapBlockCreator\";\n\nexport interface ShadowBlockConfig {\n  origin: Vector3;\n  parent: Instance;\n  height?: number;\n  width?: number;\n  depth?: number;\n  buffer?: number; // DEPRECATED: Padding is handled by LAYOUT_CONSTANTS.SHADOW_PADDING\n}\n\nexport class ShadowBlockCreator extends BaseBlockCreator {\n  private endcapCreator: EndcapBlockCreator;\n\n  constructor() {\n    super();\n    this.endcapCreator = new EndcapBlockCreator();\n  }\n  /**\n   * Create a group shadow block\n   */\n  public createGroupShadowBlock(config: ShadowBlockConfig): Part {\n    const {\n      origin,\n      parent,\n      width = BLOCK_CONSTANTS.DIMENSIONS.DEFAULT_WIDTH,\n      depth = BLOCK_CONSTANTS.DIMENSIONS.DEFAULT_DEPTH,\n    } = config;\n\n    // Note: buffer parameter is deprecated - padding is handled by LAYOUT_CONSTANTS.SHADOW_PADDING\n    const shadowBlock = this.createBlock({\n      name: \"GroupShadowBlock\",\n      size: new Vector3(\n        width,\n        BLOCK_CONSTANTS.DIMENSIONS.UNIFORM_SHADOW_THICKNESS,\n        depth\n      ),\n      position: new Vector3(\n        origin.X,\n        BLOCK_CONSTANTS.DIMENSIONS.UNIFORM_SHADOW_THICKNESS / 2 +\n          BLOCK_CONSTANTS.DIMENSIONS.Z_FIGHTING_OFFSET, // Raised by 0.1 to prevent z-fighting\n        origin.Z\n      ),\n      material: BLOCK_CONSTANTS.MATERIALS.SHADOW,\n      color: BLOCK_CONSTANTS.COLORS.SHADOW,\n      transparency: BLOCK_CONSTANTS.TRANSPARENCY.OPAQUE,\n      canCollide: true,\n    });\n\n    shadowBlock.CastShadow = false;\n    shadowBlock.Parent = parent;\n\n    return shadowBlock;\n  }\n\n  /**\n   * Create X-parallel shadow blocks (run along X axis, grouped by Z position)\n   */\n  public createXParallelShadowBlocks(\n    nodesByProperty: Map<string, any[]>,\n    propertyBounds: Map<\n      string,\n      { minX: number; maxX: number; minZ: number; maxZ: number }\n    >,\n    parent: Instance,\n    yPosition: number = 0.5,\n    blocksMap?: Map<string, Part>,\n    propertyName?: string,\n    origin?: Vector3\n  ): void {\n    // First, calculate the collective bounds of all pet lanes\n    let collectiveMinZ = math.huge;\n    let collectiveMaxZ = -math.huge;\n\n    propertyBounds.forEach((bounds, propertyValue) => {\n      collectiveMinZ = math.min(collectiveMinZ, bounds.minZ);\n      collectiveMaxZ = math.max(collectiveMaxZ, bounds.maxZ);\n    });\n\n    // Calculate the center of the collective pet lanes\n    const collectiveCenter = (collectiveMinZ + collectiveMaxZ) / 2;\n\n    // The group shadow block is centered at Z=0, so we need to offset the pet lanes\n    const offsetZ = 0 - collectiveCenter;\n\n    let blockIndex = 0;\n\n    nodesByProperty.forEach((nodes, propertyValue) => {\n      const bounds = propertyBounds.get(propertyValue);\n      if (!bounds) {\n        warn(\n          `[ShadowBlockCreator] No bounds found for property value: ${propertyValue}`\n        );\n        return;\n      }\n      const block = this.createXParallelBlock(\n        propertyValue,\n        bounds,\n        yPosition,\n        blockIndex,\n        propertyName,\n        offsetZ\n      );\n      block.Parent = parent;\n\n      // Create swimlane model with endcaps\n      this.endcapCreator.createSwimlaneWithEndcaps({\n        swimlaneBlock: block,\n        swimlaneName: propertyValue,\n        parent: parent,\n        gap: 1,\n        isZAxis: true,\n      });\n\n      if (blocksMap) {\n        blocksMap.set(propertyValue, block);\n      }\n\n      blockIndex++;\n    });\n  }\n\n  /**\n   * Create a single X-parallel shadow block\n   */\n  private createXParallelBlock(\n    propertyValue: string,\n    bounds: { minX: number; maxX: number; minZ: number; maxZ: number },\n    yPosition: number,\n    colorIndex: number,\n    propertyName?: string,\n    offsetZ: number = 0\n  ): Part {\n    // Use actual bounds for dimensions - NO BUFFER to match actual content\n    const width = bounds.maxX - bounds.minX + 4; // Add 4 to length as requested\n    // Use the correct depth for X-parallel lanes\n    const depth = LAYOUT_CONSTANTS.LANE_DIMENSIONS.X_PARALLEL_LANE_DEPTH;\n\n    const centerX = (bounds.minX + bounds.maxX) / 2;\n    const centerZ = (bounds.minZ + bounds.maxZ) / 2;\n\n    // Generate unique ID for the lane\n    const laneId = `${propertyName || \"default\"}_${propertyValue}`;\n    const blockName = `XParallel_Lane_${laneId}`;\n\n    // Apply the offset to center the collection of lanes\n    const adjustedZPosition = centerZ + offsetZ;\n\n    const block = this.createBlock({\n      name: blockName,\n      size: new Vector3(\n        width,\n        LAYOUT_CONSTANTS.LANE_DIMENSIONS.X_PARALLEL_LANE_HEIGHT,\n        depth\n      ),\n      position: new Vector3(centerX, yPosition, adjustedZPosition),\n      material: BLOCK_CONSTANTS.MATERIALS.SWIMLANE,\n      color: this.getColorFromArray(\n        BLOCK_CONSTANTS.COLORS.X_PARALLEL_LANE_COLORS,\n        colorIndex\n      ),\n      transparency: BLOCK_CONSTANTS.TRANSPARENCY.OPAQUE,\n      canCollide: true,\n    });\n\n    block.CastShadow = false;\n\n    // Add surface labels to all faces\n    this.addSurfaceLabelsToAllFaces(block, propertyValue);\n\n    return block;\n  }\n\n  /**\n   * Add surface labels to all faces of a block\n   */\n  private addSurfaceLabelsToAllFaces(block: Part, text: string): void {\n    const faces: Enum.NormalId[] = [\n      Enum.NormalId.Front,\n      Enum.NormalId.Back,\n      Enum.NormalId.Left,\n      Enum.NormalId.Right,\n      Enum.NormalId.Top,\n      Enum.NormalId.Bottom,\n    ];\n\n    // Check if this is an X-parallel block\n    const isXParallel = block.Name.match(\"^XParallel_Lane_\")[0] !== undefined;\n\n    faces.forEach((face) => {\n      // Skip Front face (red labels), Back face (green labels), and Left face (blue labels) for X-parallel blocks\n      if (\n        isXParallel &&\n        (face === Enum.NormalId.Front ||\n          face === Enum.NormalId.Back ||\n          face === Enum.NormalId.Left)\n      ) {\n        return;\n      }\n      // Create SurfaceGui\n      const surfaceGui = new Instance(\"SurfaceGui\");\n      surfaceGui.Name = `SurfaceGui_${face.Name}`;\n      surfaceGui.Face = face;\n      surfaceGui.SizingMode = Enum.SurfaceGuiSizingMode.PixelsPerStud;\n      surfaceGui.PixelsPerStud = 50;\n      surfaceGui.Parent = block;\n\n      // Create Frame for background with border\n      const frame = new Instance(\"Frame\");\n      frame.Size = new UDim2(1, 0, 1, 0);\n      frame.BackgroundColor3 = block.Color; // Match block color\n      frame.BackgroundTransparency =\n        BLOCK_CONSTANTS.LABEL_STYLING.BACKGROUND_TRANSPARENCY;\n      frame.BorderSizePixel = BLOCK_CONSTANTS.LABEL_STYLING.BORDER_SIZE_PIXEL;\n      frame.BorderColor3 = BLOCK_CONSTANTS.LABEL_STYLING.BORDER_COLOR;\n      frame.Parent = surfaceGui;\n\n      // Create TextLabel\n      const textLabel = new Instance(\"TextLabel\");\n      textLabel.Size = new UDim2(0.9, 0, 0.9, 0);\n      textLabel.Position = new UDim2(0.05, 0, 0.05, 0);\n      textLabel.BackgroundTransparency = 1;\n      textLabel.Font = BLOCK_CONSTANTS.LABEL_STYLING.FONT;\n      textLabel.Text = text;\n\n      // Use different colors for each face (for testing)\n      const faceColors: { [key: string]: Color3 } = {\n        Front: new Color3(1, 0, 0), // Red\n        Back: new Color3(0, 1, 0), // Green\n        Left: new Color3(0, 0, 1), // Blue\n        Right: new Color3(1, 1, 0), // Yellow\n        Top: new Color3(1, 0, 1), // Magenta\n        Bottom: new Color3(0, 1, 1), // Cyan\n      };\n\n      textLabel.TextColor3 = faceColors[face.Name] || new Color3(1, 1, 1); // Default to white\n      textLabel.TextScaled = BLOCK_CONSTANTS.LABEL_STYLING.TEXT_SCALED;\n      textLabel.Rotation = 90; // Rotate 90 degrees clockwise\n      textLabel.Parent = frame;\n    });\n  }\n}\n",
      "patterns": {
        "functions": 3,
        "classes": 1,
        "interfaces": 1,
        "exports": 2,
        "imports": 4,
        "anyTypes": 0,
        "typeAssertions": 1,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [
          {
            "name": "ShadowBlockCreator",
            "methodCount": 6,
            "methods": [
              "createGroupShadowBlock",
              "createXParallelShadowBlocks",
              "if",
              "if",
              "createXParallelBlock",
              "addSurfaceLabelsToAllFaces"
            ]
          }
        ],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/client/services/configGui/components/visualCustomizationControls.ts",
      "relativePath": "client/services/configGui/components/visualCustomizationControls.ts",
      "name": "visualCustomizationControls.ts",
      "size": 7796,
      "lines": 213,
      "lastModified": "2025-07-09T03:26:09.002Z",
      "content": "import { GUI_CONSTANTS } from \"../constants\";\nimport type { VisualMapping } from \"../../../../shared/interfaces/enhancedGenerator.interface\";\n\ninterface VisualCustomizationControlsProps {\n  parent: Frame;\n  visualMapping?: VisualMapping;\n  onVisualMappingChange: (mapping: keyof VisualMapping, value: string) => void;\n}\n\n// Available properties for visual mapping\nconst VISUAL_PROPERTIES = [\"none\", \"type\", \"petType\", \"petColor\", \"age\", \"firstName\", \"lastName\", \"countryOfBirth\", \"countryOfResidence\"];\n\nexport function createVisualCustomizationControls({\n  parent,\n  visualMapping,\n  onVisualMappingChange\n}: VisualCustomizationControlsProps): Frame {\n  // Provide default visual mapping if not provided\n  const mapping = visualMapping || {\n    backgroundColor: \"type\",\n    borderColor: \"none\"\n  };\n  \n  // Create container WITHOUT clipping for dropdowns to show\n  const container = new Instance(\"Frame\");\n  container.Name = \"VisualCustomizationControls\";\n  container.Size = new UDim2(1, -20, 0, 80);\n  container.Position = new UDim2(0, 0, 0, 0); // Position will be set by layout manager\n  container.BackgroundColor3 = new Color3(0.15, 0.15, 0.15);\n  container.BorderSizePixel = 0;\n  container.ClipsDescendants = false; // Disable clipping so dropdowns can extend\n  container.ZIndex = 2;\n  container.Parent = parent;\n\n  const containerCorner = new Instance(\"UICorner\");\n  containerCorner.CornerRadius = new UDim(0, 4);\n  containerCorner.Parent = container;\n\n  // Title\n  const title = new Instance(\"TextLabel\");\n  title.Size = new UDim2(1, -20, 0, 20);\n  title.Position = new UDim2(0, 10, 0, 5);\n  title.BackgroundTransparency = 1;\n  title.Font = GUI_CONSTANTS.TYPOGRAPHY.TITLE_FONT;\n  title.Text = \"Visual Property Mapping\";\n  title.TextColor3 = GUI_CONSTANTS.COLORS.TEXT;\n  title.TextSize = 16;\n  title.TextXAlignment = Enum.TextXAlignment.Left;\n  title.Parent = container;\n\n  // Background color dropdown\n  createVisualDropdown({\n    parent: container,\n    label: \"Background Color:\",\n    position: new UDim2(0, 10, 0, 30),\n    currentValue: mapping.backgroundColor,\n    onValueChange: (value) => onVisualMappingChange(\"backgroundColor\", value)\n  });\n\n  // Border color dropdown\n  createVisualDropdown({\n    parent: container,\n    label: \"Border Color:\",\n    position: new UDim2(0.5, 10, 0, 30),\n    currentValue: mapping.borderColor,\n    onValueChange: (value) => onVisualMappingChange(\"borderColor\", value)\n  });\n\n  return container;\n}\n\ninterface VisualDropdownProps {\n  parent: Frame;\n  label: string;\n  position: UDim2;\n  currentValue: string;\n  onValueChange: (value: string) => void;\n}\n\nfunction createVisualDropdown({\n  parent,\n  label,\n  position,\n  currentValue,\n  onValueChange\n}: VisualDropdownProps): void {\n  // Label directly in parent\n  const dropdownLabel = new Instance(\"TextLabel\");\n  dropdownLabel.Size = new UDim2(0.5, -20, 0, 20);\n  dropdownLabel.Position = position;\n  dropdownLabel.BackgroundTransparency = 1;\n  dropdownLabel.Font = GUI_CONSTANTS.TYPOGRAPHY.LABEL_FONT;\n  dropdownLabel.Text = label;\n  dropdownLabel.TextColor3 = GUI_CONSTANTS.COLORS.TEXT;\n  dropdownLabel.TextSize = 14;\n  dropdownLabel.TextXAlignment = Enum.TextXAlignment.Left;\n  dropdownLabel.Parent = parent;\n\n  // Dropdown button directly in parent\n  const dropdownButton = new Instance(\"TextButton\");\n  dropdownButton.Size = new UDim2(0.5, -20, 0, 25);\n  dropdownButton.Position = new UDim2(position.X.Scale, position.X.Offset, 0, position.Y.Offset + 20);\n  dropdownButton.BackgroundColor3 = new Color3(0.25, 0.25, 0.25);\n  dropdownButton.BorderSizePixel = 0;\n  dropdownButton.Font = GUI_CONSTANTS.TYPOGRAPHY.INPUT_FONT;\n  dropdownButton.Text = currentValue + \" ▼\";\n  dropdownButton.TextColor3 = GUI_CONSTANTS.COLORS.TEXT;\n  dropdownButton.TextSize = 14;\n  dropdownButton.Parent = parent;\n\n  const buttonCorner = new Instance(\"UICorner\");\n  buttonCorner.CornerRadius = new UDim(0, 4);\n  buttonCorner.Parent = dropdownButton;\n\n  // Dropdown list - always use ScrollingFrame for consistency\n  const itemHeight = 25;\n  const maxItems = 6;\n  const actualHeight = math.min(VISUAL_PROPERTIES.size() * itemHeight, maxItems * itemHeight);\n  \n  const dropdownList = new Instance(\"ScrollingFrame\");\n  dropdownList.Size = new UDim2(1, 0, 0, actualHeight);\n  dropdownList.Position = new UDim2(0, 0, 0, -actualHeight - 5); // Position above button with gap\n  dropdownList.BackgroundColor3 = new Color3(0.1, 0.1, 0.1);\n  dropdownList.BorderSizePixel = 1;\n  dropdownList.BorderColor3 = new Color3(0.3, 0.3, 0.3);\n  dropdownList.ScrollBarThickness = 4;\n  dropdownList.ScrollBarImageColor3 = new Color3(0.5, 0.5, 0.5);\n  dropdownList.CanvasSize = new UDim2(0, 0, 0, VISUAL_PROPERTIES.size() * itemHeight);\n  dropdownList.Visible = false;\n  dropdownList.ZIndex = 100; // Higher z-index\n  dropdownList.Parent = dropdownButton;\n\n  const listCorner = new Instance(\"UICorner\");\n  listCorner.CornerRadius = new UDim(0, 4);\n  listCorner.Parent = dropdownList;\n\n  // Create option buttons\n  VISUAL_PROPERTIES.forEach((property, index) => {\n    const optionButton = new Instance(\"TextButton\");\n    optionButton.Size = new UDim2(1, -10, 0, itemHeight); // Always account for scrollbar\n    optionButton.Position = new UDim2(0, 0, 0, index * itemHeight);\n    optionButton.BackgroundColor3 = new Color3(0.1, 0.1, 0.1);\n    optionButton.BackgroundTransparency = 0;\n    optionButton.Font = GUI_CONSTANTS.TYPOGRAPHY.INPUT_FONT;\n    optionButton.Text = property;\n    optionButton.TextColor3 = new Color3(0.9, 0.9, 0.9);\n    optionButton.TextSize = 14;\n    optionButton.TextXAlignment = Enum.TextXAlignment.Center;\n    optionButton.BorderSizePixel = 0;\n    optionButton.Parent = dropdownList; // Parent directly to dropdownList\n\n    // Hover effect\n    optionButton.MouseEnter.Connect(() => {\n      optionButton.BackgroundColor3 = new Color3(0.3, 0.3, 0.3);\n      optionButton.TextColor3 = new Color3(1, 1, 1);\n    });\n\n    optionButton.MouseLeave.Connect(() => {\n      optionButton.BackgroundColor3 = new Color3(0.1, 0.1, 0.1);\n      optionButton.TextColor3 = new Color3(0.9, 0.9, 0.9);\n    });\n\n    // Selection\n    optionButton.MouseButton1Click.Connect(() => {\n      dropdownButton.Text = property + \" ▼\";\n      dropdownList.Visible = false;\n      onValueChange(property);\n    });\n  });\n\n  // Create a connection variable to track the close handler\n  let closeConnection: RBXScriptConnection | undefined;\n  \n  // Toggle dropdown\n  dropdownButton.MouseButton1Click.Connect(() => {\n    const isOpening = !dropdownList.Visible;\n    dropdownList.Visible = isOpening;\n    \n    // If opening, set up the close handler\n    if (isOpening) {\n      // Disconnect previous handler if it exists\n      if (closeConnection) {\n        closeConnection.Disconnect();\n      }\n      \n      // Wait a frame to avoid immediate closing\n      game.GetService(\"RunService\").Heartbeat.Wait();\n      \n      // Set up new close handler\n      const userInputService = game.GetService(\"UserInputService\");\n      closeConnection = userInputService.InputBegan.Connect((input, gameProcessed) => {\n        if (input.UserInputType === Enum.UserInputType.MouseButton1 && !gameProcessed) {\n          // Check if click is outside the dropdown\n          const mouse = game.GetService(\"Players\").LocalPlayer.GetMouse();\n          const target = mouse.Target;\n          \n          // Close if clicking outside dropdown area\n          if (!target || !target.IsDescendantOf(dropdownButton)) {\n            dropdownList.Visible = false;\n            if (closeConnection) {\n              closeConnection.Disconnect();\n              closeConnection = undefined;\n            }\n          }\n        }\n      });\n    } else if (closeConnection) {\n      // If closing, disconnect the handler\n      closeConnection.Disconnect();\n      closeConnection = undefined;\n    }\n  });\n}",
      "patterns": {
        "functions": 8,
        "classes": 0,
        "interfaces": 2,
        "exports": 1,
        "imports": 2,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": [
          {
            "name": "createVisualCustomizationControls",
            "type": "function",
            "isExported": true
          },
          {
            "name": "createVisualDropdown",
            "type": "function",
            "isExported": false
          }
        ]
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/client/services/keyboardShortcuts.service.ts",
      "relativePath": "client/services/keyboardShortcuts.service.ts",
      "name": "keyboardShortcuts.service.ts",
      "size": 7791,
      "lines": 207,
      "lastModified": "2025-07-09T02:34:06.161Z",
      "content": "import { UserInputService, Players } from \"@rbxts/services\";\nimport { BaseService } from \"../../shared/services/base/BaseService\";\n\nconst KEYBOARD_CONSTANTS = {\n    ESC_TIMEOUT: 2000, // 2 seconds to press P after Esc\n    CONFIRMATION_TIMEOUT: 5000, // 5 seconds to confirm quit\n};\n\nexport class KeyboardShortcutsService extends BaseService {\n    private escPressed = false;\n    private escPressTime = 0;\n    private confirmationGui?: ScreenGui;\n\n    constructor() {\n        super(\"KeyboardShortcutsService\");\n        this.setupInputHandlers();\n    }\n\n    private setupInputHandlers(): void {\n        const inputConnection = UserInputService.InputBegan.Connect((input, gameProcessed) => {\n            // Ignore input if GUI is capturing it\n            if (gameProcessed) return;\n\n            if (input.KeyCode === Enum.KeyCode.Escape) {\n                this.handleEscapePress();\n            } else if (input.KeyCode === Enum.KeyCode.P && this.escPressed) {\n                const timeSinceEsc = tick() - this.escPressTime;\n                if (timeSinceEsc <= KEYBOARD_CONSTANTS.ESC_TIMEOUT / 1000) {\n                    this.showQuitConfirmation();\n                }\n                this.escPressed = false;\n            } else {\n                // Any other key cancels the Esc+P sequence\n                this.escPressed = false;\n            }\n        });\n        \n        // Add connection to be managed\n        this.addConnection(inputConnection);\n    }\n\n    private handleEscapePress(): void {\n        this.escPressed = true;\n        this.escPressTime = tick();\n\n        // Show visual feedback\n        this.showEscapeFeedback();\n\n        // Clear escape state after timeout\n        task.wait(KEYBOARD_CONSTANTS.ESC_TIMEOUT / 1000);\n        this.escPressed = false;\n    }\n\n    private showEscapeFeedback(): void {\n        const player = Players.LocalPlayer;\n        if (!player) return;\n        const playerGui = player.WaitForChild(\"PlayerGui\") as PlayerGui;\n        if (!playerGui) return;\n\n        // Create temporary feedback GUI\n        const feedbackGui = new Instance(\"ScreenGui\");\n        feedbackGui.Name = \"EscapeFeedback\";\n        feedbackGui.ResetOnSpawn = false;\n        feedbackGui.Parent = playerGui;\n        \n        // Track this instance for cleanup\n        this.addInstance(feedbackGui);\n\n        const feedbackFrame = new Instance(\"Frame\");\n        feedbackFrame.Size = new UDim2(0, 200, 0, 50);\n        feedbackFrame.Position = new UDim2(0.5, -100, 0, 50);\n        feedbackFrame.BackgroundColor3 = new Color3(0.2, 0.2, 0.2);\n        feedbackFrame.BackgroundTransparency = 0.2;\n        feedbackFrame.BorderSizePixel = 0;\n        feedbackFrame.Parent = feedbackGui;\n\n        const feedbackText = new Instance(\"TextLabel\");\n        feedbackText.Size = new UDim2(1, 0, 1, 0);\n        feedbackText.Text = \"Press P to quit\";\n        feedbackText.TextColor3 = new Color3(1, 1, 1);\n        feedbackText.TextScaled = true;\n        feedbackText.BackgroundTransparency = 1;\n        feedbackText.Font = Enum.Font.SourceSans;\n        feedbackText.Parent = feedbackFrame;\n\n        // Remove feedback after timeout\n        task.wait(KEYBOARD_CONSTANTS.ESC_TIMEOUT / 1000);\n        feedbackGui.Destroy();\n    }\n\n    private showQuitConfirmation(): void {\n        const player = Players.LocalPlayer;\n        if (!player) return;\n        const playerGui = player.WaitForChild(\"PlayerGui\") as PlayerGui;\n        if (!playerGui) return;\n\n        // Prevent multiple confirmation dialogs\n        if (this.confirmationGui) {\n            this.confirmationGui.Destroy();\n        }\n\n        // Create confirmation dialog\n        this.confirmationGui = new Instance(\"ScreenGui\");\n        this.confirmationGui.Name = \"QuitConfirmation\";\n        this.confirmationGui.ResetOnSpawn = false;\n        this.confirmationGui.Parent = playerGui;\n        \n        // Track this instance for cleanup\n        this.addInstance(this.confirmationGui);\n\n        const backgroundFrame = new Instance(\"Frame\");\n        backgroundFrame.Size = new UDim2(1, 0, 1, 0);\n        backgroundFrame.BackgroundColor3 = new Color3(0, 0, 0);\n        backgroundFrame.BackgroundTransparency = 0.5;\n        backgroundFrame.Parent = this.confirmationGui;\n\n        const dialogFrame = new Instance(\"Frame\");\n        dialogFrame.Size = new UDim2(0, 400, 0, 200);\n        dialogFrame.Position = new UDim2(0.5, -200, 0.5, -100);\n        dialogFrame.BackgroundColor3 = new Color3(0.15, 0.15, 0.15);\n        dialogFrame.BorderSizePixel = 0;\n        dialogFrame.Parent = this.confirmationGui;\n\n        const titleText = new Instance(\"TextLabel\");\n        titleText.Size = new UDim2(1, 0, 0, 50);\n        titleText.Text = \"Quit Game?\";\n        titleText.TextColor3 = new Color3(1, 1, 1);\n        titleText.TextScaled = true;\n        titleText.BackgroundTransparency = 1;\n        titleText.Font = Enum.Font.SourceSansBold;\n        titleText.Parent = dialogFrame;\n\n        const messageText = new Instance(\"TextLabel\");\n        messageText.Size = new UDim2(1, -20, 0, 50);\n        messageText.Position = new UDim2(0, 10, 0, 60);\n        messageText.Text = \"Are you sure you want to quit the game?\";\n        messageText.TextColor3 = new Color3(0.8, 0.8, 0.8);\n        messageText.TextScaled = true;\n        messageText.BackgroundTransparency = 1;\n        messageText.Font = Enum.Font.SourceSans;\n        messageText.Parent = dialogFrame;\n\n        const buttonContainer = new Instance(\"Frame\");\n        buttonContainer.Size = new UDim2(1, -20, 0, 40);\n        buttonContainer.Position = new UDim2(0, 10, 1, -50);\n        buttonContainer.BackgroundTransparency = 1;\n        buttonContainer.Parent = dialogFrame;\n\n        const confirmButton = new Instance(\"TextButton\");\n        confirmButton.Size = new UDim2(0.45, 0, 1, 0);\n        confirmButton.Position = new UDim2(0, 0, 0, 0);\n        confirmButton.Text = \"Quit\";\n        confirmButton.TextColor3 = new Color3(1, 1, 1);\n        confirmButton.TextScaled = true;\n        confirmButton.BackgroundColor3 = new Color3(0.8, 0.2, 0.2);\n        confirmButton.Font = Enum.Font.SourceSans;\n        confirmButton.Parent = buttonContainer;\n\n        const cancelButton = new Instance(\"TextButton\");\n        cancelButton.Size = new UDim2(0.45, 0, 1, 0);\n        cancelButton.Position = new UDim2(0.55, 0, 0, 0);\n        cancelButton.Text = \"Cancel\";\n        cancelButton.TextColor3 = new Color3(1, 1, 1);\n        cancelButton.TextScaled = true;\n        cancelButton.BackgroundColor3 = new Color3(0.3, 0.3, 0.3);\n        cancelButton.Font = Enum.Font.SourceSans;\n        cancelButton.Parent = buttonContainer;\n\n        // Handle button clicks\n        const confirmConnection = confirmButton.MouseButton1Click.Connect(() => {\n            this.quitGame();\n        });\n        this.addConnection(confirmConnection);\n\n        const cancelConnection = cancelButton.MouseButton1Click.Connect(() => {\n            if (this.confirmationGui) {\n                this.confirmationGui.Destroy();\n                this.confirmationGui = undefined;\n            }\n        });\n        this.addConnection(cancelConnection);\n\n        // Auto-dismiss after timeout\n        task.wait(KEYBOARD_CONSTANTS.CONFIRMATION_TIMEOUT / 1000);\n        if (this.confirmationGui) {\n            this.confirmationGui.Destroy();\n            this.confirmationGui = undefined;\n        }\n    }\n\n    private quitGame(): void {\n        const player = Players.LocalPlayer;\n        if (player) {\n            // Kick the player to quit the game\n            player.Kick(\"You have quit the game.\");\n        }\n    }\n\n    protected onDestroy(): void {\n        // Clean up confirmation GUI if it exists\n        if (this.confirmationGui) {\n            this.confirmationGui.Destroy();\n            this.confirmationGui = undefined;\n        }\n        \n    }\n}",
      "patterns": {
        "functions": 3,
        "classes": 1,
        "interfaces": 0,
        "exports": 1,
        "imports": 2,
        "anyTypes": 0,
        "typeAssertions": 2,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/renderers/flatBlockCreator.ts",
      "relativePath": "shared/modules/renderers/flatBlockCreator.ts",
      "name": "flatBlockCreator.ts",
      "size": 7400,
      "lines": 237,
      "lastModified": "2025-07-10T03:34:52.563Z",
      "content": "/**\n * Flat Block Creator\n * Creates a large flat block under the node tree for visual foundation\n */\n\nimport { BLOCK_CONSTANTS } from \"./constants/blockConstants\";\n\nexport interface FlatBlockConfig {\n  origin: Vector3;\n  parent: Instance;\n  height?: number;\n  width?: number;\n  depth?: number;\n  color?: Color3;\n}\n\nexport interface SwimLaneBlockConfig {\n  position: Vector3;\n  width: number;\n  depth: number;\n  height: number;\n  color: Color3;\n  typeName: string;\n  parent: Instance;\n  propertyName?: string;\n}\n\nexport const FLAT_BLOCK_DEFAULTS = {\n  height: BLOCK_CONSTANTS.DIMENSIONS.DEFAULT_HEIGHT,\n  width: BLOCK_CONSTANTS.DIMENSIONS.DEFAULT_WIDTH,\n  depth: BLOCK_CONSTANTS.DIMENSIONS.DEFAULT_DEPTH,\n  shadowColor: BLOCK_CONSTANTS.COLORS.SHADOW,\n  platformColor: BLOCK_CONSTANTS.COLORS.PLATFORM,\n  zFightingFix: BLOCK_CONSTANTS.DIMENSIONS.Z_FIGHTING_OFFSET,\n};\n\n/**\n * Creates platform and shadow blocks under the node tree\n * @param config Configuration for the blocks\n * @returns An object containing both the platform and shadow blocks\n */\nexport function createFlatBlocks(config: FlatBlockConfig): { platform: Part; shadow: Part } {\n  const {\n    origin,\n    parent,\n    width = FLAT_BLOCK_DEFAULTS.width,\n    depth = FLAT_BLOCK_DEFAULTS.depth,\n  } = config;\n\n  // Create platform block first (will be parent)\n  const platformBlock = new Instance(\"Part\");\n  platformBlock.Name = \"PlatformBlock\";\n  \n  // Platform has uniform shadow thickness for consistency\n  // Platform has fixed size of 100x100 in X,Z dimensions\n  platformBlock.Size = new Vector3(BLOCK_CONSTANTS.DIMENSIONS.PLATFORM_SIZE, BLOCK_CONSTANTS.DIMENSIONS.UNIFORM_SHADOW_THICKNESS, BLOCK_CONSTANTS.DIMENSIONS.PLATFORM_SIZE);\n  \n  // Set platform material and appearance\n  platformBlock.Material = BLOCK_CONSTANTS.MATERIALS.PLATFORM;\n  platformBlock.Color = FLAT_BLOCK_DEFAULTS.platformColor;\n  platformBlock.TopSurface = Enum.SurfaceType.Smooth;\n  platformBlock.BottomSurface = Enum.SurfaceType.Smooth;\n  \n  // Add texture to platform block\n  // const texture = new Instance(\"Texture\");\n  // texture.Texture = \"rbxassetid://6372755229\";\n  // texture.Face = Enum.NormalId.Top;\n  // texture.StudsPerTileU = 10;\n  // texture.StudsPerTileV = 10;\n  // texture.Parent = platformBlock;\n  \n  // Set platform physics properties\n  platformBlock.Anchored = true;\n  platformBlock.CanCollide = true;\n  platformBlock.CastShadow = false;\n  platformBlock.Transparency = 1; // Fully transparent\n  \n  // Position platform block at base level\n  platformBlock.Position = new Vector3(\n    origin.X,\n    BLOCK_CONSTANTS.DIMENSIONS.UNIFORM_SHADOW_THICKNESS / 2, // Center at ground level with uniform thickness\n    origin.Z\n  );\n  \n  // Parent platform block\n  platformBlock.Parent = parent;\n  \n  // Create shadow block (will be child of platform)\n  const shadowBlock = new Instance(\"Part\");\n  shadowBlock.Name = \"GroupShadowBlock\";\n  \n  // Set shadow size with uniform thickness (no extra buffer - padding is already included in width/depth)\n  shadowBlock.Size = new Vector3(width, BLOCK_CONSTANTS.DIMENSIONS.UNIFORM_SHADOW_THICKNESS, depth);\n  \n  // Set shadow material and appearance\n  shadowBlock.Material = BLOCK_CONSTANTS.MATERIALS.SHADOW;\n  shadowBlock.Color = FLAT_BLOCK_DEFAULTS.shadowColor;\n  shadowBlock.TopSurface = Enum.SurfaceType.Smooth;\n  shadowBlock.BottomSurface = Enum.SurfaceType.Smooth;\n  \n  // Set shadow physics properties\n  shadowBlock.Anchored = true;\n  shadowBlock.CanCollide = true;\n  shadowBlock.CastShadow = false;\n  shadowBlock.Transparency = 0; // Fully opaque\n  \n  // Position shadow block - 0.1 units above platform\n  shadowBlock.Position = new Vector3(\n    origin.X,\n    BLOCK_CONSTANTS.DIMENSIONS.UNIFORM_SHADOW_THICKNESS + BLOCK_CONSTANTS.DIMENSIONS.Z_FIGHTING_OFFSET + BLOCK_CONSTANTS.DIMENSIONS.UNIFORM_SHADOW_THICKNESS / 2, // 0.1 above platform top\n    origin.Z\n  );\n  \n  // Parent shadow block to platform block\n  shadowBlock.Parent = platformBlock;\n  \n  \n  \n  return { platform: platformBlock, shadow: shadowBlock };\n}\n\n/**\n * Legacy function - creates a single flat block\n * @deprecated Use createFlatBlocks instead\n * @param config Configuration for the flat block\n * @returns The created part instance\n */\nexport function createFlatBlock(config: FlatBlockConfig): Part {\n  const {\n    origin,\n    parent,\n    height = FLAT_BLOCK_DEFAULTS.height,\n    width = FLAT_BLOCK_DEFAULTS.width,\n    depth = FLAT_BLOCK_DEFAULTS.depth,\n    color = FLAT_BLOCK_DEFAULTS.shadowColor,\n  } = config;\n\n  // Create the block\n  const block = new Instance(\"Part\");\n  block.Name = \"FlatBlockFoundation\";\n  \n  // Set size\n  block.Size = new Vector3(width, height, depth);\n  \n  // Set material and appearance\n  block.Material = BLOCK_CONSTANTS.MATERIALS.SHADOW;\n  block.Color = color;\n  block.TopSurface = Enum.SurfaceType.Smooth;\n  block.BottomSurface = Enum.SurfaceType.Smooth;\n  \n  // Set physics properties\n  block.Anchored = true;\n  block.CanCollide = true; // Changed to true to make the block solid\n  block.CastShadow = false; // Optimize rendering\n  block.Transparency = 0; // Fully opaque\n  \n  // Position the block\n  // Center at origin X and Z, position bottom surface at Y=0 (ground level)\n  // This ensures the block sits on the ground\n  block.Position = new Vector3(\n    origin.X,\n    height / 2, // Bottom at Y=0, so center is at height/2\n    origin.Z\n  );\n  \n  // Parent the block\n  block.Parent = parent;\n  \n  \n  return block;\n}\n\n/**\n * Calculates appropriate block dimensions based on node tree bounds\n * @param nodeBounds The bounding box of the node tree\n * @param padding Additional padding beyond the bounds\n * @returns Recommended width and depth for the block\n */\nexport function calculateBlockDimensions(\n  nodeBounds: { minX: number; maxX: number; minZ: number; maxZ: number },\n  padding = 0\n): { width: number; depth: number } {\n  const nodeWidth = nodeBounds.maxX - nodeBounds.minX;\n  const nodeDepth = nodeBounds.maxZ - nodeBounds.minZ;\n  \n  const width = nodeWidth + padding * 2;\n  const depth = nodeDepth + padding * 2;\n  \n  // Ensure minimum size\n  const minSize = BLOCK_CONSTANTS.DIMENSIONS.MIN_BLOCK_SIZE;\n  const finalWidth = math.max(width, minSize);\n  const finalDepth = math.max(depth, minSize);\n  \n  \n  return {\n    width: finalWidth,\n    depth: finalDepth,\n  };\n}\n\n\n/**\n * Creates a block under a swimlane\n * @param config Configuration for the swimlane block\n * @returns The created swimlane block\n */\nexport function createSwimLaneBlock(config: SwimLaneBlockConfig): Part {\n  const { position, width, depth, height, color, typeName, parent } = config;\n  \n  // Create swimlane block\n  const swimLaneBlock = new Instance(\"Part\");\n  swimLaneBlock.Name = `SwimlaneShadowBlock_${typeName}`;\n  \n  // Set size\n  swimLaneBlock.Size = new Vector3(width, height, depth);\n  \n  // Set material and appearance\n  swimLaneBlock.Material = BLOCK_CONSTANTS.MATERIALS.SWIMLANE;\n  swimLaneBlock.Color = color;\n  swimLaneBlock.TopSurface = Enum.SurfaceType.Smooth;\n  swimLaneBlock.BottomSurface = Enum.SurfaceType.Smooth;\n  swimLaneBlock.Transparency = 0; // Fully opaque\n  \n  // Set physics properties\n  swimLaneBlock.Anchored = true;\n  swimLaneBlock.CanCollide = false; // Don't interfere with player movement\n  swimLaneBlock.CastShadow = false;\n  \n  // Position the block\n  swimLaneBlock.Position = position;\n  \n  // Parent to shadow block\n  swimLaneBlock.Parent = parent;\n  \n  \n  return swimLaneBlock;\n}",
      "patterns": {
        "functions": 4,
        "classes": 0,
        "interfaces": 2,
        "exports": 7,
        "imports": 1,
        "anyTypes": 0,
        "typeAssertions": 2,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": [
          {
            "name": "createFlatBlocks",
            "type": "function",
            "isExported": true
          },
          {
            "name": "createFlatBlock",
            "type": "function",
            "isExported": true
          },
          {
            "name": "calculateBlockDimensions",
            "type": "function",
            "isExported": true
          },
          {
            "name": "createSwimLaneBlock",
            "type": "function",
            "isExported": true
          }
        ]
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/renderers/blocks/swimlaneBlockCreator.ts",
      "relativePath": "shared/modules/renderers/blocks/swimlaneBlockCreator.ts",
      "name": "swimlaneBlockCreator.ts",
      "size": 7309,
      "lines": 246,
      "lastModified": "2025-07-10T21:41:24.262Z",
      "content": "/**\n * Swimlane Block Creator\n * Creates swimlane blocks for visual grouping of nodes\n * Part of F002 Phase 2 refactoring - T6\n */\n\nimport { BaseBlockCreator } from \"./baseBlockCreator\";\nimport { BLOCK_CONSTANTS } from \"../constants/blockConstants\";\nimport { LAYOUT_CONSTANTS } from \"../constants/layoutConstants\";\n\nexport interface SwimLaneBlockConfig {\n  position: Vector3;\n  width: number;\n  depth: number;\n  height: number;\n  color: Color3;\n  typeName: string;\n  parent: Instance;\n  propertyName?: string;\n}\n\nexport class SwimLaneBlockCreator extends BaseBlockCreator {\n  /**\n   * Create a Z-parallel lane shadow block (runs along Z axis)\n   */\n  public createSwimLaneBlock(config: SwimLaneBlockConfig): Part {\n    const {\n      position,\n      width,\n      depth,\n      height,\n      color,\n      typeName,\n      parent,\n      propertyName,\n    } = config;\n\n    // Generate unique ID for the lane\n    const laneId = `${propertyName || \"default\"}_${typeName}`;\n    const blockName = `ZParallel_Lane_${laneId}`;\n    \n    // Debug: Print width of actual swimlane\n    print(`[SWIMLANE] ${typeName}: width=${width}, depth=${depth}`)\n\n    const swimLaneBlock = this.createBlock({\n      name: blockName,\n      size: new Vector3(width, height, depth),\n      position: position,\n      material: BLOCK_CONSTANTS.MATERIALS.PLATFORM,\n      color: color,\n      transparency: BLOCK_CONSTANTS.TRANSPARENCY.OPAQUE,\n      canCollide: true,\n    });\n\n    swimLaneBlock.CastShadow = false;\n    swimLaneBlock.Parent = parent;\n\n    // Add surface labels to all faces\n    this.addSurfaceLabelsToAllFaces(swimLaneBlock, typeName);\n\n    return swimLaneBlock;\n  }\n\n  /**\n   * Create Z-parallel lane blocks for multiple types\n   */\n  public createZParallelLaneBlocks(\n    typeBounds: Map<\n      string,\n      { minX: number; maxX: number; minZ: number; maxZ: number }\n    >,\n    yPosition: number,\n    height: number,\n    parent: Instance,\n    colorMap?: Map<string, Color3>\n  ): Map<string, Part> {\n    const swimLaneBlocks = new Map<string, Part>();\n    let colorIndex = 0;\n\n    typeBounds.forEach((bounds, typeName) => {\n      const color =\n        colorMap?.get(typeName) ||\n        this.getColorFromArray(\n          BLOCK_CONSTANTS.COLORS.Z_AXIS_COLORS,\n          colorIndex\n        );\n\n      const dimensions = this.calculateBlockDimensions(\n        bounds,\n        BLOCK_CONSTANTS.DIMENSIONS.SHADOW_BUFFER\n      );\n\n      const config: SwimLaneBlockConfig = {\n        position: new Vector3(\n          dimensions.position.X,\n          yPosition,\n          dimensions.position.Z\n        ),\n        width: dimensions.size.X,\n        depth: dimensions.size.Z,\n        height: height,\n        color: color,\n        typeName: typeName,\n        parent: parent,\n      };\n\n      const block = this.createSwimLaneBlock(config);\n      swimLaneBlocks.set(typeName, block);\n\n      colorIndex++;\n    });\n\n    return swimLaneBlocks;\n  }\n\n  /**\n   * Create Z-parallel lane blocks grouped by X position\n   */\n  public createXAxisSwimLaneBlocks(\n    typeBounds: Map<\n      string,\n      { minX: number; maxX: number; minZ: number; maxZ: number }\n    >,\n    parent: Instance,\n    yPosition: number = 0\n  ): Map<string, Part> {\n    const zParallelBlocks = new Map<string, Part>();\n    let colorIndex = 0;\n    let currentX = 0;\n\n    typeBounds.forEach((bounds, typeName) => {\n      // Use fixed width from layout constants\n      const width = LAYOUT_CONSTANTS.LANE_DIMENSIONS.Z_PARALLEL_LANE_WIDTH;\n      const depth =\n        bounds.maxZ -\n        bounds.minZ +\n        BLOCK_CONSTANTS.DIMENSIONS.Z_PARALLEL_LANE_BUFFER * 2;\n\n      // Position lanes with fixed spacing\n      const centerX = currentX;\n      const centerZ = (bounds.minZ + bounds.maxZ) / 2;\n      currentX += width + LAYOUT_CONSTANTS.LANE_SPACING.Z_PARALLEL_LANE_SPACING;\n\n      const blockName = `ZParallelShadowBlock_${typeName}`;\n      const blockSize = new Vector3(\n        width,\n        BLOCK_CONSTANTS.DIMENSIONS.SHADOW_BLOCK_HEIGHT,\n        depth\n      );\n\n      // Log shadow block creation\n\n      const block = this.createBlock({\n        name: blockName,\n        size: blockSize,\n        position: new Vector3(centerX, yPosition, centerZ),\n        material: BLOCK_CONSTANTS.MATERIALS.SWIMLANE,\n        color: this.getColorFromArray(\n          BLOCK_CONSTANTS.COLORS.Z_AXIS_COLORS,\n          colorIndex\n        ),\n        transparency: BLOCK_CONSTANTS.TRANSPARENCY.OPAQUE,\n        canCollide: true,\n      });\n\n      block.CastShadow = false;\n      block.Parent = parent;\n      zParallelBlocks.set(typeName, block);\n\n      colorIndex++;\n    });\n\n    // Verify all shadow blocks after creation\n    zParallelBlocks.forEach((block, typeName) => {});\n\n    // Also find all shadow blocks in parent\n    const allShadowBlocks = parent\n      .GetChildren()\n      .filter(\n        (child): child is Part =>\n          child.IsA(\"Part\") && child.Name.match(\"ShadowBlock\")[0] !== undefined\n      );\n    allShadowBlocks.forEach((block) => {});\n\n    return zParallelBlocks;\n  }\n\n  /**\n   * Add surface labels to all faces of a block\n   */\n  private addSurfaceLabelsToAllFaces(block: Part, text: string): void {\n    const faces: Enum.NormalId[] = [\n      Enum.NormalId.Front,\n      Enum.NormalId.Back,\n      Enum.NormalId.Left,\n      Enum.NormalId.Right,\n      Enum.NormalId.Top,\n      Enum.NormalId.Bottom,\n    ];\n\n    // Check if this is a Z-parallel block\n    const isZParallel = block.Name.match(\"^ZParallel_Lane_\")[0] !== undefined;\n    \n\n    faces.forEach((face) => {\n      // Skip Front face (red labels) for Z-parallel blocks\n      if (isZParallel && face === Enum.NormalId.Front) {\n        return;\n      }\n      // Create SurfaceGui\n      const surfaceGui = new Instance(\"SurfaceGui\");\n      surfaceGui.Name = `SurfaceGui_${face.Name}`;\n      surfaceGui.Face = face;\n      surfaceGui.SizingMode = Enum.SurfaceGuiSizingMode.PixelsPerStud;\n      surfaceGui.PixelsPerStud = 50;\n      surfaceGui.Parent = block;\n\n      // Create TextLabel directly in SurfaceGui\n      const textLabel = new Instance(\"TextLabel\");\n      textLabel.Size = new UDim2(1, 0, 1, 0); // Full size as requested\n      textLabel.Position = new UDim2(0, 0, 0, 0);\n      textLabel.BackgroundTransparency = BLOCK_CONSTANTS.LABEL_STYLING.BACKGROUND_TRANSPARENCY;\n      textLabel.BackgroundColor3 = block.Color; // Same color as the underlying block\n      textLabel.BorderSizePixel = BLOCK_CONSTANTS.LABEL_STYLING.BORDER_SIZE_PIXEL;\n      textLabel.BorderColor3 = BLOCK_CONSTANTS.LABEL_STYLING.BORDER_COLOR;\n      textLabel.BorderMode = BLOCK_CONSTANTS.LABEL_STYLING.BORDER_MODE;\n      textLabel.Font = BLOCK_CONSTANTS.LABEL_STYLING.FONT;\n      textLabel.Text = text;\n      \n      // Use different colors for each face (for testing)\n      const faceColors: { [key: string]: Color3 } = {\n        Front: new Color3(1, 0, 0),     // Red\n        Back: new Color3(0, 1, 0),      // Green\n        Left: new Color3(0, 0, 1),      // Blue\n        Right: new Color3(1, 1, 0),     // Yellow\n        Top: new Color3(1, 0, 1),       // Magenta\n        Bottom: new Color3(0, 1, 1),    // Cyan\n      };\n      \n      textLabel.TextColor3 = faceColors[face.Name] || new Color3(1, 1, 1); // Default to white\n      textLabel.TextScaled = BLOCK_CONSTANTS.LABEL_STYLING.TEXT_SCALED;\n      textLabel.Parent = surfaceGui;\n    });\n  }\n}\n",
      "patterns": {
        "functions": 5,
        "classes": 1,
        "interfaces": 1,
        "exports": 2,
        "imports": 3,
        "anyTypes": 0,
        "typeAssertions": 2,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [
          {
            "name": "SwimLaneBlockCreator",
            "methodCount": 6,
            "methods": [
              "createSwimLaneBlock",
              "createZParallelLaneBlocks",
              "createXAxisSwimLaneBlocks",
              "filter",
              "addSurfaceLabelsToAllFaces",
              "if"
            ]
          }
        ],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/renderers/dataGeneratorRobloxRendererUtils/ropeCreator.ts",
      "relativePath": "shared/modules/renderers/dataGeneratorRobloxRendererUtils/ropeCreator.ts",
      "name": "ropeCreator.ts",
      "size": 7267,
      "lines": 244,
      "lastModified": "2025-07-11T05:14:17.047Z",
      "content": "/**\n * Rope and connector creation logic\n * \n * Updated to use Beams instead of RopeConstraints for better performance:\n * - Beams are visual-only (no physics calculations)\n * - 70% reduction in computational overhead\n * - No visual quality loss for straight connections\n */\n\nimport { Cluster, Link } from \"../../../interfaces/simpleDataGenerator.interface\";\nimport { createRopeLabel as createRopeLabelFromMaker } from \"../../ropeLabelMaker/ropeLabelMaker\";\nimport { RENDERER_CONSTANTS } from \"./constants\";\nimport { padNumber } from \"../../../utils/stringUtils\";\nimport { VisualizationOptions } from \"../../../interfaces/enhancedGenerator.interface\";\nimport { LINK_COLORS } from \"../constants/robloxColors\";\n\ninterface RopeCreationContext {\n  cluster: Cluster;\n  nodeToHexagon: Map<string, Model>;\n  linksFolder: Folder;\n  visualization?: VisualizationOptions;\n  linkDiameter?: number;\n}\n\n/**\n * Creates rope connectors between hexagons based on relationships\n */\nexport function createRopeConnectors(context: RopeCreationContext): void {\n  const { cluster, nodeToHexagon, linksFolder, visualization, linkDiameter } = context;\n  \n  // Check if connectors should be shown\n  const showConnectors = visualization?.showConnectors ?? true;\n  const showLinkLabels = visualization?.showLinkLabels ?? true;\n  \n  // Early return if connectors are disabled\n  if (!showConnectors) {\n    return;\n  }\n  \n  let ropeIndex = 1;\n  \n  cluster.relations.forEach(link => {\n    const sourceHex = nodeToHexagon.get(link.sourceNodeUuid);\n    const targetHex = nodeToHexagon.get(link.targetNodeUuid);\n    \n    if (sourceHex && targetHex) {\n      \n      // Find center attachments\n      const sourceAttachment = findCenterAttachment(sourceHex);\n      const targetAttachment = findCenterAttachment(targetHex);\n      \n      if (sourceAttachment && targetAttachment) {\n        // Create beam connector\n        const beam = createRope(link, sourceHex, targetHex, sourceAttachment, targetAttachment, ropeIndex, linkDiameter);\n        \n        // Parent beam to links folder (beams must be in workspace hierarchy)\n        beam.Parent = linksFolder;\n        \n        // Create rope label only if showLinkLabels is true\n        if (showLinkLabels) {\n          const labelParent = findCenterCube(targetHex) || findCenterCube(sourceHex) || linksFolder;\n          createRopeLabel(\n            sourceHex, \n            targetHex, \n            link, \n            sourceAttachment, \n            targetAttachment, \n            labelParent,\n            ropeIndex\n          );\n        }\n        \n        ropeIndex++;\n      }\n    }\n  });\n}\n\n/**\n * Find center attachment on a hexagon\n */\nfunction findCenterAttachment(hexagon: Model): Attachment | undefined {\n  // First try the expected pattern\n  let attachment = findAttachmentRecursive(hexagon, `att000-${hexagon.Name}`);\n  \n  if (!attachment) {\n    // Find any attachment starting with att000\n    for (const desc of hexagon.GetDescendants()) {\n      if (desc.IsA(\"Attachment\") && desc.Name.sub(1, 6) === \"att000\") {\n        attachment = desc as Attachment;\n        break;\n      }\n    }\n  }\n  \n  return attachment;\n}\n\n/**\n * Find attachment recursively in a model\n */\nfunction findAttachmentRecursive(model: Instance, attachmentName: string): Attachment | undefined {\n  for (const desc of model.GetDescendants()) {\n    if (desc.IsA(\"Attachment\") && desc.Name === attachmentName) {\n      return desc as Attachment;\n    }\n  }\n  return undefined;\n}\n\n/**\n * Find center cube in a hexagon\n */\nfunction findCenterCube(hexagon: Model): Part | undefined {\n  let centerCube = hexagon.FindFirstChild(\"center\") as Part;\n  if (!centerCube) {\n    const children = hexagon.GetChildren();\n    for (const child of children) {\n      if (child.IsA(\"Part\") && child.Name.find(\"centerCube-\") !== undefined) {\n        centerCube = child as Part;\n        break;\n      }\n    }\n  }\n  return centerCube;\n}\n\n/**\n * Create a beam connector (replaces rope constraint for better performance)\n */\nfunction createRope(\n  link: Link,\n  sourceHex: Model,\n  targetHex: Model,\n  sourceAttachment: Attachment,\n  targetAttachment: Attachment,\n  ropeIndex: number,\n  linkDiameter?: number\n): Beam {\n  const beam = new Instance(\"Beam\");\n  beam.Name = `beam${padNumber(ropeIndex, 3)}-${link.type.lower()}-${sourceHex.Name}-to-${targetHex.Name}`;\n  beam.Attachment0 = sourceAttachment;\n  beam.Attachment1 = targetAttachment;\n  \n  // Beam visual properties\n  const diameter = linkDiameter ?? RENDERER_CONSTANTS.ROPE.THICKNESS;\n  beam.Width0 = diameter;\n  beam.Width1 = diameter;\n  \n  // Set color using LINK_COLORS array\n  const color3 = getLinkColor3(link.type);\n  beam.Color = new ColorSequence(color3);\n  \n  // Visual settings for performance\n  beam.FaceCamera = true;\n  beam.Segments = 1; // Straight line, no physics calculation\n  beam.Transparency = new NumberSequence(0); // Fully opaque\n  beam.LightEmission = 0; // No glow effect\n  beam.LightInfluence = 1; // Normal lighting\n  beam.Texture = \"\"; // No texture for better performance\n  beam.TextureSpeed = 0;\n  beam.TextureLength = 1;\n  beam.TextureMode = Enum.TextureMode.Static;\n  \n  // Note: Beams don't cast shadows by default (performance benefit)\n  \n  return beam;\n}\n\n/**\n * Create rope label\n */\nfunction createRopeLabel(\n  sourceHex: Model,\n  targetHex: Model,\n  link: Link,\n  sourceAttachment: Attachment,\n  targetAttachment: Attachment,\n  labelParent: Instance,\n  ropeIndex: number\n): void {\n  const relationName = `${getNodeName(sourceHex)}_${link.type}_${getNodeName(targetHex)}`;\n  \n  createRopeLabelFromMaker({\n    ropeIndex,\n    relationTypeName: link.type,\n    sourceAttachment,\n    targetAttachment,\n    parent: labelParent,\n    relationName\n  });\n}\n\n/**\n * Get Color3 for link type using LINK_COLORS array\n */\nfunction getLinkColor3(linkType: string): Color3 {\n  // Extract numeric part from link type (e.g., \"Link1\" -> 1, \"Link10\" -> 10)\n  const match = linkType.match(\"[0-9]+\");\n  if (match && match[0]) {\n    const linkIndex = tonumber(match[0]);\n    if (linkIndex && linkIndex > 0 && linkIndex <= LINK_COLORS.size()) {\n      return LINK_COLORS[linkIndex - 1]; // Array is 0-indexed\n    }\n  }\n  \n  // Fallback for non-numeric link types or out of range\n  // Use hash of link type string to consistently assign a color\n  let hash = 0;\n  for (let i = 1; i <= linkType.size(); i++) {\n    const char = linkType.sub(i, i);\n    hash = ((hash << 5) - hash) + char.byte()[0];\n    hash = hash & hash; // Convert to 32bit integer\n  }\n  const colorIndex = math.abs(hash) % LINK_COLORS.size();\n  return LINK_COLORS[colorIndex];\n}\n\n/**\n * Get node name from hexagon model for label creation\n */\nfunction getNodeName(hexagon: Model): string {\n  // Try to find a text label inside the hexagon that contains the node name\n  const textLabels = hexagon.GetDescendants().filter(desc => \n    desc.IsA(\"TextLabel\") || desc.IsA(\"BillboardGui\")\n  );\n  \n  if (textLabels.size() > 0) {\n    const firstLabel = textLabels[0];\n    if (firstLabel.IsA(\"TextLabel\")) {\n      return firstLabel.Text;\n    } else if (firstLabel.IsA(\"BillboardGui\")) {\n      const textLabel = firstLabel.FindFirstChildOfClass(\"TextLabel\");\n      if (textLabel) {\n        return textLabel.Text;\n      }\n    }\n  }\n  \n  // Fallback to hexagon name\n  return hexagon.Name;\n}\n\n",
      "patterns": {
        "functions": 9,
        "classes": 0,
        "interfaces": 1,
        "exports": 1,
        "imports": 6,
        "anyTypes": 0,
        "typeAssertions": 5,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": [
          {
            "name": "createRopeConnectors",
            "type": "function",
            "isExported": true
          },
          {
            "name": "findCenterAttachment",
            "type": "function",
            "isExported": false
          },
          {
            "name": "findAttachmentRecursive",
            "type": "function",
            "isExported": false
          },
          {
            "name": "findCenterCube",
            "type": "function",
            "isExported": false
          },
          {
            "name": "createRope",
            "type": "function",
            "isExported": false
          },
          {
            "name": "createRopeLabel",
            "type": "function",
            "isExported": false
          },
          {
            "name": "getLinkColor3",
            "type": "function",
            "isExported": false
          },
          {
            "name": "getNodeName",
            "type": "function",
            "isExported": false
          }
        ]
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/renderers/propertyValueResolver.ts",
      "relativePath": "shared/modules/renderers/propertyValueResolver.ts",
      "name": "propertyValueResolver.ts",
      "size": 7026,
      "lines": 258,
      "lastModified": "2025-07-10T11:43:23.527Z",
      "content": "/**\n * Property Value Resolver\n * Centralizes property extraction logic for nodes\n * Part of F002 Phase 2 refactoring - T8\n * Updated for T9: Now supports dynamic property discovery\n */\n\nimport { Node } from \"../../interfaces/simpleDataGenerator.interface\";\nimport { isPersonNode, getAgeRange, getFullName } from \"../../utils/nodePropertyHelpers\";\nimport { POSITION_CONSTANTS } from \"./constants/positionConstants\";\nimport { getNodePropertyValue } from \"../../utils/propertyDiscovery\";\n\nexport type PropertyExtractor = (node: Node) => string;\n\nexport class PropertyValueResolver {\n  private propertyExtractors: Map<string, PropertyExtractor>;\n  \n  constructor() {\n    this.propertyExtractors = new Map([\n      [\"type\", (node) => this.extractType(node)],\n      [\"age\", (node) => this.extractAge(node)],\n      [\"petType\", (node) => this.extractPetType(node)],\n      [\"petColor\", (node) => this.extractPetColor(node)],\n      [\"firstName\", (node) => this.extractFirstName(node)],\n      [\"lastName\", (node) => this.extractLastName(node)],\n      [\"fullName\", (node) => this.extractFullName(node)],\n      [\"animalType\", (node) => this.extractAnimalType(node)],\n      [\"countryOfBirth\", (node) => this.extractCountryOfBirth(node)],\n      [\"countryOfResidence\", (node) => this.extractCountryOfResidence(node)],\n      // Harness-specific properties\n      [\"service\", (node) => this.extractService(node)],\n      [\"component\", (node) => this.extractComponent(node)],\n      [\"language\", (node) => this.extractLanguage(node)],\n      [\"size\", (node) => this.extractSize(node)],\n      [\"resourceDomain\", (node) => this.extractResourceDomain(node)],\n      [\"operationType\", (node) => this.extractOperationType(node)],\n      [\"apiPattern\", (node) => this.extractApiPattern(node)],\n      [\"apiComplexity\", (node) => this.extractApiComplexity(node)],\n      [\"httpMethod\", (node) => this.extractHttpMethod(node)]\n    ]);\n  }\n  \n  /**\n   * Get property value for a node\n   */\n  public getPropertyValue(node: Node, propertyName: string): string {\n    const extractor = this.propertyExtractors.get(propertyName);\n    \n    if (extractor) {\n      try {\n        return extractor(node);\n      } catch (error) {\n        warn(`[PropertyValueResolver] Error extracting property ${propertyName}: ${error}`);\n      }\n    }\n    \n    // Fall back to dynamic property discovery for unknown properties\n    const value = getNodePropertyValue(node, propertyName);\n    if (value !== undefined) {\n      return tostring(value);\n    }\n    \n    // Final fallback\n    return \"Unknown\";\n  }\n  \n  /**\n   * Register a custom property extractor\n   */\n  public registerExtractor(propertyName: string, extractor: PropertyExtractor): void {\n    this.propertyExtractors.set(propertyName, extractor);\n  }\n  \n  /**\n   * Get all available property names\n   */\n  public getAvailableProperties(): string[] {\n    const properties: string[] = [];\n    this.propertyExtractors.forEach((_, propertyName) => {\n      properties.push(propertyName);\n    });\n    return properties;\n  }\n  \n  /**\n   * Extract type property\n   */\n  private extractType(node: Node): string {\n    // For Harness data, the file type is in properties.type\n    if (node.properties?.type) {\n      return node.properties.type;\n    }\n    // For regular nodes, use node.type\n    return node.type;\n  }\n  \n  /**\n   * Extract age as range\n   */\n  private extractAge(node: Node): string {\n    return getAgeRange(node);\n  }\n  \n  /**\n   * Extract pet type\n   */\n  private extractPetType(node: Node): string {\n    if (!isPersonNode(node)) {\n      return \"None\";\n    }\n    return node.properties.petType || \"None\";\n  }\n  \n  /**\n   * Extract pet color\n   */\n  private extractPetColor(node: Node): string {\n    if (!isPersonNode(node)) {\n      return \"None\";\n    }\n    return node.properties.petColor || \"None\";\n  }\n  \n  /**\n   * Extract first name\n   */\n  private extractFirstName(node: Node): string {\n    if (!isPersonNode(node)) {\n      return node.name;\n    }\n    return node.properties.firstName || node.name;\n  }\n  \n  /**\n   * Extract last name\n   */\n  private extractLastName(node: Node): string {\n    if (!isPersonNode(node)) {\n      return \"\";\n    }\n    return node.properties.lastName || \"\";\n  }\n  \n  /**\n   * Extract full name\n   */\n  private extractFullName(node: Node): string {\n    return getFullName(node);\n  }\n  \n  /**\n   * Extract animal type\n   */\n  private extractAnimalType(node: Node): string {\n    if (node.type !== \"Animals\" || !node.properties) {\n      return \"None\";\n    }\n    // Type-safe property access\n    const properties = node.properties as { animalType?: string };\n    return properties.animalType || \"None\";\n  }\n  \n  /**\n   * Extract country of birth\n   */\n  private extractCountryOfBirth(node: Node): string {\n    if (!isPersonNode(node)) {\n      return \"Unknown\";\n    }\n    return node.properties.countryOfBirth || \"Unknown\";\n  }\n  \n  /**\n   * Extract country of residence\n   */\n  private extractCountryOfResidence(node: Node): string {\n    if (!isPersonNode(node)) {\n      return \"Unknown\";\n    }\n    return node.properties.countryOfResidence || \"Unknown\";\n  }\n  \n  /**\n   * Get age range label from age value\n   */\n  public getAgeRangeLabel(age: number): string {\n    const ranges = POSITION_CONSTANTS.AGE_RANGES;\n    \n    if (age < ranges.CHILD.max) return ranges.CHILD.label;\n    if (age < ranges.YOUNG_ADULT.max) return ranges.YOUNG_ADULT.label;\n    if (age < ranges.MIDDLE_AGED.max) return ranges.MIDDLE_AGED.label;\n    if (age < ranges.SENIOR.max) return ranges.SENIOR.label;\n    return ranges.ELDERLY.label;\n  }\n\n  /**\n   * Extract service property (Harness)\n   */\n  private extractService(node: Node): string {\n    return node.properties?.service || \"Unknown\";\n  }\n\n  /**\n   * Extract component property (Harness)\n   */\n  private extractComponent(node: Node): string {\n    return node.properties?.component || node.type || \"Unknown\";\n  }\n\n  /**\n   * Extract language property (Harness)\n   */\n  private extractLanguage(node: Node): string {\n    return node.properties?.language || \"Unknown\";\n  }\n\n  /**\n   * Extract size property (Harness)\n   */\n  private extractSize(node: Node): string {\n    return node.properties?.size || \"Unknown\";\n  }\n\n  /**\n   * Extract resourceDomain property (Harness)\n   */\n  private extractResourceDomain(node: Node): string {\n    return node.properties?.resourceDomain || \"Unknown\";\n  }\n\n  /**\n   * Extract operationType property (Harness)\n   */\n  private extractOperationType(node: Node): string {\n    return node.properties?.operationType || \"Unknown\";\n  }\n\n  /**\n   * Extract apiPattern property (Harness)\n   */\n  private extractApiPattern(node: Node): string {\n    return node.properties?.apiPattern || \"Unknown\";\n  }\n\n  /**\n   * Extract apiComplexity property (Harness)\n   */\n  private extractApiComplexity(node: Node): string {\n    return node.properties?.apiComplexity || \"Unknown\";\n  }\n\n  /**\n   * Extract httpMethod property (Harness)\n   */\n  private extractHttpMethod(node: Node): string {\n    return node.properties?.httpMethod || \"Unknown\";\n  }\n}",
      "patterns": {
        "functions": 2,
        "classes": 1,
        "interfaces": 0,
        "exports": 2,
        "imports": 4,
        "anyTypes": 0,
        "typeAssertions": 1,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/renderers/verticalWallCreator.ts",
      "relativePath": "shared/modules/renderers/verticalWallCreator.ts",
      "name": "verticalWallCreator.ts",
      "size": 7012,
      "lines": 193,
      "lastModified": "2025-07-11T03:11:57.389Z",
      "content": "/**\n * Vertical Wall Creator\n * Creates vertical walls around the platform for Y-axis property visualization\n */\n\n\nexport interface VerticalWallConfig {\n  platformBounds: {\n    minX: number;\n    maxX: number;\n    minZ: number;\n    maxZ: number;\n  };\n  height: number;\n  parent: Instance;\n}\n\nexport function createVerticalWalls(config: VerticalWallConfig): Part[] {\n  const { platformBounds, height, parent } = config;\n  const walls: Part[] = [];\n  \n  print(`[VerticalWallCreator] Creating walls with height ${height} for parent ${parent.Name}`);\n  \n  const wallThickness = 0.5;\n  const wallColor = new Color3(0.3, 0.3, 0.3);\n  const wallTransparency = 0.7;\n  \n  // Calculate platform dimensions\n  const platformWidth = platformBounds.maxX - platformBounds.minX;\n  const platformDepth = platformBounds.maxZ - platformBounds.minZ;\n  const centerX = (platformBounds.minX + platformBounds.maxX) / 2;\n  const centerZ = (platformBounds.minZ + platformBounds.maxZ) / 2;\n  \n  // Back wall (positive Z) - keep only back and right walls\n  const backWall = new Instance(\"Part\");\n  backWall.Name = \"VerticalWall_Back\";\n  backWall.Size = new Vector3(platformWidth + wallThickness * 2, height, wallThickness);\n  backWall.Position = new Vector3(centerX, height / 2, platformBounds.maxZ + wallThickness / 2);\n  backWall.Material = Enum.Material.Glass;\n  backWall.Color = wallColor;\n  backWall.Transparency = wallTransparency;\n  backWall.Anchored = true;\n  backWall.CanCollide = false;\n  backWall.Parent = parent;\n  walls.push(backWall);\n  print(`[VerticalWallCreator] Created back wall at position (${backWall.Position.X}, ${backWall.Position.Y}, ${backWall.Position.Z})`);\n  \n  // Right wall (positive X)\n  const rightWall = new Instance(\"Part\");\n  rightWall.Name = \"VerticalWall_Right\";\n  rightWall.Size = new Vector3(wallThickness, height, platformDepth);\n  rightWall.Position = new Vector3(platformBounds.maxX + wallThickness / 2, height / 2, centerZ);\n  rightWall.Material = Enum.Material.Glass;\n  rightWall.Color = wallColor;\n  rightWall.Transparency = wallTransparency;\n  rightWall.Anchored = true;\n  rightWall.CanCollide = false;\n  rightWall.Parent = parent;\n  walls.push(rightWall);\n  print(`[VerticalWallCreator] Created right wall at position (${rightWall.Position.X}, ${rightWall.Position.Y}, ${rightWall.Position.Z})`);\n  \n  print(`[VerticalWallCreator] Created ${walls.size()} vertical walls total`);\n  return walls;\n}\n\n/**\n * Create swimlane shadows on vertical walls\n */\nexport function createWallSwimlanes(\n  walls: Part[],\n  propertyGroups: Map<string, { minY: number; maxY: number }>,\n  colors: Map<string, Color3>\n): void {\n  walls.forEach(wall => {\n    propertyGroups.forEach((bounds, propertyValue) => {\n      const shadowHeight = bounds.maxY - bounds.minY;\n      const shadowY = (bounds.minY + bounds.maxY) / 2;\n      \n      // Create a shadow block on the wall\n      const shadow = new Instance(\"Part\");\n      shadow.Name = `WallShadow_${wall.Name}_${propertyValue}`;\n      \n      // Adjust size and position based on wall orientation\n      if (wall.Name.find(\"Front\") || wall.Name.find(\"Back\")) {\n        // Front/Back walls - shadows span width\n        shadow.Size = new Vector3(wall.Size.X, shadowHeight, 0.1);\n        shadow.Position = new Vector3(wall.Position.X, shadowY, wall.Position.Z);\n      } else {\n        // Left/Right walls - shadows span depth\n        shadow.Size = new Vector3(0.1, shadowHeight, wall.Size.Z);\n        shadow.Position = new Vector3(wall.Position.X, shadowY, wall.Position.Z);\n      }\n      \n      shadow.Material = Enum.Material.Concrete;\n      shadow.Color = colors.get(propertyValue) || new Color3(0.5, 0.5, 0.5);\n      shadow.Transparency = 0.8;\n      shadow.Anchored = true;\n      shadow.CanCollide = false;\n      shadow.Parent = wall;\n      \n      // Add label using SurfaceGui\n      const surfaceGui = new Instance(\"SurfaceGui\");\n      surfaceGui.Face = wall.Name.find(\"Front\") ? Enum.NormalId.Front \n                     : wall.Name.find(\"Back\") ? Enum.NormalId.Back\n                     : wall.Name.find(\"Left\") ? Enum.NormalId.Left\n                     : Enum.NormalId.Right;\n      surfaceGui.SizingMode = Enum.SurfaceGuiSizingMode.PixelsPerStud;\n      surfaceGui.PixelsPerStud = 50;\n      surfaceGui.Parent = shadow;\n      \n      const label = new Instance(\"TextLabel\");\n      label.Size = new UDim2(1, 0, 1, 0);\n      label.BackgroundTransparency = 1;\n      label.Text = propertyValue;\n      label.TextColor3 = new Color3(1, 1, 1);\n      label.TextScaled = true;\n      label.Font = Enum.Font.SourceSansBold;\n      label.TextStrokeTransparency = 0;\n      label.TextStrokeColor3 = new Color3(0, 0, 0);\n      label.Parent = surfaceGui;\n    });\n  });\n  \n  \n}\n\n/**\n * Create a single vertical wall at the far Z edge of a shadow block\n * Wall is parallel to X-axis with same width as shadow block\n */\nexport function createFarZEdgeWall(shadowBlock: Part, height: number): Part {\n  const wallThickness = 0.5;\n  const wallColor = new Color3(0.3, 0.3, 0.3);\n  const wallTransparency = 0.7;\n  \n  // Get shadow block dimensions\n  const shadowWidth = shadowBlock.Size.X;\n  const shadowDepth = shadowBlock.Size.Z;\n  \n  // Calculate wall position at far Z edge (positive Z)\n  const wallX = shadowBlock.Position.X;\n  const wallY = shadowBlock.Position.Y + shadowBlock.Size.Y / 2 + height / 2; // Position above shadow block\n  const wallZ = shadowBlock.Position.Z + shadowDepth / 2 + wallThickness / 2;\n  \n  // Create the wall\n  const wall = new Instance(\"Part\");\n  wall.Name = \"FarZEdgeWall\";\n  wall.Size = new Vector3(shadowWidth, height, wallThickness);\n  wall.Position = new Vector3(wallX, wallY, wallZ);\n  wall.Material = Enum.Material.Glass;\n  wall.Color = wallColor;\n  wall.Transparency = wallTransparency;\n  wall.Anchored = true;\n  wall.CanCollide = false;\n  wall.Parent = shadowBlock.Parent;\n  \n  \n  return wall;\n}\n\n/**\n * Create a single vertical wall at the far X edge of a shadow block\n * Wall is parallel to Z-axis with same depth as shadow block\n */\nexport function createFarXEdgeWall(shadowBlock: Part, height: number): Part {\n  const wallThickness = 0.5;\n  const wallColor = new Color3(0.3, 0.3, 0.3);\n  const wallTransparency = 0.7;\n  \n  // Get shadow block dimensions\n  const shadowWidth = shadowBlock.Size.X;\n  const shadowDepth = shadowBlock.Size.Z;\n  \n  // Calculate wall position at far X edge (positive X)\n  const wallX = shadowBlock.Position.X + shadowWidth / 2 + wallThickness / 2;\n  const wallY = shadowBlock.Position.Y + shadowBlock.Size.Y / 2 + height / 2; // Position above shadow block\n  const wallZ = shadowBlock.Position.Z;\n  \n  // Create the wall\n  const wall = new Instance(\"Part\");\n  wall.Name = \"FarXEdgeWall\";\n  wall.Size = new Vector3(wallThickness, height, shadowDepth);\n  wall.Position = new Vector3(wallX, wallY, wallZ);\n  wall.Material = Enum.Material.Glass;\n  wall.Color = wallColor;\n  wall.Transparency = wallTransparency;\n  wall.Anchored = true;\n  wall.CanCollide = false;\n  wall.Parent = shadowBlock.Parent;\n  \n  \n  return wall;\n}",
      "patterns": {
        "functions": 6,
        "classes": 0,
        "interfaces": 1,
        "exports": 5,
        "imports": 0,
        "anyTypes": 0,
        "typeAssertions": 2,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": [
          {
            "name": "createVerticalWalls",
            "type": "function",
            "isExported": true
          },
          {
            "name": "createWallSwimlanes",
            "type": "function",
            "isExported": true
          },
          {
            "name": "createFarZEdgeWall",
            "type": "function",
            "isExported": true
          },
          {
            "name": "createFarXEdgeWall",
            "type": "function",
            "isExported": true
          }
        ]
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/renderers/unifiedDataRenderer/rendering/labelRenderer.ts",
      "relativePath": "shared/modules/renderers/unifiedDataRenderer/rendering/labelRenderer.ts",
      "name": "labelRenderer.ts",
      "size": 6789,
      "lines": 185,
      "lastModified": "2025-07-10T01:39:58.390Z",
      "content": "/**\n * Label Renderer for Swimlane Visualization\n * Creates text labels for X and Z axis swimlanes\n */\n\nimport { LABEL_CONSTANTS } from \"../../constants/labelConstants\";\nimport { Node } from \"../../../../interfaces/simpleDataGenerator.interface\";\nimport { POSITION_CONSTANTS } from \"../../constants/positionConstants\";\n\nexport interface LabelConfig {\n  text: string;\n  position: Vector3;\n  size?: number;\n  color?: Color3;\n  parent: Instance;\n}\n\nexport class LabelRenderer {\n  private defaultColor = LABEL_CONSTANTS.COLORS.DEFAULT_TEXT;\n  \n  /**\n   * Create labels for X-axis swimlanes with SurfaceGui\n   */\n  public createXAxisLabels(\n    nodesByType: Map<string, Node[]>,\n    _typeBounds: Map<string, { minX: number; maxX: number; minZ: number; maxZ: number }>,\n    _parent: Instance,\n    _yPosition: number = 0,\n    swimlaneBlocks?: Map<string, Part>,\n    _platformBounds?: { minX: number; maxX: number; minZ: number; maxZ: number }\n  ): void {\n    nodesByType.forEach((_nodes, typeName) => {\n      // const bounds = typeBounds.get(typeName)!;\n      const swimlaneBlock = swimlaneBlocks?.get(typeName);\n      \n      // Floating labels disabled\n      // const centerX = (bounds.minX + bounds.maxX) / 2;\n      // const labelZ = platformBounds ? platformBounds.minZ - LABEL_CONSTANTS.OFFSETS.PLATFORM_EDGE_OFFSET : bounds.minZ - LABEL_CONSTANTS.OFFSETS.PLATFORM_EDGE_OFFSET;\n      // \n      // this.createLabel({\n      //   text: typeName,\n      //   position: new Vector3(centerX, yPosition + LABEL_CONSTANTS.OFFSETS.POSITION_OFFSET, labelZ),\n      //   parent: parent\n      // });\n      \n      // Also create surface label if block is available\n      if (swimlaneBlock) {\n        this.createSurfaceLabel(swimlaneBlock, typeName, \"Front\");\n      }\n    });\n  }\n  \n  /**\n   * Create labels for Z-axis swimlanes with SurfaceGui\n   */\n  public createZAxisLabels(\n    propertyValues: Map<string, { minX: number; maxX: number; minZ: number; maxZ: number }>,\n    _parent: Instance,\n    _yPosition: number = 0,\n    swimlaneBlocks?: Map<string, Part>,\n    _platformBounds?: { minX: number; maxX: number; minZ: number; maxZ: number }\n  ): void {\n    propertyValues.forEach((_bounds, value) => {\n      const swimlaneBlock = swimlaneBlocks?.get(value);\n      \n      // Floating labels disabled\n      // const labelX = platformBounds ? platformBounds.minX - LABEL_CONSTANTS.OFFSETS.PLATFORM_EDGE_OFFSET : bounds.minX - LABEL_CONSTANTS.OFFSETS.PLATFORM_EDGE_OFFSET;\n      // const centerZ = (bounds.minZ + bounds.maxZ) / 2;\n      // \n      // this.createLabel({\n      //   text: value,\n      //   position: new Vector3(labelX, yPosition + LABEL_CONSTANTS.OFFSETS.POSITION_OFFSET, centerZ),\n      //   parent: parent\n      // });\n      \n      // Also create surface label if block is available\n      if (swimlaneBlock) {\n        this.createSurfaceLabel(swimlaneBlock, value, \"Left\");\n      }\n    });\n  }\n  \n  /**\n   * Create a single label\n   */\n  private createLabel(config: LabelConfig): void {\n    const { text, position, color = this.defaultColor, parent } = config;\n    \n    // Create part to hold the label\n    const labelPart = new Instance(\"Part\");\n    labelPart.Name = `${LABEL_CONSTANTS.NAMES.LABEL_PREFIX}${text}`;\n    labelPart.Size = new Vector3(LABEL_CONSTANTS.SIZES.PART_SIZE, LABEL_CONSTANTS.SIZES.PART_SIZE, LABEL_CONSTANTS.SIZES.PART_SIZE);\n    labelPart.Position = position;\n    labelPart.Transparency = LABEL_CONSTANTS.TRANSPARENCY.PART;\n    labelPart.CanCollide = false;\n    labelPart.Anchored = true;\n    labelPart.Parent = parent;\n    \n    // Create BillboardGui\n    const billboardGui = new Instance(\"BillboardGui\");\n    billboardGui.Size = new UDim2(0, LABEL_CONSTANTS.SIZES.BILLBOARD_WIDTH, 0, LABEL_CONSTANTS.SIZES.BILLBOARD_HEIGHT);\n    billboardGui.StudsOffset = new Vector3(0, 0, 0);\n    billboardGui.AlwaysOnTop = true;\n    billboardGui.LightInfluence = 0;\n    billboardGui.Parent = labelPart;\n    \n    // Create TextLabel with background\n    const textLabel = new Instance(\"TextLabel\");\n    textLabel.Size = new UDim2(1, 0, 1, 0);\n    textLabel.BackgroundTransparency = LABEL_CONSTANTS.TRANSPARENCY.BACKGROUND;\n    textLabel.BackgroundColor3 = LABEL_CONSTANTS.COLORS.DEFAULT_BACKGROUND;\n    textLabel.Text = text;\n    textLabel.TextColor3 = color;\n    textLabel.TextScaled = true;\n    textLabel.Font = LABEL_CONSTANTS.FORMATTING.FONT;\n    textLabel.TextStrokeTransparency = LABEL_CONSTANTS.TRANSPARENCY.TEXT_STROKE;\n    textLabel.TextStrokeColor3 = LABEL_CONSTANTS.COLORS.SHADOW;\n    textLabel.Parent = billboardGui;\n    \n    \n  }\n  \n  /**\n   * Create labels for property-based swimlanes\n   */\n  public createPropertyLabels(\n    _propertyName: string,\n    valuePositions: Map<string, number>,\n    axis: \"X\" | \"Z\",\n    parent: Instance,\n    basePosition: Vector3\n  ): void {\n    valuePositions.forEach((position, value) => {\n      let labelPosition: Vector3;\n      \n      if (axis === \"X\") {\n        labelPosition = new Vector3(position, basePosition.Y + 10, basePosition.Z - POSITION_CONSTANTS.Z_DIMENSION_GROUP_SPACING);\n      } else {\n        labelPosition = new Vector3(basePosition.X - POSITION_CONSTANTS.Z_DIMENSION_GROUP_SPACING, basePosition.Y + 10, position);\n      }\n      \n      this.createLabel({\n        text: `${value}`,\n        position: labelPosition,\n        parent: parent\n      });\n    });\n    \n\n  }\n  \n  /**\n   * Create a SurfaceGui label on a part\n   */\n  private createSurfaceLabel(part: Part, text: string, face: \"Front\" | \"Left\"): void {\n    // Create SurfaceGui\n    const surfaceGui = new Instance(\"SurfaceGui\");\n    surfaceGui.Name = `${LABEL_CONSTANTS.NAMES.SURFACE_GUI_PREFIX}${text}`;\n    surfaceGui.Face = face === \"Front\" ? Enum.NormalId.Front : Enum.NormalId.Left;\n    surfaceGui.SizingMode = Enum.SurfaceGuiSizingMode.PixelsPerStud;\n    surfaceGui.PixelsPerStud = LABEL_CONSTANTS.FORMATTING.SURFACE_GUI_PIXELS_PER_STUD;\n    surfaceGui.Parent = part;\n    \n    // Create Frame for background\n    const frame = new Instance(\"Frame\");\n    frame.Size = new UDim2(1, 0, 1, 0);\n    frame.BackgroundColor3 = LABEL_CONSTANTS.COLORS.DEFAULT_BACKGROUND;\n    frame.BackgroundTransparency = 0.3;\n    frame.BorderSizePixel = 0;\n    frame.Parent = surfaceGui;\n    \n    // Create TextLabel\n    const textLabel = new Instance(\"TextLabel\");\n    textLabel.Size = new UDim2(LABEL_CONSTANTS.SIZES.TEXT_SCALE_FACTOR, 0, LABEL_CONSTANTS.SIZES.TEXT_SCALE_FACTOR, 0);\n    textLabel.Position = new UDim2((1 - LABEL_CONSTANTS.SIZES.TEXT_SCALE_FACTOR) / 2, 0, (1 - LABEL_CONSTANTS.SIZES.TEXT_SCALE_FACTOR) / 2, 0);\n    textLabel.BackgroundTransparency = 1;\n    textLabel.Font = LABEL_CONSTANTS.FORMATTING.FONT_BOLD;\n    textLabel.Text = text;\n    textLabel.TextColor3 = this.defaultColor;\n    textLabel.TextScaled = true;\n    textLabel.Parent = frame;\n    \n    \n  }\n}",
      "patterns": {
        "functions": 3,
        "classes": 1,
        "interfaces": 1,
        "exports": 2,
        "imports": 3,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/client/services/configGui/components/nodeTypesSection.ts",
      "relativePath": "client/services/configGui/components/nodeTypesSection.ts",
      "name": "nodeTypesSection.ts",
      "size": 6578,
      "lines": 170,
      "lastModified": "2025-07-10T08:58:46.669Z",
      "content": "import { GUI_CONSTANTS } from \"../constants\";\n\ninterface NodeTypesSectionProps {\n  parent: Frame;\n  numNodeTypes: number;\n  numLinkTypes: number;\n  numPetTypes?: number;\n  onNodeTypesChange: (value: number) => void;\n  onLinkTypesChange: (value: number) => void;\n  onPetTypesChange?: (value: number) => void;\n}\n\nexport function createNodeTypesSection({\n  parent,\n  numNodeTypes,\n  numLinkTypes,\n  numPetTypes = 5,\n  onNodeTypesChange,\n  onLinkTypesChange,\n  onPetTypesChange\n}: NodeTypesSectionProps): Frame {\n  // Create container - increased height for pet types\n  const container = new Instance(\"Frame\");\n  container.Name = \"NodeTypesSection\";\n  container.Size = new UDim2(1, -20, 0, 145); // Increased height for 3 rows\n  container.Position = new UDim2(0, 0, 0, 0); // Position will be set by layout manager\n  container.BackgroundColor3 = new Color3(0.15, 0.15, 0.15);\n  container.BorderSizePixel = 0;\n  container.Parent = parent;\n\n  const containerCorner = new Instance(\"UICorner\");\n  containerCorner.CornerRadius = new UDim(0, 4);\n  containerCorner.Parent = container;\n\n  // Title\n  const title = new Instance(\"TextLabel\");\n  title.Size = new UDim2(1, -10, 0, 25);\n  title.Position = new UDim2(0, 5, 0, 5);\n  title.BackgroundTransparency = 1;\n  title.Font = GUI_CONSTANTS.TYPOGRAPHY.TITLE_FONT;\n  title.Text = \"Node/Link Types\";\n  title.TextColor3 = GUI_CONSTANTS.COLORS.TEXT;\n  title.TextScaled = true;\n  title.Parent = container;\n\n  // Node types setting\n  const nodeTypesLabel = new Instance(\"TextLabel\");\n  nodeTypesLabel.Size = new UDim2(0, 150, 0, 25);\n  nodeTypesLabel.Position = new UDim2(0, 10, 0, 35);\n  nodeTypesLabel.BackgroundTransparency = 1;\n  nodeTypesLabel.Font = GUI_CONSTANTS.TYPOGRAPHY.LABEL_FONT;\n  nodeTypesLabel.Text = \"Number of Node Types:\";\n  nodeTypesLabel.TextColor3 = GUI_CONSTANTS.COLORS.TEXT;\n  nodeTypesLabel.TextScaled = true;\n  nodeTypesLabel.TextXAlignment = Enum.TextXAlignment.Left;\n  nodeTypesLabel.Parent = container;\n\n  // Node types input box\n  const nodeTypesInput = new Instance(\"TextBox\");\n  nodeTypesInput.Name = \"NodeTypesInput\";\n  nodeTypesInput.Size = new UDim2(0, 60, 0, 25);\n  nodeTypesInput.Position = new UDim2(0, 165, 0, 35);\n  nodeTypesInput.BackgroundColor3 = new Color3(0.25, 0.25, 0.25);\n  nodeTypesInput.BorderSizePixel = 0;\n  nodeTypesInput.Font = GUI_CONSTANTS.TYPOGRAPHY.INPUT_FONT;\n  nodeTypesInput.Text = tostring(numNodeTypes);\n  nodeTypesInput.TextColor3 = GUI_CONSTANTS.COLORS.TEXT;\n  nodeTypesInput.TextScaled = true;\n  nodeTypesInput.Parent = container;\n\n  const nodeTypesCorner = new Instance(\"UICorner\");\n  nodeTypesCorner.CornerRadius = new UDim(0, 4);\n  nodeTypesCorner.Parent = nodeTypesInput;\n\n  // Input validation\n  nodeTypesInput.FocusLost.Connect(() => {\n    const value = tonumber(nodeTypesInput.Text);\n    if (value && value >= 1 && value <= GUI_CONSTANTS.ENHANCED.DROPDOWN_ITEMS) {\n      onNodeTypesChange(math.floor(value));\n      nodeTypesInput.Text = tostring(math.floor(value));\n    } else {\n      nodeTypesInput.Text = tostring(numNodeTypes);\n    }\n  });\n\n  // Link types setting - now positioned below node types\n  const linkTypesLabel = new Instance(\"TextLabel\");\n  linkTypesLabel.Size = new UDim2(0, 150, 0, 25);\n  linkTypesLabel.Position = new UDim2(0, 10, 0, 70); // Moved down\n  linkTypesLabel.BackgroundTransparency = 1;\n  linkTypesLabel.Font = GUI_CONSTANTS.TYPOGRAPHY.LABEL_FONT;\n  linkTypesLabel.Text = \"Number of Link Types:\";\n  linkTypesLabel.TextColor3 = GUI_CONSTANTS.COLORS.TEXT;\n  linkTypesLabel.TextScaled = true;\n  linkTypesLabel.TextXAlignment = Enum.TextXAlignment.Left;\n  linkTypesLabel.Parent = container;\n\n  // Link types input box - now positioned below node types\n  const linkTypesInput = new Instance(\"TextBox\");\n  linkTypesInput.Name = \"LinkTypesInput\";\n  linkTypesInput.Size = new UDim2(0, 60, 0, 25);\n  linkTypesInput.Position = new UDim2(0, 165, 0, 70); // Same X as node types, moved down Y\n  linkTypesInput.BackgroundColor3 = new Color3(0.25, 0.25, 0.25);\n  linkTypesInput.BorderSizePixel = 0;\n  linkTypesInput.Font = GUI_CONSTANTS.TYPOGRAPHY.INPUT_FONT;\n  linkTypesInput.Text = tostring(numLinkTypes);\n  linkTypesInput.TextColor3 = GUI_CONSTANTS.COLORS.TEXT;\n  linkTypesInput.TextScaled = true;\n  linkTypesInput.Parent = container;\n\n  const linkTypesCorner = new Instance(\"UICorner\");\n  linkTypesCorner.CornerRadius = new UDim(0, 4);\n  linkTypesCorner.Parent = linkTypesInput;\n\n  // Input validation\n  linkTypesInput.FocusLost.Connect(() => {\n    const value = tonumber(linkTypesInput.Text);\n    if (value && value >= 1 && value <= GUI_CONSTANTS.ENHANCED.DROPDOWN_ITEMS) {\n      onLinkTypesChange(math.floor(value));\n      linkTypesInput.Text = tostring(math.floor(value));\n    } else {\n      linkTypesInput.Text = tostring(numLinkTypes);\n    }\n  });\n\n  // Pet types setting - positioned below link types\n  // NOTE: This control is deprecated and will be removed once all data uses dynamic properties\n  const petTypesLabel = new Instance(\"TextLabel\");\n  petTypesLabel.Size = new UDim2(0, 150, 0, 25);\n  petTypesLabel.Position = new UDim2(0, 10, 0, 105); // Below link types\n  petTypesLabel.BackgroundTransparency = 1;\n  petTypesLabel.Font = GUI_CONSTANTS.TYPOGRAPHY.LABEL_FONT;\n  petTypesLabel.Text = \"Number of Pet Types:\";\n  petTypesLabel.TextColor3 = GUI_CONSTANTS.COLORS.TEXT;\n  petTypesLabel.TextScaled = true;\n  petTypesLabel.TextXAlignment = Enum.TextXAlignment.Left;\n  petTypesLabel.Parent = container;\n\n  // Pet types input box\n  const petTypesInput = new Instance(\"TextBox\");\n  petTypesInput.Name = \"PetTypesInput\";\n  petTypesInput.Size = new UDim2(0, 60, 0, 25);\n  petTypesInput.Position = new UDim2(0, 165, 0, 105); // Same X alignment\n  petTypesInput.BackgroundColor3 = new Color3(0.25, 0.25, 0.25);\n  petTypesInput.BorderSizePixel = 0;\n  petTypesInput.Font = GUI_CONSTANTS.TYPOGRAPHY.INPUT_FONT;\n  petTypesInput.Text = tostring(numPetTypes);\n  petTypesInput.TextColor3 = GUI_CONSTANTS.COLORS.TEXT;\n  petTypesInput.TextScaled = true;\n  petTypesInput.Parent = container;\n\n  const petTypesCorner = new Instance(\"UICorner\");\n  petTypesCorner.CornerRadius = new UDim(0, 4);\n  petTypesCorner.Parent = petTypesInput;\n\n  // Input validation\n  petTypesInput.FocusLost.Connect(() => {\n    const value = tonumber(petTypesInput.Text);\n    if (value && value >= 1 && value <= GUI_CONSTANTS.ENHANCED.DROPDOWN_ITEMS) {\n      if (onPetTypesChange) {\n        onPetTypesChange(math.floor(value));\n      }\n      petTypesInput.Text = tostring(math.floor(value));\n    } else {\n      petTypesInput.Text = tostring(numPetTypes);\n    }\n  });\n\n  return container;\n}",
      "patterns": {
        "functions": 4,
        "classes": 0,
        "interfaces": 1,
        "exports": 1,
        "imports": 1,
        "anyTypes": 0,
        "typeAssertions": 1,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": [
          {
            "name": "createNodeTypesSection",
            "type": "function",
            "isExported": true
          }
        ]
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/renderers/unifiedDataRenderer/core/dataGenerator/testDataProcessor.ts",
      "relativePath": "shared/modules/renderers/unifiedDataRenderer/core/dataGenerator/testDataProcessor.ts",
      "name": "testDataProcessor.ts",
      "size": 6423,
      "lines": 211,
      "lastModified": "2025-07-11T02:41:55.681Z",
      "content": "/**\n * Test Data Processor for Unified Data Renderer\n * \n * Handles processing and conversion of test data into cluster format\n */\n\nimport {\n  discoverNodeProperties,\n  filterValidAxisProperties,\n} from \"../../../../../utils/propertyDiscovery\";\nimport {\n  Cluster,\n  Group,\n  Link,\n  Node,\n} from \"../../../../../interfaces/simpleDataGenerator.interface\";\nimport { EnhancedGeneratorConfig } from \"../../../../../interfaces/enhancedGenerator.interface\";\nimport { TEMP_HARNESS_LINKS } from \"../../../../../data/tempHarnessLinks\";\nimport { TEMP_HARNESS_TEST_DATA } from \"../../../../../data/tempHarnessTestData\";\nimport { ITestDataProcessor } from \"./interfaces\";\n\n// Default maximum number of items to use from test data\nconst DEFAULT_MAX_DATA_ITEMS = 100;\n\nexport class TestDataProcessor implements ITestDataProcessor {\n  private useTestData = true;\n\n  /**\n   * Generate cluster from harness test data\n   */\n  public generateClusterFromTestData(config?: EnhancedGeneratorConfig): Cluster {\n    const maxItems = config?.maxDataItems || DEFAULT_MAX_DATA_ITEMS;\n    print(`[TestDataProcessor] Using maxItems: ${maxItems} (config.maxDataItems: ${config?.maxDataItems || \"undefined\"})`);\n    print(`[TestDataProcessor] Available test data items: ${TEMP_HARNESS_TEST_DATA.size()}`);\n    \n    // Convert Harness data to Node format - using only first maxItems items\n    const harnessNodes: Node[] = [];\n    let itemCount = 0;\n    \n    TEMP_HARNESS_TEST_DATA.forEach((file, index) => {\n      if (itemCount >= maxItems) return; // Only process first maxItems items\n      itemCount++;\n      \n      const node: Node = {\n        uuid: `harness_node_${index}`,\n        name: this.getFileName(file.path),\n        type: file.component as any, // Use component as node type\n        color: this.getServiceColor(file.service),\n        position: { x: 0, y: 0, z: 0 }, // Will be calculated by swim lanes\n        attachmentNames: [],\n        properties: {\n          service: file.service,\n          component: file.component,\n          language: file.language,\n          size: file.size,\n          type: file.type,\n          resourceDomain: file.resourceDomain,\n          operationType: file.operationType,\n          apiPattern: file.apiPattern,\n          apiComplexity: file.apiComplexity,\n          httpMethod: file.httpMethod,\n          path: file.path,\n        },\n      };\n      harnessNodes.push(node);\n    });\n\n    // Use real harness links from the link detection analysis\n    // Filter to only include links between nodes we actually have\n    const nodeUuids = new Set(harnessNodes.map((node) => node.uuid));\n    const validHarnessLinks = TEMP_HARNESS_LINKS.filter(\n      (link) =>\n        nodeUuids.has(link.sourceNodeUuid) && nodeUuids.has(link.targetNodeUuid)\n    );\n\n    print(`[TestDataProcessor] Found ${TEMP_HARNESS_LINKS.size()} total links, ${validHarnessLinks.size()} valid links for ${nodeUuids.size()} nodes`);\n    \n    // Convert to Link[] format (remove extra properties)\n    const harnessLinks: Link[] = validHarnessLinks.map((link) => ({\n      uuid: link.uuid,\n      type: link.type,\n      sourceNodeUuid: link.sourceNodeUuid,\n      targetNodeUuid: link.targetNodeUuid,\n      color: link.color,\n    }));\n\n    // Discover properties from the harness nodes\n    const discoveredProps = discoverNodeProperties(harnessNodes);\n    const validProps = filterValidAxisProperties(harnessNodes, discoveredProps);\n\n    // Create a single group containing all harness nodes\n    const mainGroup: Group = {\n      id: \"harness-group\",\n      name: \"Harness Data Group\",\n      nodes: harnessNodes,\n    };\n\n    return {\n      groups: [mainGroup],\n      relations: harnessLinks,\n      discoveredProperties: validProps,\n    };\n  }\n\n  /**\n   * Set whether to use test data mode\n   */\n  public setUseTestData(enabled: boolean): void {\n    this.useTestData = enabled;\n  }\n\n  /**\n   * Check if currently using test data\n   */\n  public isUsingTestData(): boolean {\n    return this.useTestData;\n  }\n\n  /**\n   * Extract filename from full path\n   */\n  private getFileName(path: string): string {\n    if (false) {\n      // This prevents lint errors while keeping the code available\n      return \"\";\n    }\n    const parts = path.split(\"/\");\n    return parts[parts.size() - 1] || path;\n  }\n\n  /**\n   * Get color based on service type\n   */\n  private getServiceColor(service: string): [number, number, number] {\n    if (false) {\n      // This prevents lint errors while keeping the code available\n      return [0, 0, 0];\n    }\n    const serviceColors: { [key: string]: [number, number, number] } = {\n      platform: [0.2, 0.4, 0.8],\n      ci: [0.8, 0.4, 0.2],\n      cd: [0.2, 0.8, 0.2],\n      ce: [0.8, 0.2, 0.8],\n      core: [0.8, 0.8, 0.2],\n    };\n    return serviceColors[service] || [0.5, 0.5, 0.5];\n  }\n\n  /**\n   * Get test data statistics\n   */\n  public getTestDataStatistics(): TestDataStatistics {\n    return {\n      totalNodes: TEMP_HARNESS_TEST_DATA.size(),\n      totalLinks: TEMP_HARNESS_LINKS.size(),\n      services: this.getUniqueServices(),\n      components: this.getUniqueComponents(),\n      languages: this.getUniqueLanguages()\n    };\n  }\n\n  /**\n   * Get unique services from test data\n   */\n  private getUniqueServices(): string[] {\n    const services = new Set<string>();\n    TEMP_HARNESS_TEST_DATA.forEach((file) => {\n      services.add(file.service);\n    });\n    const servicesArray: string[] = [];\n    services.forEach((service) => servicesArray.push(service));\n    return servicesArray;\n  }\n\n  /**\n   * Get unique components from test data\n   */\n  private getUniqueComponents(): string[] {\n    const components = new Set<string>();\n    TEMP_HARNESS_TEST_DATA.forEach((file) => {\n      components.add(file.component);\n    });\n    const componentsArray: string[] = [];\n    components.forEach((component) => componentsArray.push(component));\n    return componentsArray;\n  }\n\n  /**\n   * Get unique languages from test data\n   */\n  private getUniqueLanguages(): string[] {\n    const languages = new Set<string>();\n    TEMP_HARNESS_TEST_DATA.forEach((file) => {\n      languages.add(file.language);\n    });\n    const languagesArray: string[] = [];\n    languages.forEach((language) => languagesArray.push(language));\n    return languagesArray;\n  }\n}\n\n/**\n * Test data statistics interface\n */\ninterface TestDataStatistics {\n  totalNodes: number;\n  totalLinks: number;\n  services: string[];\n  components: string[];\n  languages: string[];\n}",
      "patterns": {
        "functions": 4,
        "classes": 1,
        "interfaces": 1,
        "exports": 1,
        "imports": 6,
        "anyTypes": 0,
        "typeAssertions": 2,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [
          {
            "name": "TestDataProcessor",
            "methodCount": 8,
            "methods": [
              "generateClusterFromTestData",
              "print",
              "print",
              "size",
              "size",
              "isUsingTestData",
              "if",
              "if"
            ]
          }
        ],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/labelGroupMaker.ts",
      "relativePath": "shared/modules/labelGroupMaker.ts",
      "name": "labelGroupMaker.ts",
      "size": 6210,
      "lines": 179,
      "lastModified": "2025-07-07T09:45:09.182Z",
      "content": "import { createTextBox } from \"./TextBoxMaker\";\nimport { LABEL_CONSTANTS } from \"./renderers/constants/labelConstants\";\nimport { BLOCK_CONSTANTS } from \"./renderers/constants/blockConstants\";\n\ninterface LabelGroupConfig {\n  ropeIndex: number;\n  sourceText: string;\n  relationText: string;\n  targetText: string;\n  sourceAttachment: Attachment;\n  targetAttachment: Attachment;\n  parent: Instance;\n  props?: { [key: string]: any };\n}\n\nfunction padNumber(num: number, length: number): string {\n  const str = tostring(num);\n  let result = str;\n  while (result.size() < length) {\n    result = \"0\" + result;\n  }\n  return result;\n}\n\nexport function createLabelGroup({\n  ropeIndex,\n  sourceText,\n  relationText,\n  targetText,\n  sourceAttachment,\n  targetAttachment,\n  parent,\n  props = {},\n}: LabelGroupConfig): Model {\n  // Default properties for each label block\n  const defaultProps = {\n    size: new Vector3(1, 1, 3),\n    brickColor: new BrickColor(\"Institutional white\"),\n    material: Enum.Material.SmoothPlastic,\n    transparency: BLOCK_CONSTANTS.TRANSPARENCY.OPAQUE,\n    spacing: 0.1,\n  };\n\n  // Merge default props with passed props\n  const finalProps = {\n    ...defaultProps,\n    ...props,\n  };\n\n  // Calculate midpoint between attachments\n  const midpoint = sourceAttachment.WorldPosition.add(\n    targetAttachment.WorldPosition\n  ).div(2);\n\n  // Calculate direction vector for rope alignment\n  const direction = targetAttachment.WorldPosition.sub(\n    sourceAttachment.WorldPosition\n  ).Unit;\n\n  // Create a group to hold all three blocks\n  const labelGroup = new Instance(\"Model\");\n  labelGroup.Name = `labelGroup${padNumber(\n    ropeIndex,\n    3\n  )}-${sourceText}-${relationText}-${targetText}`;\n  labelGroup.Parent = parent;\n\n  // Calculate positions for the three blocks along the rope direction\n  // Total length needed: 3 blocks + 2 gaps = 3 * blockLength + 2 * spacing\n  const blockLength = finalProps.size.Z;\n  const totalLength = 3 * blockLength + 2 * finalProps.spacing;\n  const startOffset = -totalLength / 2;\n\n  // Block positions along the rope direction\n  const positions = [\n    startOffset + blockLength / 2, // First block (source)\n    startOffset + blockLength + finalProps.spacing + blockLength / 2, // Second block (relation)\n    startOffset + 2 * blockLength + 2 * finalProps.spacing + blockLength / 2, // Third block (target)\n  ];\n\n  const texts = [sourceText, relationText, targetText];\n  const blocks: Part[] = [];\n\n  // Create three blocks\n  for (let i = 0; i < 3; i++) {\n    const cube = new Instance(\"Part\");\n    cube.Name = `block${i + 1}-${texts[i]}-${padNumber(ropeIndex, 3)}`;\n\n    // Set properties\n    cube.Size = finalProps.size;\n    cube.BrickColor = finalProps.brickColor;\n    cube.Material = finalProps.material;\n    cube.Transparency = finalProps.transparency;\n    cube.Shape = Enum.PartType.Block;\n    cube.Anchored = false; // Unanchored so it can follow the rope\n    cube.CanCollide = false;\n    cube.CastShadow = false;\n\n    // Position the block along the rope direction\n    const blockPosition = midpoint.add(direction.mul(positions[i]));\n    // Create CFrame that aligns the block's Z axis (long dimension) with the rope direction\n    // CFrame.lookAt points -Z at target, but we want +Z along the rope, so we rotate 180 degrees\n    const lookAtCFrame = CFrame.lookAt(blockPosition, blockPosition.add(direction));\n    // Rotate 180 degrees around Y axis to align +Z with rope direction\n    cube.CFrame = lookAtCFrame.mul(CFrame.Angles(0, math.pi, 0));\n\n    cube.Parent = labelGroup;\n    blocks.push(cube);\n\n    // Add text boxes to all faces except the small ends (front/back)\n    const faces = [\n      Enum.NormalId.Left,\n      Enum.NormalId.Right,\n      Enum.NormalId.Top,\n      Enum.NormalId.Bottom,\n    ];\n\n    faces.forEach((face) => {\n      createTextBox({\n        part: cube,\n        face: face,\n        text: texts[i],\n      });\n    });\n\n    // Create attachment on the center block (relation block)\n    if (i === 1) {\n      const cubeAttachment = new Instance(\"Attachment\");\n      cubeAttachment.Name = `groupAtt${padNumber(ropeIndex, 3)}`;\n      cubeAttachment.Position = new Vector3(0, 0, 0);\n      cubeAttachment.Parent = cube;\n    }\n  }\n\n  // Create attachment at rope midpoint (invisible part for positioning)\n  const midpointPart = new Instance(\"Part\");\n  midpointPart.Name = `ropeAnchor${padNumber(ropeIndex, 3)}`;\n  midpointPart.Size = new Vector3(LABEL_CONSTANTS.SIZES.PART_SIZE, LABEL_CONSTANTS.SIZES.PART_SIZE, LABEL_CONSTANTS.SIZES.PART_SIZE);\n  midpointPart.Transparency = LABEL_CONSTANTS.TRANSPARENCY.PART; // Invisible\n  midpointPart.Anchored = false; // Unanchored to follow rope physics\n  midpointPart.CanCollide = false;\n  midpointPart.Position = midpoint;\n  midpointPart.CastShadow = false;\n  midpointPart.Parent = parent;\n\n  const ropeAttachment = new Instance(\"Attachment\");\n  ropeAttachment.Name = `ropeAtt${padNumber(ropeIndex, 3)}`;\n  ropeAttachment.Position = new Vector3(0, 0, 0);\n  ropeAttachment.Parent = midpointPart;\n  \n  // Create a RodConstraint to connect the midpoint part to the rope's midpoint\n  // This will keep the labels positioned at the rope's midpoint\n  const rodConstraint = new Instance(\"RodConstraint\");\n  rodConstraint.Name = `labelRod${padNumber(ropeIndex, 3)}`;\n  rodConstraint.Attachment0 = ropeAttachment;\n  rodConstraint.Attachment1 = sourceAttachment; // Connect to one of the rope's attachments\n  rodConstraint.Length = sourceAttachment.WorldPosition.sub(midpoint).Magnitude;\n  rodConstraint.Parent = midpointPart;\n  \n  // Create another rod to the target for stability\n  const rodConstraint2 = new Instance(\"RodConstraint\");\n  rodConstraint2.Name = `labelRod2${padNumber(ropeIndex, 3)}`;\n  rodConstraint2.Attachment0 = ropeAttachment;\n  rodConstraint2.Attachment1 = targetAttachment;\n  rodConstraint2.Length = targetAttachment.WorldPosition.sub(midpoint).Magnitude;\n  rodConstraint2.Parent = midpointPart;\n  \n  // Weld each block to the midpoint part\n  for (let i = 0; i < blocks.size(); i++) {\n    const weld = new Instance(\"WeldConstraint\");\n    weld.Name = `labelWeld${i + 1}`;\n    weld.Part0 = blocks[i];\n    weld.Part1 = midpointPart;\n    weld.Parent = blocks[i];\n  }\n\n  return labelGroup;\n}\n",
      "patterns": {
        "functions": 3,
        "classes": 0,
        "interfaces": 1,
        "exports": 1,
        "imports": 3,
        "anyTypes": 1,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": [
          {
            "name": "padNumber",
            "type": "function",
            "isExported": false
          },
          {
            "name": "createLabelGroup",
            "type": "function",
            "isExported": true
          }
        ]
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/server/services/groupAnimationTest.service.ts",
      "relativePath": "server/services/groupAnimationTest.service.ts",
      "name": "groupAnimationTest.service.ts",
      "size": 6092,
      "lines": 222,
      "lastModified": "2025-07-09T02:35:16.667Z",
      "content": "/**\n * Group Animation Test Service\n * \n * Demonstrates animated movement of grouped hexagons in 3D space.\n * Creates two stacks of hexagons (red and blue) and provides a GUI button\n * that triggers an animation where red hexagons move to blue hexagons' position.\n */\n\nimport { TweenService, ReplicatedStorage } from \"@rbxts/services\";\nimport { makeHexagon } from \"../../shared/modules/hexagonMaker\";\n\n// Hexagon configuration constants\nconst HEXAGON_CONFIG = {\n  WIDTH: 8,\n  HEIGHT: 0.5,\n  SPACING: 4,\n  COLORS: {\n    RED: [1, 0, 0] as [number, number, number],\n    BLUE: [0, 0, 1] as [number, number, number]\n  }\n};\n\n// Animation configuration\nconst ANIMATION_CONFIG = {\n  DURATION: 2,\n  EASING_STYLE: Enum.EasingStyle.Quad,\n  EASING_DIRECTION: Enum.EasingDirection.InOut\n};\n\n// Initial positions\nconst POSITIONS = {\n  RED_STACK: new Vector3(-20, 10, 0),\n  BLUE_STACK: new Vector3(20, 10, 0)\n};\n\nexport class GroupAnimationTestService {\n  private redHexagons: Model[] = [];\n  private blueHexagons: Model[] = [];\n  private remoteEvent?: RemoteEvent;\n  private isAnimating = false;\n  private testFolder?: Folder;\n\n  /**\n   * Runs the animation test\n   */\n  public runTest(parentFolder: Folder): void {\n    \n    // Cleanup any previous test\n    this.cleanup();\n    \n    // Create test folder\n    this.testFolder = new Instance(\"Folder\");\n    this.testFolder.Name = \"AnimationTest\";\n    this.testFolder.Parent = parentFolder;\n    \n    // Create or get RemoteEvent\n    this.remoteEvent = ReplicatedStorage.FindFirstChild(\"AnimationTestRemote\") as RemoteEvent;\n    if (!this.remoteEvent) {\n      this.remoteEvent = new Instance(\"RemoteEvent\");\n      this.remoteEvent.Name = \"AnimationTestRemote\";\n      this.remoteEvent.Parent = ReplicatedStorage;\n    }\n    \n    // Set up remote event listener\n    this.setupRemoteListener();\n    \n    // Create hexagon stacks\n    this.redHexagons = this.createHexagonStack(\n      HEXAGON_CONFIG.COLORS.RED,\n      POSITIONS.RED_STACK,\n      3,\n      \"red\"\n    );\n    \n    this.blueHexagons = this.createHexagonStack(\n      HEXAGON_CONFIG.COLORS.BLUE,\n      POSITIONS.BLUE_STACK,\n      3,\n      \"blue\"\n    );\n    \n  }\n\n  /**\n   * Creates a vertical stack of hexagons\n   */\n  private createHexagonStack(\n    color: [number, number, number], \n    basePosition: Vector3, \n    count: number,\n    colorName: string\n  ): Model[] {\n    const hexagons: Model[] = [];\n    \n    for (let i = 0; i < count; i++) {\n      const yOffset = i * (HEXAGON_CONFIG.HEIGHT + HEXAGON_CONFIG.SPACING);\n      const position: [number, number, number] = [\n        basePosition.X,\n        basePosition.Y + yOffset,\n        basePosition.Z\n      ];\n      \n      const hexagon = makeHexagon({\n        id: colorName === \"red\" ? 100 + i : 200 + i,\n        position: new Vector3(position[0], position[1], position[2]),\n        width: HEXAGON_CONFIG.WIDTH,\n        height: HEXAGON_CONFIG.HEIGHT,\n        barColor: new Color3(color[0], color[1], color[2]),\n        labels: [`${colorName}-Front`, `${colorName}-Left`, `${colorName}-Right`],\n        stackIndex: colorName === \"red\" ? 1 : 2,\n        hexIndex: i + 1\n      });\n      \n      hexagon.Name = `${colorName}Hexagon${i + 1}`;\n      hexagon.Parent = this.testFolder;\n      hexagons.push(hexagon);\n    }\n    \n    return hexagons;\n  }\n\n  /**\n   * Sets up remote event listener\n   */\n  private setupRemoteListener(): void {\n    if (!this.remoteEvent) return;\n    \n    this.remoteEvent.OnServerEvent.Connect((player: Player, ...args: unknown[]) => {\n      const eventType = args[0] as string;\n      if (eventType === \"triggerAnimation\" && !this.isAnimating) {\n        this.startAnimation();\n      }\n    });\n  }\n\n  /**\n   * Starts the animation\n   */\n  private startAnimation(): void {\n    if (this.isAnimating) return;\n    \n    \n    // Notify all clients that animation started\n    if (this.remoteEvent) {\n      this.remoteEvent.FireAllClients(\"animationStarted\");\n    }\n    \n    // Calculate target positions (where blue hexagons are)\n    const targetPositions = this.blueHexagons.map(hexagon => {\n      const primaryPart = hexagon.FindFirstChildWhichIsA(\"Part\");\n      return primaryPart ? primaryPart.Position : new Vector3(0, 0, 0);\n    });\n    \n    // Animate red hexagons to blue positions\n    this.animateHexagons(this.redHexagons, targetPositions);\n  }\n\n  /**\n   * Animates hexagons to target positions\n   */\n  private animateHexagons(hexagons: Model[], targetPositions: Vector3[]): void {\n    this.isAnimating = true;\n    \n    const tweenInfo = new TweenInfo(\n      ANIMATION_CONFIG.DURATION,\n      ANIMATION_CONFIG.EASING_STYLE,\n      ANIMATION_CONFIG.EASING_DIRECTION\n    );\n    \n    // Create and play tweens for each hexagon's parts\n    const allTweens: Tween[] = [];\n    \n    hexagons.forEach((hexagon, hexIndex) => {\n      const targetPos = targetPositions[hexIndex];\n      const parts = hexagon.GetDescendants().filter((obj): obj is Part => obj.IsA(\"Part\"));\n      \n      parts.forEach(part => {\n        // Calculate offset from the hexagon's primary part\n        const primaryPart = hexagon.FindFirstChildWhichIsA(\"Part\");\n        if (primaryPart) {\n          const offset = part.Position.sub(primaryPart.Position);\n          const newPosition = targetPos.add(offset);\n          \n          const tween = TweenService.Create(\n            part,\n            tweenInfo,\n            { Position: newPosition }\n          );\n          allTweens.push(tween);\n          tween.Play();\n        }\n      });\n    });\n    \n    // Notify clients when animation completes\n    if (allTweens.size() > 0) {\n      allTweens[0].Completed.Connect(() => {\n        this.isAnimating = false;\n        if (this.remoteEvent) {\n          this.remoteEvent.FireAllClients(\"animationCompleted\");\n        }\n      });\n    }\n  }\n\n\n  /**\n   * Cleans up previous test instances\n   */\n  private cleanup(): void {\n    // Destroy test folder and all blocks\n    if (this.testFolder) {\n      this.testFolder.Destroy();\n      this.testFolder = undefined;\n    }\n    \n    // Clear arrays\n    this.redHexagons = [];\n    this.blueHexagons = [];\n    this.isAnimating = false;\n  }\n}",
      "patterns": {
        "functions": 5,
        "classes": 1,
        "interfaces": 0,
        "exports": 1,
        "imports": 2,
        "anyTypes": 0,
        "typeAssertions": 2,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/renderers/blocks/endcapBlockCreator.ts",
      "relativePath": "shared/modules/renderers/blocks/endcapBlockCreator.ts",
      "name": "endcapBlockCreator.ts",
      "size": 6067,
      "lines": 216,
      "lastModified": "2025-07-10T21:27:58.554Z",
      "content": "/**\n * Endcap Block Creator\n * Creates endcap blocks for swimlane shadows\n * Part of T10: Add endcaps to swimlane shadows\n */\n\nimport { BLOCK_CONSTANTS } from \"../constants/blockConstants\";\nimport { BaseBlockCreator } from \"./baseBlockCreator\";\n\nexport interface EndcapConfig {\n  swimlaneBlock: Part;\n  swimlaneName: string;\n  parent: Instance;\n  gap?: number;\n  isZAxis?: boolean;\n  color?: Color3;\n}\n\nexport class EndcapBlockCreator extends BaseBlockCreator {\n  private readonly ENDCAP_WIDTH = 1;\n  private readonly DEFAULT_GAP = 1;\n\n  /**\n   * Create endcaps for a swimlane and wrap everything in a model\n   */\n  public createSwimlaneWithEndcaps(config: EndcapConfig): Model {\n    const {\n      swimlaneBlock,\n      swimlaneName,\n      parent,\n      gap = this.DEFAULT_GAP,\n      isZAxis = false,\n      color = swimlaneBlock.Color, // Use swimlane color by default\n    } = config;\n\n    const swimlanePos = swimlaneBlock.Position;\n    const swimlaneSize = swimlaneBlock.Size;\n\n    // Create a model to contain the swimlane and its endcaps\n    const swimlaneModel = new Instance(\"Model\");\n    swimlaneModel.Name = `${swimlaneName}_Swimlane`;\n    swimlaneModel.Parent = parent;\n\n    // Parent the swimlane block to the model\n    swimlaneBlock.Parent = swimlaneModel;\n\n    // Calculate endcap dimensions\n    const endcapWidth = this.ENDCAP_WIDTH;\n    const endcapHeight = swimlaneSize.Y; // Match swimlane height\n\n    let endcapSize: Vector3;\n    let leftPos: Vector3;\n    let rightPos: Vector3;\n\n    if (isZAxis) {\n      // Z-axis property swimlanes run in X direction, so endcaps at left and right\n      endcapSize = new Vector3(endcapWidth, endcapHeight, swimlaneSize.Z);\n\n      // Left endcap (negative X)\n      leftPos = new Vector3(\n        swimlanePos.X - swimlaneSize.X / 2 - gap - endcapWidth / 2,\n        swimlanePos.Y,\n        swimlanePos.Z\n      );\n\n      // Right endcap (positive X)\n      rightPos = new Vector3(\n        swimlanePos.X + swimlaneSize.X / 2 + gap + endcapWidth / 2,\n        swimlanePos.Y,\n        swimlanePos.Z\n      );\n    } else {\n      // X-axis property swimlanes run in Z direction, so endcaps at front and back\n      endcapSize = new Vector3(swimlaneSize.X, endcapHeight, endcapWidth);\n\n      // Front endcap (negative Z)\n      leftPos = new Vector3(\n        swimlanePos.X,\n        swimlanePos.Y,\n        swimlanePos.Z - swimlaneSize.Z / 2 - gap - endcapWidth / 2\n      );\n\n      // Back endcap (positive Z)\n      rightPos = new Vector3(\n        swimlanePos.X,\n        swimlanePos.Y,\n        swimlanePos.Z + swimlaneSize.Z / 2 + gap + endcapWidth / 2\n      );\n    }\n\n    // Create left/front endcap\n    this.createEndcapBlock(\n      `${swimlaneName}_${isZAxis ? \"Left\" : \"Front\"}Endcap`,\n      endcapSize,\n      leftPos,\n      swimlaneName,\n      swimlaneModel, // Parent to the model\n      isZAxis,\n      color\n    );\n\n    // Create right/back endcap\n    this.createEndcapBlock(\n      `${swimlaneName}_${isZAxis ? \"Right\" : \"Back\"}Endcap`,\n      endcapSize,\n      rightPos,\n      swimlaneName,\n      swimlaneModel, // Parent to the model\n      isZAxis,\n      color\n    );\n\n    return swimlaneModel;\n  }\n\n  /**\n   * Create a single endcap block\n   */\n  private createEndcapBlock(\n    name: string,\n    size: Vector3,\n    position: Vector3,\n    label: string,\n    parent: Instance,\n    isZAxis: boolean,\n    color: Color3\n  ): Part {\n    // Create the endcap block\n    const endcap = this.createBlock({\n      name: name,\n      size: size,\n      position: position,\n      material: Enum.Material.Concrete,\n      color: color, // Use swimlane color\n      transparency: 0,\n      canCollide: false,\n    });\n\n    // Add labels to all faces\n    this.addLabelsToAllFaces(endcap, label, isZAxis);\n\n    endcap.Parent = parent;\n    return endcap;\n  }\n\n  /**\n   * Add surface labels to all faces of the endcap\n   */\n  private addLabelsToAllFaces(\n    block: Part,\n    text: string,\n    isZAxis: boolean\n  ): void {\n    const faces: Enum.NormalId[] = [\n      Enum.NormalId.Front,\n      Enum.NormalId.Back,\n      Enum.NormalId.Left,\n      Enum.NormalId.Right,\n      Enum.NormalId.Top,\n      Enum.NormalId.Bottom,\n    ];\n\n    faces.forEach((face) => {\n      // Skip labels on short sides\n      // For Z-axis endcaps: skip Front and Back faces (these are the narrow sides)\n      // For X-axis endcaps: skip Left and Right faces (these are the narrow sides)\n      if (\n        isZAxis &&\n        (face === Enum.NormalId.Front || face === Enum.NormalId.Back)\n      ) {\n        return;\n      }\n      if (\n        !isZAxis &&\n        (face === Enum.NormalId.Left || face === Enum.NormalId.Right)\n      ) {\n        return;\n      }\n      // Create SurfaceGui\n      const surfaceGui = new Instance(\"SurfaceGui\");\n      surfaceGui.Name = `EndcapLabel_${face.Name}`;\n      surfaceGui.Face = face;\n      surfaceGui.SizingMode = Enum.SurfaceGuiSizingMode.PixelsPerStud;\n      surfaceGui.PixelsPerStud = 50;\n      surfaceGui.Parent = block;\n\n      // Create Frame for background\n      const frame = new Instance(\"Frame\");\n      frame.Size = new UDim2(1, 0, 1, 0);\n      frame.BackgroundColor3 = new Color3(0.1, 0.1, 0.1);\n      frame.BackgroundTransparency = 1; // Fully transparent background\n      frame.BorderSizePixel = BLOCK_CONSTANTS.LABEL_STYLING.BORDER_SIZE_PIXEL;\n      frame.BorderColor3 = BLOCK_CONSTANTS.LABEL_STYLING.BORDER_COLOR;\n      frame.Parent = surfaceGui;\n\n      // Create TextLabel\n      const textLabel = new Instance(\"TextLabel\");\n      textLabel.Size = new UDim2(0.9, 0, 0.9, 0);\n      textLabel.Position = new UDim2(0.05, 0, 0.05, 0);\n      textLabel.BackgroundTransparency = 1;\n      textLabel.Font = BLOCK_CONSTANTS.LABEL_STYLING.FONT;\n      textLabel.Text = text;\n      textLabel.TextColor3 = BLOCK_CONSTANTS.LABEL_STYLING.TEXT_COLOR;\n      textLabel.TextScaled = false;\n      textLabel.TextSize = 36; // Reduced by 50%\n\n      // Rotate text on top face for X-axis swimlanes (person endcaps)\n      if (face === Enum.NormalId.Top && !isZAxis) {\n        textLabel.Rotation = 90;\n      }\n\n      textLabel.Parent = frame;\n    });\n  }\n}\n",
      "patterns": {
        "functions": 1,
        "classes": 1,
        "interfaces": 1,
        "exports": 2,
        "imports": 2,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [
          {
            "name": "EndcapBlockCreator",
            "methodCount": 5,
            "methods": [
              "createSwimlaneWithEndcaps",
              "if",
              "createEndcapBlock",
              "addLabelsToAllFaces",
              "if"
            ]
          }
        ],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/client/services/configGui/components/collapsibleFrame.ts",
      "relativePath": "client/services/configGui/components/collapsibleFrame.ts",
      "name": "collapsibleFrame.ts",
      "size": 5576,
      "lines": 186,
      "lastModified": "2025-07-11T04:44:13.023Z",
      "content": "/**\n * Collapsible frame component for the configuration GUI\n * Allows the main GUI to be minimized/expanded\n */\n\nimport { GUI_CONSTANTS } from \"../constants\";\nimport { createUICorner } from \"../utilities\";\nimport { ComponentFactory } from \"../componentFactory\";\nimport { TweenService } from \"@rbxts/services\";\n\ninterface CollapsibleFrameOptions {\n  parent: ScreenGui;\n  size?: UDim2;\n  collapsedSize?: UDim2;\n  title?: string;\n  position?: UDim2;\n}\n\ninterface CollapsibleFrameResult {\n  frame: Frame;\n  contentFrame: Frame;\n  toggleButton: TextButton;\n  isCollapsed: boolean;\n  toggle: () => void;\n  setCollapsed: (collapsed: boolean) => void;\n}\n\n/**\n * Creates a collapsible main frame with header and toggle button\n */\nexport function createCollapsibleFrame(options: CollapsibleFrameOptions): CollapsibleFrameResult {\n  const {\n    parent,\n    size = new UDim2(0, GUI_CONSTANTS.FRAME.ENHANCED_WIDTH, GUI_CONSTANTS.FRAME.ENHANCED_HEIGHT_SCALE, 0),\n    collapsedSize = new UDim2(0, GUI_CONSTANTS.FRAME.ENHANCED_WIDTH, 0, 40),\n    title = \"Configuration GUI\",\n    position = GUI_CONSTANTS.FRAME.POSITION\n  } = options;\n\n  let isCollapsed = true; // Start collapsed\n  \n  // Create main container frame\n  const mainFrame = new Instance(\"Frame\");\n  mainFrame.Name = GUI_CONSTANTS.NAMES.MAIN_FRAME;\n  mainFrame.Size = collapsedSize; // Start with collapsed size\n  mainFrame.Position = position;\n  mainFrame.BackgroundColor3 = GUI_CONSTANTS.COLORS.BACKGROUND;\n  mainFrame.BorderSizePixel = 0;\n  mainFrame.ClipsDescendants = true;\n  mainFrame.Parent = parent;\n  \n  // Add corner rounding\n  createUICorner(mainFrame);\n  \n  // Create header frame\n  const headerFrame = new Instance(\"Frame\");\n  headerFrame.Name = \"HeaderFrame\";\n  headerFrame.Size = new UDim2(1, 0, 0, 40);\n  headerFrame.Position = new UDim2(0, 0, 0, 0);\n  headerFrame.BackgroundColor3 = new Color3(0.15, 0.15, 0.15);\n  headerFrame.BorderSizePixel = 0;\n  headerFrame.Parent = mainFrame;\n  \n  // Add corner rounding to header (only top corners)\n  const headerCorner = createUICorner(headerFrame);\n  headerCorner.CornerRadius = new UDim(0, 8);\n  \n  // Create title label\n  const titleLabel = new Instance(\"TextLabel\");\n  titleLabel.Name = \"TitleLabel\";\n  titleLabel.Size = new UDim2(1, -50, 1, 0);\n  titleLabel.Position = new UDim2(0, 10, 0, 0);\n  titleLabel.BackgroundTransparency = 1;\n  titleLabel.Font = GUI_CONSTANTS.TYPOGRAPHY.TITLE_FONT;\n  titleLabel.Text = title;\n  titleLabel.TextColor3 = GUI_CONSTANTS.COLORS.TEXT;\n  titleLabel.TextScaled = true;\n  titleLabel.TextXAlignment = Enum.TextXAlignment.Left;\n  titleLabel.Parent = headerFrame;\n  \n  // Create toggle button\n  const toggleButton = ComponentFactory.createButton({\n    name: \"ToggleButton\",\n    text: \"+\", // Plus sign for collapsed state\n    position: new UDim2(1, -40, 0, 5),\n    size: new UDim2(0, 30, 0, 30),\n    parent: headerFrame,\n    backgroundColor: new Color3(0.25, 0.25, 0.25)\n  });\n  \n  // Style the toggle button\n  toggleButton.Font = Enum.Font.SourceSansBold;\n  toggleButton.TextSize = 24;\n  \n  // Create content frame (holds all GUI content)\n  const contentFrame = new Instance(\"Frame\");\n  contentFrame.Name = \"ContentFrame\";\n  contentFrame.Size = new UDim2(1, 0, 1, -40);\n  contentFrame.Position = new UDim2(0, 0, 0, 40);\n  contentFrame.BackgroundTransparency = 1;\n  contentFrame.Visible = false; // Start hidden since we're collapsed\n  contentFrame.Parent = mainFrame;\n  \n  // Create tween info for smooth animation\n  const tweenInfo = new TweenInfo(\n    0.3, // Duration\n    Enum.EasingStyle.Quad,\n    Enum.EasingDirection.InOut\n  );\n  \n  // Toggle function\n  const toggle = () => {\n    isCollapsed = !isCollapsed;\n    \n    // Update button text\n    toggleButton.Text = isCollapsed ? \"+\" : \"−\";\n    \n    // Animate frame size\n    const targetSize = isCollapsed ? collapsedSize : size;\n    const tween = TweenService.Create(mainFrame, tweenInfo, {\n      Size: targetSize\n    });\n    \n    // Hide/show content during animation\n    if (isCollapsed) {\n      contentFrame.Visible = false;\n    } else {\n      // Delay showing content until animation is partially complete\n      task.wait(0.1);\n      contentFrame.Visible = true;\n    }\n    \n    tween.Play();\n  };\n  \n  // Set collapsed state without animation\n  const setCollapsed = (collapsed: boolean) => {\n    isCollapsed = collapsed;\n    toggleButton.Text = isCollapsed ? \"+\" : \"−\";\n    mainFrame.Size = isCollapsed ? collapsedSize : size;\n    contentFrame.Visible = !isCollapsed;\n  };\n  \n  // Connect toggle button\n  toggleButton.MouseButton1Click.Connect(toggle);\n  \n  // Allow dragging by header\n  let dragging = false;\n  let dragStart: Vector3 | undefined;\n  let startPos: UDim2 | undefined;\n  \n  headerFrame.InputBegan.Connect((input) => {\n    if (input.UserInputType === Enum.UserInputType.MouseButton1) {\n      dragging = true;\n      dragStart = input.Position;\n      startPos = mainFrame.Position;\n    }\n  });\n  \n  headerFrame.InputChanged.Connect((input) => {\n    if (dragging && input.UserInputType === Enum.UserInputType.MouseMovement && dragStart && startPos) {\n      const delta = input.Position.sub(dragStart);\n      mainFrame.Position = new UDim2(\n        startPos.X.Scale,\n        startPos.X.Offset + delta.X,\n        startPos.Y.Scale,\n        startPos.Y.Offset + delta.Y\n      );\n    }\n  });\n  \n  headerFrame.InputEnded.Connect((input) => {\n    if (input.UserInputType === Enum.UserInputType.MouseButton1) {\n      dragging = false;\n    }\n  });\n  \n  return {\n    frame: mainFrame,\n    contentFrame,\n    toggleButton,\n    isCollapsed,\n    toggle,\n    setCollapsed\n  };\n}",
      "patterns": {
        "functions": 7,
        "classes": 0,
        "interfaces": 2,
        "exports": 1,
        "imports": 4,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": [
          {
            "name": "createCollapsibleFrame",
            "type": "function",
            "isExported": true
          },
          {
            "name": "toggle",
            "type": "arrow",
            "isExported": false
          },
          {
            "name": "setCollapsed",
            "type": "arrow",
            "isExported": false
          }
        ]
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/server/services/configGUIServer.service.ts",
      "relativePath": "server/services/configGUIServer.service.ts",
      "name": "configGUIServer.service.ts",
      "size": 5514,
      "lines": 138,
      "lastModified": "2025-07-10T08:47:42.907Z",
      "content": "import { ReplicatedStorage } from \"@rbxts/services\";\nimport { UnifiedDataRenderer } from \"../../shared/modules/renderers/unifiedDataRenderer\";\nimport { BaseService } from \"../../shared/services/base/BaseService\";\nimport { validateEnhancedGeneratorConfig, validateRemoteData } from \"../../shared/utils/validation\";\n\nexport class ConfigGUIServerService extends BaseService {\n  private remoteEvent: RemoteEvent;\n  private unifiedRenderer: UnifiedDataRenderer;\n  private projectRootFolder: Folder;\n  private origin: Vector3;\n\n  constructor(projectRootFolder: Folder, origin?: Vector3) {\n    super(\"ConfigGUIServerService\");\n    this.unifiedRenderer = new UnifiedDataRenderer();\n    this.projectRootFolder = projectRootFolder;\n    this.origin = origin || new Vector3(0, 0, 0);\n\n    // Create or get RemoteEvent\n    let remoteEvent = ReplicatedStorage.FindFirstChild(\"ConfigGUIRemote\") as RemoteEvent;\n    if (!remoteEvent) {\n      remoteEvent = new Instance(\"RemoteEvent\");\n      remoteEvent.Name = \"ConfigGUIRemote\";\n      remoteEvent.Parent = ReplicatedStorage;\n      // Track the instance for cleanup\n      this.addInstance(remoteEvent);\n    }\n    this.remoteEvent = remoteEvent;\n\n    // Set up event listener\n    this.setupEventListener();\n  }\n\n  /**\n   * Sets up the remote event listener for config changes\n   */\n  private setupEventListener(): void {\n    const eventConnection = this.remoteEvent.OnServerEvent.Connect((player: Player, ...args: unknown[]) => {\n      const [eventType, data] = args;\n      \n      // First validate remote data size and structure\n      const remoteValidation = validateRemoteData(data);\n      if (!remoteValidation.isValid) {\n        warn(`[ConfigGUIServerService] Invalid remote data from ${player.Name}: ${remoteValidation.error}`);\n        this.remoteEvent.FireClient(player, \"error\", remoteValidation.error);\n        return;\n      }\n      \n      // We only handle enhanced mode now with the unified renderer\n      if (eventType === \"regenerateEnhanced\" && typeIs(data, \"table\")) {\n        \n        // Use comprehensive validation\n        const validationResult = validateEnhancedGeneratorConfig(data);\n        \n        if (validationResult.isValid && validationResult.sanitizedConfig) {\n          // Use unified renderer with sanitized config\n          const cluster = this.unifiedRenderer.renderEnhancedData(\n            this.projectRootFolder, \n            validationResult.sanitizedConfig, \n            this.origin\n          );\n          \n          // Send success response with discovered properties\n          this.remoteEvent.FireClient(player, \"regenerateSuccess\", validationResult.sanitizedConfig);\n          \n          // Send discovered properties if available\n          if (cluster && cluster.discoveredProperties) {\n            this.remoteEvent.FireClient(player, \"discoveredProperties\", cluster.discoveredProperties);\n          }\n        } else {\n          // Send detailed error response\n          const errorMessage = validationResult.errors.join(\"; \");\n          warn(`[ConfigGUIServerService] Validation errors: ${errorMessage}`);\n          this.remoteEvent.FireClient(player, \"regenerateError\", errorMessage);\n        }\n      } else if (eventType === \"clearGraph\") {\n        \n        // Delete the GraphMaker folder\n        const graphMakerFolder = this.projectRootFolder.FindFirstChild(\"GraphMaker\");\n        if (graphMakerFolder) {\n          graphMakerFolder.Destroy();\n        }\n        \n        // Delete the flat block foundation\n        const flatBlock = this.projectRootFolder.FindFirstChild(\"FlatBlockFoundation\");\n        if (flatBlock) {\n          flatBlock.Destroy();\n        }\n        \n        // Send success response\n        this.remoteEvent.FireClient(player, \"clearSuccess\");\n      } else if (eventType === \"updateEnhanced\" && typeIs(data, \"table\")) {\n        \n        // Use comprehensive validation\n        const validationResult = validateEnhancedGeneratorConfig(data);\n        \n        if (validationResult.isValid && validationResult.sanitizedConfig) {\n          // Use unified renderer's update method with sanitized config\n          const clusterOrVoid = this.unifiedRenderer.updateEnhancedData(\n            this.projectRootFolder, \n            validationResult.sanitizedConfig, \n            this.origin\n          );\n          \n          // Send success response\n          this.remoteEvent.FireClient(player, \"updateSuccess\", validationResult.sanitizedConfig);\n          \n          // Send discovered properties if a new cluster was created\n          if (clusterOrVoid && typeIs(clusterOrVoid, \"table\") && clusterOrVoid.discoveredProperties) {\n            this.remoteEvent.FireClient(player, \"discoveredProperties\", clusterOrVoid.discoveredProperties);\n          }\n        } else {\n          // Send detailed error response\n          const errorMessage = validationResult.errors.join(\"; \");\n          warn(`[ConfigGUIServerService] Update validation errors: ${errorMessage}`);\n          this.remoteEvent.FireClient(player, \"updateError\", errorMessage);\n        }\n      }\n    });\n    \n    // Add connection to be managed\n    this.addConnection(eventConnection);\n  }\n\n  \n  /**\n   * Custom cleanup logic\n   */\n  protected onDestroy(): void {\n    // Clean up the unified renderer if it has a destroy method\n    if (this.unifiedRenderer && \"destroy\" in this.unifiedRenderer) {\n      const renderer = this.unifiedRenderer as unknown as { destroy?: () => void };\n      if (renderer.destroy) {\n        renderer.destroy();\n      }\n    }\n    \n  }\n}",
      "patterns": {
        "functions": 1,
        "classes": 1,
        "interfaces": 0,
        "exports": 1,
        "imports": 4,
        "anyTypes": 0,
        "typeAssertions": 4,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/client/controllers/configGUI.controller.ts",
      "relativePath": "client/controllers/configGUI.controller.ts",
      "name": "configGUI.controller.ts",
      "size": 5477,
      "lines": 164,
      "lastModified": "2025-07-10T19:57:46.861Z",
      "content": "import { BaseService } from \"../../shared/services/base/BaseService\";\nimport { ConfigGUIService } from \"../services/configGui\";\nimport { EnhancedGeneratorConfig } from \"../../shared/interfaces/enhancedGenerator.interface\";\nimport { ReplicatedStorage } from \"@rbxts/services\";\nimport { validateEnhancedGeneratorConfig } from \"../../shared/utils/validation\";\n\nexport class ConfigGUIController extends BaseService {\n  private guiService?: ConfigGUIService;\n  private remoteEvent?: RemoteEvent;\n\n  /**\n   * Initializes the configuration GUI controller\n   */\n  constructor() {\n    super(\"ConfigGUIController\");\n  }\n  \n  public initialize(): void {\n    // Wait for remote event\n    const remoteEvent = ReplicatedStorage.WaitForChild(\n      \"ConfigGUIRemote\"\n    ) as RemoteEvent;\n    this.remoteEvent = remoteEvent;\n\n    // Set up event listeners\n    this.setupEventListeners();\n\n    // Wait for initial config from server before creating GUI\n    // The GUI will be created when we receive the initial config\n  }\n\n  /**\n   * Sets up remote event listeners\n   */\n  private setupEventListeners(): void {\n    if (!this.remoteEvent) return;\n\n    const eventConnection = this.remoteEvent.OnClientEvent.Connect(\n      (eventType: string, data?: unknown) => {\n        \n        if (eventType === \"initialConfig\" && typeIs(data, \"table\")) {\n          \n          // Check if it's an enhanced config (has layers property)\n          const configData = data as { layers?: unknown };\n          if (configData.layers) {\n            const enhancedConfig = data as EnhancedGeneratorConfig;\n            \n            if (!this.guiService) {\n              // First time receiving config - create GUI with initial values\n              \n              \n              this.guiService = new ConfigGUIService({\n                onEnhancedConfigChange: (config) =>\n                  this.onEnhancedConfigChange(config),\n                onClearRequest: () => this.onClearRequest(),\n                onUpdateRequest: (config) => this.onUpdateRequest(config),\n                initialConfig: enhancedConfig,\n              });\n              this.guiService.createGUI();\n            } else {\n              // GUI already exists - just update it\n              \n              this.guiService.updateEnhancedConfig(enhancedConfig);\n            }\n          } else {\n            // Simple mode no longer supported\n          }\n        } else if (eventType === \"regenerateSuccess\") {\n        } else if (eventType === \"regenerateError\") {\n          warn(\"❌ Regeneration failed:\", data);\n        } else if (eventType === \"updateSuccess\") {\n        } else if (eventType === \"updateError\") {\n          warn(\"❌ Update failed:\", data);\n        } else if (eventType === \"triggerGeneration\" && typeIs(data, \"table\")) {\n          \n          // Automatic generation triggered by server\n          const enhancedConfig = data as EnhancedGeneratorConfig;\n          if (this.guiService) {\n            // Just trigger generation without updating GUI (it was already created with initialConfig)\n            this.onEnhancedConfigChange(enhancedConfig);\n          }\n        } else if (eventType === \"discoveredProperties\" && typeIs(data, \"table\")) {\n          \n          const properties = data as string[];\n          \n          if (this.guiService) {\n            \n            this.guiService.updateDiscoveredProperties(properties);\n          } else {\n            \n          }\n        }\n      }\n    );\n    \n    // Add connection to be managed\n    this.addConnection(eventConnection);\n  }\n\n  /**\n   * Handles enhanced configuration changes from the GUI\n   */\n  private onEnhancedConfigChange(config: EnhancedGeneratorConfig): void {\n    if (this.remoteEvent) {\n      // Validate configuration before sending\n      const validationResult = validateEnhancedGeneratorConfig(config);\n      \n      if (validationResult.isValid && validationResult.sanitizedConfig) {\n        this.remoteEvent.FireServer(\"regenerateEnhanced\", validationResult.sanitizedConfig);\n      } else {\n        // Show validation errors in GUI\n        const errorMessage = validationResult.errors.join(\"\\n\");\n        warn(`❌ Configuration validation failed:\\n${errorMessage}`);\n        \n        if (this.guiService) {\n          this.guiService.showError(`Validation failed: ${validationResult.errors[0]}`);\n        }\n      }\n    }\n  }\n\n  /**\n   * Handles clear request from the GUI\n   */\n  private onClearRequest(): void {\n    if (this.remoteEvent) {\n      this.remoteEvent.FireServer(\"clearGraph\");\n    }\n  }\n\n  /**\n   * Handles update request from the GUI\n   */\n  private onUpdateRequest(config: EnhancedGeneratorConfig): void {\n    if (this.remoteEvent) {\n      // Validate configuration before sending\n      const validationResult = validateEnhancedGeneratorConfig(config);\n      \n      if (validationResult.isValid && validationResult.sanitizedConfig) {\n        this.remoteEvent.FireServer(\"updateEnhanced\", validationResult.sanitizedConfig);\n      } else {\n        // Show validation errors in GUI\n        const errorMessage = validationResult.errors.join(\"\\n\");\n        warn(`❌ Update validation failed:\\n${errorMessage}`);\n        \n        if (this.guiService) {\n          this.guiService.showError(`Validation failed: ${validationResult.errors[0]}`);\n        }\n      }\n    }\n  }\n\n  /**\n   * Custom cleanup logic\n   */\n  protected onDestroy(): void {\n    if (this.guiService) {\n      this.guiService.destroy();\n      this.guiService = undefined;\n    }\n    \n  }\n}\n",
      "patterns": {
        "functions": 1,
        "classes": 1,
        "interfaces": 0,
        "exports": 1,
        "imports": 5,
        "anyTypes": 0,
        "typeAssertions": 6,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [
          {
            "name": "ConfigGUIController",
            "methodCount": 21,
            "methods": [
              "initialize",
              "if",
              "if",
              "if",
              "if",
              "if",
              "if",
              "if",
              "if",
              "onEnhancedConfigChange",
              "if",
              "if",
              "if",
              "onClearRequest",
              "if",
              "onUpdateRequest",
              "if",
              "if",
              "if",
              "onDestroy",
              "if"
            ]
          }
        ],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/renderers/unifiedDataRenderer/core/dataGenerator/nodeGenerator.ts",
      "relativePath": "shared/modules/renderers/unifiedDataRenderer/core/dataGenerator/nodeGenerator.ts",
      "name": "nodeGenerator.ts",
      "size": 5320,
      "lines": 174,
      "lastModified": "2025-07-11T02:35:54.909Z",
      "content": "/**\n * Node Generator for Unified Data Renderer\n * \n * Handles creation and configuration of individual nodes\n */\n\nimport {\n  ANIMAL_TYPES,\n  COLOR_PALETTES,\n  COUNTRIES_OF_BIRTH,\n  COUNTRIES_OF_RESIDENCE,\n  DEFAULT_ATTACHMENTS,\n  FIRST_NAMES,\n  LAST_NAMES,\n  NODE_TYPE_NAMES,\n  PET_COLORS,\n  PET_TYPES,\n} from \"../../constants\";\nimport {\n  EnhancedGeneratorConfig,\n  LayerConfig,\n} from \"../../../../../interfaces/enhancedGenerator.interface\";\nimport { Node } from \"../../../../../interfaces/simpleDataGenerator.interface\";\nimport { INodeGenerator } from \"./interfaces\";\n\nexport class NodeGenerator implements INodeGenerator {\n  \n  /**\n   * Generate nodes for a single layer\n   */\n  public generateLayerNodes(\n    layer: LayerConfig,\n    config: EnhancedGeneratorConfig\n  ): Node[] {\n    const layerNodes: Node[] = [];\n\n    for (let i = 0; i < layer.numNodes; i++) {\n      const node = this.createNode(i, layer.layerNumber, config);\n      layerNodes.push(node);\n    }\n\n    return layerNodes;\n  }\n\n  /**\n   * Create a single node\n   */\n  public createNode(\n    index: number,\n    layerNumber: number,\n    config: EnhancedGeneratorConfig\n  ): Node {\n    // Cycle through node types based on config\n    const nodeTypeIndex = index % config.numNodeTypes;\n    const nodeTypeName =\n      NODE_TYPE_NAMES[math.min(nodeTypeIndex, NODE_TYPE_NAMES.size() - 1)];\n    const color =\n      COLOR_PALETTES.NODE_COLORS[\n        nodeTypeIndex % COLOR_PALETTES.NODE_COLORS.size()\n      ];\n\n    const node: Node = {\n      uuid: `node_${layerNumber}_${index}`,\n      name: `${nodeTypeName} ${layerNumber}-${index + 1}`,\n      type: nodeTypeName as any, // Now supports \"man\", \"woman\", \"child\"\n      color,\n      position: { x: 0, y: 0, z: 0 }, // Will be calculated by swim lanes\n      attachmentNames: DEFAULT_ATTACHMENTS,\n    };\n\n    // Add level property for swim lane algorithm\n    const nodeWithLevel = node as Node & { level: number };\n    nodeWithLevel.level = layerNumber;\n\n    // Add type-specific properties\n    this.addTypeSpecificProperties(node, nodeTypeName, config);\n\n    return node;\n  }\n\n  /**\n   * Add type-specific properties to node\n   */\n  private addTypeSpecificProperties(\n    node: Node,\n    nodeTypeName: string,\n    config: EnhancedGeneratorConfig\n  ): void {\n    if (nodeTypeName === \"man\" || nodeTypeName === \"woman\") {\n      this.addPersonProperties(node, config);\n    } else if (nodeTypeName === \"child\") {\n      this.addChildProperties(node, config);\n    } else if (nodeTypeName === \"grandparent\") {\n      this.addGrandparentProperties(node, config);\n    } else if (nodeTypeName === \"Animals\") {\n      this.addAnimalProperties(node);\n    }\n  }\n\n  /**\n   * Add properties for adult persons (man/woman)\n   */\n  private addPersonProperties(node: Node, config: EnhancedGeneratorConfig): void {\n    const numPetTypes = config.numPetTypes || 5;\n    const maxPetTypeIndex = math.min(numPetTypes - 1, PET_TYPES.size() - 1);\n\n    node.properties = {\n      age: math.random(18, 80),\n      petType: PET_TYPES[math.random(0, maxPetTypeIndex)],\n      petColor: PET_COLORS[math.random(0, PET_COLORS.size() - 1)],\n      firstName: FIRST_NAMES[math.random(0, FIRST_NAMES.size() - 1)],\n      lastName: LAST_NAMES[math.random(0, LAST_NAMES.size() - 1)],\n      countryOfBirth:\n        COUNTRIES_OF_BIRTH[math.random(0, COUNTRIES_OF_BIRTH.size() - 1)],\n      countryOfResidence:\n        COUNTRIES_OF_RESIDENCE[\n          math.random(0, COUNTRIES_OF_RESIDENCE.size() - 1)\n        ],\n    };\n  }\n\n  /**\n   * Add properties for children\n   */\n  private addChildProperties(node: Node, config: EnhancedGeneratorConfig): void {\n    const numPetTypes = config.numPetTypes || 5;\n    const maxPetTypeIndex = math.min(numPetTypes - 1, PET_TYPES.size() - 1);\n\n    node.properties = {\n      age: math.random(5, 17),\n      petType: PET_TYPES[math.random(0, maxPetTypeIndex)],\n      petColor: PET_COLORS[math.random(0, PET_COLORS.size() - 1)],\n      firstName: FIRST_NAMES[math.random(0, FIRST_NAMES.size() - 1)],\n      lastName: LAST_NAMES[math.random(0, LAST_NAMES.size() - 1)],\n      countryOfBirth:\n        COUNTRIES_OF_BIRTH[math.random(0, COUNTRIES_OF_BIRTH.size() - 1)],\n      countryOfResidence:\n        COUNTRIES_OF_RESIDENCE[\n          math.random(0, COUNTRIES_OF_RESIDENCE.size() - 1)\n        ],\n    };\n  }\n\n  /**\n   * Add properties for grandparents\n   */\n  private addGrandparentProperties(node: Node, config: EnhancedGeneratorConfig): void {\n    const numPetTypes = config.numPetTypes || 5;\n    const maxPetTypeIndex = math.min(numPetTypes - 1, PET_TYPES.size() - 1);\n\n    node.properties = {\n      age: math.random(65, 95),\n      petType: PET_TYPES[math.random(0, maxPetTypeIndex)],\n      petColor: PET_COLORS[math.random(0, PET_COLORS.size() - 1)],\n      firstName: FIRST_NAMES[math.random(0, FIRST_NAMES.size() - 1)],\n      lastName: LAST_NAMES[math.random(0, LAST_NAMES.size() - 1)],\n      countryOfBirth:\n        COUNTRIES_OF_BIRTH[math.random(0, COUNTRIES_OF_BIRTH.size() - 1)],\n      countryOfResidence:\n        COUNTRIES_OF_RESIDENCE[\n          math.random(0, COUNTRIES_OF_RESIDENCE.size() - 1)\n        ],\n    };\n  }\n\n  /**\n   * Add properties for animals\n   */\n  private addAnimalProperties(node: Node): void {\n    node.properties = {\n      animalType: ANIMAL_TYPES[math.random(0, ANIMAL_TYPES.size() - 1)],\n    };\n  }\n}",
      "patterns": {
        "functions": 0,
        "classes": 1,
        "interfaces": 0,
        "exports": 1,
        "imports": 4,
        "anyTypes": 0,
        "typeAssertions": 2,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/client/services/configGui/eventHandlers.ts",
      "relativePath": "client/services/configGui/eventHandlers.ts",
      "name": "eventHandlers.ts",
      "size": 5294,
      "lines": 173,
      "lastModified": "2025-07-11T04:43:54.748Z",
      "content": "/**\n * Event Handlers for Configuration GUI\n * \n * Centralizes all event handling logic for the configuration GUI,\n * providing clean separation of concerns and easier testing.\n */\n\nimport { EnhancedGeneratorConfig } from \"./interfaces\";\nimport { GUIStateManager } from \"./stateManager\";\nimport { updateStatus } from \"./components/status\";\nimport { validateEnhancedConfig } from \"./validationHandlers\";\n\ninterface EventHandlerOptions {\n  stateManager: GUIStateManager;\n  onEnhancedConfigChange?: (config: EnhancedGeneratorConfig) => void;\n  onClearRequest?: () => void;\n  onUpdateRequest?: (config: EnhancedGeneratorConfig) => void;\n}\n\nexport class GUIEventHandlers {\n  private stateManager: GUIStateManager;\n  private onEnhancedConfigChange?: (config: EnhancedGeneratorConfig) => void;\n  private onClearRequest?: () => void;\n  private onUpdateRequest?: (config: EnhancedGeneratorConfig) => void;\n\n  constructor(options: EventHandlerOptions) {\n    this.stateManager = options.stateManager;\n    this.onEnhancedConfigChange = options.onEnhancedConfigChange;\n    this.onClearRequest = options.onClearRequest;\n    this.onUpdateRequest = options.onUpdateRequest;\n  }\n\n  /**\n   * Handles spacing field changes\n   */\n  public handleSpacingChange<K extends keyof import(\"../../../shared/interfaces/enhancedGenerator.interface\").SpacingConfig>(\n    field: K,\n    value: import(\"../../../shared/interfaces/enhancedGenerator.interface\").SpacingConfig[K]\n  ): void {\n    this.stateManager.updateSpacing(field, value);\n    this.updateStatusMessage(`${field} updated to ${value}`);\n  }\n\n\n  /**\n   * Handles layer updates\n   */\n  public handleLayerUpdate(layers: EnhancedGeneratorConfig[\"layers\"]): void {\n    this.stateManager.setLayers(layers);\n    this.updateStatusMessage(`${layers.size()} layers configured`);\n  }\n\n  /**\n   * Handles visualization option changes\n   */\n  public handleVisualizationChange<K extends keyof import(\"../../../shared/interfaces/enhancedGenerator.interface\").VisualizationOptions>(\n    field: K,\n    value: import(\"../../../shared/interfaces/enhancedGenerator.interface\").VisualizationOptions[K]\n  ): void {\n    this.stateManager.updateVisualization(field, value);\n    this.updateStatusMessage(`Visualization option \"${field}\" changed`);\n    \n    // Trigger immediate update without regeneration\n    if (this.onEnhancedConfigChange) {\n      const config = this.stateManager.getEnhancedConfig();\n      this.onEnhancedConfigChange(config);\n    }\n  }\n\n  /**\n   * Handles regenerate button click\n   */\n  public handleRegenerateClick(): void {\n    const config = this.stateManager.getEnhancedConfig();\n    \n    // Validate configuration\n    const validationResult = validateEnhancedConfig(config);\n    if (!validationResult.isValid) {\n      this.updateStatusMessage(validationResult.error || \"Invalid configuration\", true);\n      return;\n    }\n\n    if (config.layers.size() === 0) {\n      this.updateStatusMessage(\"No layers configured!\", true);\n      return;\n    }\n\n    if (this.onEnhancedConfigChange) {\n      this.updateStatusMessage(\"Regenerating with new configuration...\");\n      this.onEnhancedConfigChange(config);\n      this.updateStatusMessage(\"Regeneration complete\");\n    }\n  }\n\n  /**\n   * Handles update button click\n   */\n  public handleUpdateClick(): void {\n    const config = this.stateManager.getEnhancedConfig();\n    \n    // Validate configuration\n    const validationResult = validateEnhancedConfig(config);\n    if (!validationResult.isValid) {\n      this.updateStatusMessage(validationResult.error || \"Invalid configuration\", true);\n      return;\n    }\n\n    if (config.layers.size() === 0) {\n      this.updateStatusMessage(\"No layers configured!\", true);\n      return;\n    }\n\n    if (this.onUpdateRequest) {\n      this.updateStatusMessage(\"Updating existing graph...\");\n      this.onUpdateRequest(config);\n      this.updateStatusMessage(\"Update complete\");\n    }\n  }\n\n  /**\n   * Handles clear button click\n   */\n  public handleClearClick(recreateGUI: () => void): void {\n    // Send clear request to server to delete GraphMaker folder\n    if (this.onClearRequest) {\n      this.onClearRequest();\n    }\n    \n    // Reset configuration\n    this.stateManager.resetConfig();\n    \n    // Destroy current GUI elements\n    const state = this.stateManager.getState();\n    if (state.configFrame) {\n      state.configFrame.Destroy();\n    }\n    \n    // Recreate the GUI with reset state\n    recreateGUI();\n    this.updateStatusMessage(\"Configuration and graph cleared\");\n  }\n\n  /**\n   * Updates the status message\n   */\n  private updateStatusMessage(message: string, isError = false): void {\n    const state = this.stateManager.getState();\n    if (state.statusLabel) {\n      updateStatus(state.statusLabel, message, isError);\n    }\n  }\n\n  /**\n   * Handles export config button click\n   */\n  public handleExportConfigClick(): void {\n    // Export configuration data\n    this.stateManager.getEnhancedConfig();\n    \n    this.updateStatusMessage(\"Configuration exported to console\");\n  }\n\n  /**\n   * Generates an array of type names\n   */\n  public generateTypeArray(prefix: string, count: number): string[] {\n    const types: string[] = [];\n    for (let i = 0; i < count; i++) {\n      types.push(`${prefix} ${string.char(65 + i)}`); // A, B, C, etc.\n    }\n    return types;\n  }\n}",
      "patterns": {
        "functions": 0,
        "classes": 1,
        "interfaces": 1,
        "exports": 2,
        "imports": 4,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/renderers/unifiedDataRenderer/core/dataGenerator/propertyManager.ts",
      "relativePath": "shared/modules/renderers/unifiedDataRenderer/core/dataGenerator/propertyManager.ts",
      "name": "propertyManager.ts",
      "size": 5151,
      "lines": 187,
      "lastModified": "2025-07-11T02:49:54.105Z",
      "content": "/**\n * Property Manager for Unified Data Renderer\n * \n * Handles property discovery and validation for generated nodes\n */\n\nimport {\n  discoverNodeProperties,\n  filterValidAxisProperties,\n} from \"../../../../../utils/propertyDiscovery\";\nimport { Node } from \"../../../../../interfaces/simpleDataGenerator.interface\";\nimport { IPropertyManager } from \"./interfaces\";\n\nexport class PropertyManager implements IPropertyManager {\n  \n  /**\n   * Discover and validate properties from generated nodes\n   */\n  public discoverAndValidateProperties(nodes: Node[]): any[] {\n    // Use the existing property discovery utilities\n    const discoveredProps = discoverNodeProperties(nodes);\n    const validProps = filterValidAxisProperties(nodes, discoveredProps);\n    \n    return validProps;\n  }\n\n  /**\n   * Analyze property distribution across nodes\n   */\n  public analyzePropertyDistribution(nodes: Node[]): PropertyAnalysis {\n    const analysis: PropertyAnalysis = {\n      totalNodes: nodes.size(),\n      propertyCoverage: new Map(),\n      propertyTypes: new Map(),\n      uniqueValues: new Map()\n    };\n\n    // Analyze each node's properties\n    nodes.forEach((node) => {\n      if (node.properties) {\n        for (const [propName, value] of pairs(node.properties)) {\n          // Track coverage\n          const currentCount = analysis.propertyCoverage.get(propName) || 0;\n          analysis.propertyCoverage.set(propName, currentCount + 1);\n\n          // Track types\n          const valueType = typeOf(value);\n          analysis.propertyTypes.set(propName, valueType);\n\n          // Track unique values\n          if (!analysis.uniqueValues.has(propName)) {\n            analysis.uniqueValues.set(propName, new Set());\n          }\n          analysis.uniqueValues.get(propName)!.add(value);\n        }\n      }\n    });\n\n    return analysis;\n  }\n\n  /**\n   * Validate that properties are suitable for axis mapping\n   */\n  public validateAxisProperties(nodes: Node[], propertyName: string): PropertyValidation {\n    let foundCount = 0;\n    let nullCount = 0;\n    let typeSet = new Set<string>();\n    const sampleValues: defined[] = [];\n\n    nodes.forEach((node) => {\n      const properties = node.properties;\n      let found = false;\n      if (properties) {\n        for (const [propName, propValue] of pairs(properties)) {\n          if (propName === propertyName && propValue !== undefined) {\n            foundCount++;\n            typeSet.add(typeOf(propValue));\n            if (sampleValues.size() < 5) {\n              sampleValues.push(propValue);\n            }\n            found = true;\n            break;\n          }\n        }\n      }\n      if (!found) {\n        nullCount++;\n      }\n    });\n\n    const isValid = foundCount > 1 && typeSet.size() === 1; // Need variety and consistent typing\n    const coverage = (foundCount / nodes.size()) * 100;\n    \n    const typeSetArray: string[] = [];\n    typeSet.forEach((typeValue) => typeSetArray.push(typeValue));\n\n    return {\n      isValid,\n      coverage,\n      uniqueValueCount: foundCount, // Simplified for roblox-ts compatibility\n      dataType: typeSet.size() === 1 ? typeSetArray[0] : 'mixed',\n      nullCount,\n      sampleValues\n    };\n  }\n\n  /**\n   * Get summary of all properties across nodes\n   */\n  public getPropertySummary(nodes: Node[]): PropertySummary {\n    const analysis = this.analyzePropertyDistribution(nodes);\n    const summary: PropertySummary = {\n      totalProperties: analysis.propertyCoverage.size(),\n      averageCoverage: 0,\n      properties: []\n    };\n\n    let totalCoverage = 0;\n    analysis.propertyCoverage.forEach((count, propName) => {\n      const coverage = (count / analysis.totalNodes) * 100;\n      totalCoverage += coverage;\n\n      const validation = this.validateAxisProperties(nodes, propName);\n      \n      const uniqueValuesSet = analysis.uniqueValues.get(propName);\n      const uniqueValuesCount = uniqueValuesSet ? uniqueValuesSet.size() : 0;\n      \n      summary.properties.push({\n        name: propName,\n        type: analysis.propertyTypes.get(propName) || 'unknown',\n        coverage,\n        uniqueValues: uniqueValuesCount,\n        isValidForAxis: validation.isValid\n      });\n    });\n\n    summary.averageCoverage = totalCoverage / analysis.propertyCoverage.size();\n    \n    // Sort by coverage descending\n    table.sort(summary.properties, (a, b) => b.coverage > a.coverage);\n\n    return summary;\n  }\n}\n\n/**\n * Property analysis result interface\n */\ninterface PropertyAnalysis {\n  totalNodes: number;\n  propertyCoverage: Map<string, number>;\n  propertyTypes: Map<string, string>;\n  uniqueValues: Map<string, Set<defined>>;\n}\n\n/**\n * Property validation result interface\n */\ninterface PropertyValidation {\n  isValid: boolean;\n  coverage: number;\n  uniqueValueCount: number;\n  dataType: string;\n  nullCount: number;\n  sampleValues: defined[];\n}\n\n/**\n * Property summary interface\n */\ninterface PropertySummary {\n  totalProperties: number;\n  averageCoverage: number;\n  properties: PropertyInfo[];\n}\n\n/**\n * Individual property information\n */\ninterface PropertyInfo {\n  name: string;\n  type: string;\n  coverage: number;\n  uniqueValues: number;\n  isValidForAxis: boolean;\n}",
      "patterns": {
        "functions": 3,
        "classes": 1,
        "interfaces": 4,
        "exports": 1,
        "imports": 3,
        "anyTypes": 1,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [
          {
            "name": "PropertyManager",
            "methodCount": 9,
            "methods": [
              "discoverAndValidateProperties",
              "analyzePropertyDistribution",
              "Map",
              "if",
              "validateAxisProperties",
              "if",
              "if",
              "if",
              "size"
            ]
          }
        ],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/renderers/unifiedDataRenderer/core/positionMapper.ts",
      "relativePath": "shared/modules/renderers/unifiedDataRenderer/core/positionMapper.ts",
      "name": "positionMapper.ts",
      "size": 4672,
      "lines": 154,
      "lastModified": "2025-07-10T01:40:13.757Z",
      "content": "/**\n * Position Mapper for calculating node positions\n * Part of F002 Phase 2 refactoring - T5\n */\n\nimport { Node } from \"../../../../interfaces/simpleDataGenerator.interface\";\nimport { SpacingConfig } from \"../interfaces\";\nimport { POSITION_CONSTANTS } from \"../../constants/positionConstants\";\nimport { resolvePropertyValue } from \"../../../../utils/nodePropertyHelpers\";\n\nexport class PositionMapper {\n  /**\n   * Calculate X positions for each type column\n   */\n  public calculateTypeColumnPositions(\n    sortedTypes: string[],\n    nodesByTypeAndLayer: Map<string, Node[]>,\n    numLayers: number,\n    spacing: SpacingConfig,\n    nodeOrganizer: { findMaxNodesInLayer: (nodes: Map<string, Node[]>, type: string, layers: number) => number }\n  ): Map<string, number> {\n    let typeXOffset = 0;\n    const typeXPositions = new Map<string, number>();\n    \n    sortedTypes.forEach((nodeType, typeIndex) => {\n      typeXPositions.set(nodeType, typeXOffset);\n      \n      // Find max nodes of this type in any layer\n      const maxNodesInLayer = nodeOrganizer.findMaxNodesInLayer(\n        nodesByTypeAndLayer, \n        nodeType, \n        numLayers\n      );\n      \n      // Move to next type column\n      typeXOffset += maxNodesInLayer * spacing.nodeSpacing;\n      if (typeIndex < sortedTypes.size() - 1) {\n        typeXOffset += spacing.swimlaneSpacing; // Gap between swim lanes\n      }\n    });\n    \n    return typeXPositions;\n  }\n\n  /**\n   * Create position mapping for a property (Z-axis positioning)\n   */\n  public createPropertyPositionMap(\n    nodesByTypeAndLayer: Map<string, Node[]>, \n    propertyName: string\n  ): Map<string, number> {\n    const uniqueValues = new Set<string>();\n    \n    // Collect all unique values for the property\n    nodesByTypeAndLayer.forEach(nodes => {\n      nodes.forEach(node => {\n        const value = resolvePropertyValue(node, propertyName);\n        uniqueValues.add(value);\n      });\n    });\n    \n    // Sort values and assign positions\n    const sortedValues = [...uniqueValues].sort();\n    const positionMap = new Map<string, number>();\n    \n    sortedValues.forEach((value, index) => {\n      // Position values using constant spacing\n      const position = (index - sortedValues.size() / 2) * POSITION_CONSTANTS.Z_DIMENSION_GROUP_SPACING;\n      positionMap.set(value, position);\n    });\n    \n    return positionMap;\n  }\n\n  /**\n   * Calculate centering offset for nodes within a swimlane\n   */\n  public calculateCenteringOffset(\n    maxNodesForType: number,\n    actualNodeCount: number,\n    spacing: SpacingConfig\n  ): number {\n    const laneWidth = maxNodesForType * spacing.nodeSpacing;\n    const nodesWidth = actualNodeCount * spacing.nodeSpacing;\n    return (laneWidth - nodesWidth) / POSITION_CONSTANTS.SWIMLANE.CENTERING_DIVISOR;\n  }\n\n  /**\n   * Calculate layer Y position (inverted so layer 1 is at top)\n   */\n  public calculateLayerY(layer: number, numLayers: number, spacing: SpacingConfig): number {\n    return POSITION_CONSTANTS.BASE_Y + (numLayers - layer) * spacing.layerSpacing;\n  }\n\n  /**\n   * Apply offsets to cluster positions\n   */\n  public applyOffsetsToCluster(\n    nodes: Node[], \n    offsetX: number, \n    offsetY: number, \n    offsetZ: number\n  ): void {\n    nodes.forEach(node => {\n      if (!node.position) {\n        warn(`[PositionMapper] Cannot apply offset to node ${node.name} - no position`);\n        return;\n      }\n      \n      node.position.x += offsetX;\n      node.position.y += offsetY;\n      node.position.z += offsetZ;\n    });\n  }\n\n  /**\n   * Calculate offsets to center cluster at origin\n   */\n  public calculateCenteringOffsets(\n    bounds: { minX: number; maxX: number; minY: number },\n    origin: Vector3,\n    yOffset: number = 0\n  ): { x: number; y: number; z: number } {\n    const centerX = (bounds.minX + bounds.maxX) / 2;\n    const offsetX = origin.X - centerX;\n    const offsetY = origin.Y - bounds.minY + yOffset;\n    const offsetZ = origin.Z;\n    \n    return { x: offsetX, y: offsetY, z: offsetZ };\n  }\n\n  /**\n   * Ensure minimum ground clearance\n   */\n  public ensureGroundClearance(offsetY: number, minY: number): number {\n    const minFinalY = minY + offsetY;\n    const groundClearanceAdjustment = minFinalY < POSITION_CONSTANTS.MIN_GROUND_CLEARANCE \n      ? POSITION_CONSTANTS.MIN_GROUND_CLEARANCE - minFinalY \n      : 0;\n    \n    if (groundClearanceAdjustment > 0) {\n    }\n    \n    return offsetY + groundClearanceAdjustment;\n  }\n\n  /**\n   * Generate type number for node labeling\n   */\n  public generateTypeNumber(nodeType: string, counter: number): string {\n    const paddedNumber = counter < 10 ? `0${counter}` : `${counter}`;\n    return `${nodeType.lower()}${paddedNumber}`;\n  }\n}",
      "patterns": {
        "functions": 5,
        "classes": 1,
        "interfaces": 0,
        "exports": 1,
        "imports": 4,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/services/base/BaseService.ts",
      "relativePath": "shared/services/base/BaseService.ts",
      "name": "BaseService.ts",
      "size": 4629,
      "lines": 172,
      "lastModified": "2025-07-09T02:36:42.422Z",
      "content": "/**\n * BaseService - Foundation class for all services with connection management\n * \n * Provides automatic cleanup of RBXScriptConnections to prevent memory leaks.\n * All services should extend this class and use addConnection() for event subscriptions.\n */\n\nimport { IService } from \"../../interfaces/IService\";\n\nexport abstract class BaseService implements IService {\n  /** Array to store all active connections for cleanup */\n  protected connections: RBXScriptConnection[] = [];\n  \n  /** Array to store all created instances for cleanup */\n  protected instances: Instance[] = [];\n  \n  /** Flag to check if service has been destroyed */\n  protected isDestroyed = false;\n  \n  /** Service name for logging */\n  protected serviceName: string;\n  \n  constructor(serviceName?: string) {\n    this.serviceName = serviceName || \"BaseService\";\n  }\n\n  /**\n   * Adds a connection to be managed by the service\n   * The connection will be automatically disconnected when destroy() is called\n   * \n   * @param connection - The RBXScriptConnection to manage\n   * @returns The same connection for chaining\n   */\n  protected addConnection(connection: RBXScriptConnection): RBXScriptConnection {\n    if (this.isDestroyed) {\n      warn(`[${this.serviceName}] Attempted to add connection after service was destroyed`);\n      connection.Disconnect();\n      return connection;\n    }\n    \n    this.connections.push(connection);\n    return connection;\n  }\n\n  /**\n   * Adds multiple connections to be managed by the service\n   * \n   * @param connections - Array of connections to manage\n   */\n  protected addConnections(...connections: RBXScriptConnection[]): void {\n    connections.forEach(conn => this.addConnection(conn));\n  }\n\n  /**\n   * Adds an instance to be managed by the service\n   * The instance will be automatically destroyed when destroy() is called\n   * \n   * @param instance - The Instance to manage\n   * @returns The same instance for chaining\n   */\n  protected addInstance<T extends Instance>(instance: T): T {\n    if (this.isDestroyed) {\n      warn(`[${this.serviceName}] Attempted to add instance after service was destroyed`);\n      instance.Destroy();\n      return instance;\n    }\n    \n    this.instances.push(instance);\n    return instance;\n  }\n\n  /**\n   * Removes a connection from management (useful if disconnecting early)\n   * \n   * @param connection - The connection to remove\n   */\n  protected removeConnection(connection: RBXScriptConnection): void {\n    const index = this.connections.indexOf(connection);\n    if (index >= 0) {\n      const newConnections: RBXScriptConnection[] = [];\n      for (let i = 0; i < this.connections.size(); i++) {\n        if (i !== index) {\n          newConnections.push(this.connections[i]);\n        }\n      }\n      this.connections = newConnections;\n    }\n  }\n\n  /**\n   * Disconnects all managed connections\n   */\n  protected disconnectAll(): void {\n    this.connections.forEach(conn => {\n      try {\n        conn.Disconnect();\n      } catch (e) {\n        warn(`[${this.serviceName}] Error disconnecting connection:`, e);\n      }\n    });\n    this.connections = [];\n  }\n\n  /**\n   * Destroys all managed instances\n   */\n  protected destroyAllInstances(): void {\n    this.instances.forEach(instance => {\n      try {\n        if (instance && instance.Parent) {\n          instance.Destroy();\n        }\n      } catch (e) {\n        warn(`[${this.serviceName}] Error destroying instance:`, e);\n      }\n    });\n    this.instances = [];\n  }\n\n  /**\n   * Gets the number of active connections\n   */\n  protected getConnectionCount(): number {\n    return this.connections.size();\n  }\n\n  /**\n   * Gets the number of managed instances\n   */\n  protected getInstanceCount(): number {\n    return this.instances.size();\n  }\n\n  /**\n   * Called before destroy to allow subclasses to perform cleanup\n   * Override this method in subclasses for custom cleanup logic\n   */\n  protected onDestroy(): void {\n    // Override in subclasses\n  }\n\n  /**\n   * Destroys the service and cleans up all connections and instances\n   * This method should be called when the service is no longer needed\n   */\n  public destroy(): void {\n    if (this.isDestroyed) {\n      warn(`[${this.serviceName}] Service already destroyed`);\n      return;\n    }\n\n    // Call subclass cleanup first\n    this.onDestroy();\n\n    // Disconnect all connections\n    this.disconnectAll();\n    \n    // Destroy all instances\n    this.destroyAllInstances();\n    \n    // Mark as destroyed\n    this.isDestroyed = true;\n    \n  }\n\n  /**\n   * Checks if the service has been destroyed\n   */\n  public isServiceDestroyed(): boolean {\n    return this.isDestroyed;\n  }\n}",
      "patterns": {
        "functions": 2,
        "classes": 4,
        "interfaces": 0,
        "exports": 1,
        "imports": 1,
        "anyTypes": 0,
        "typeAssertions": 5,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [
          {
            "name": "for",
            "methodCount": 0,
            "methods": []
          }
        ],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/client/services/configGui/components/visualizationControls.ts",
      "relativePath": "client/services/configGui/components/visualizationControls.ts",
      "name": "visualizationControls.ts",
      "size": 4554,
      "lines": 126,
      "lastModified": "2025-07-09T07:33:53.329Z",
      "content": "import { GUI_CONSTANTS } from \"../constants\";\nimport type { VisualizationOptions } from \"../../../../shared/interfaces/enhancedGenerator.interface\";\n\ninterface VisualizationControlsProps {\n  parent: Frame;\n  visualization: VisualizationOptions;\n  onVisualizationChange: (field: keyof VisualizationOptions, value: boolean) => void;\n}\n\ninterface CheckboxField {\n  label: string;\n  field: keyof VisualizationOptions;\n  default: boolean;\n}\n\nconst CHECKBOX_FIELDS: CheckboxField[] = [\n  { label: \"Show nodes\", field: \"showNodes\", default: true },\n  { label: \"Show link labels\", field: \"showLinkLabels\", default: false },\n  { label: \"Show connectors\", field: \"showConnectors\", default: true },\n  { label: \"Create same-layer links\", field: \"allowSameLevelLinks\", default: false }\n];\n\nexport function createVisualizationControls({\n  parent,\n  visualization,\n  onVisualizationChange\n}: VisualizationControlsProps): Frame {\n  // Create container - now positioned above the buttons due to narrower width\n  const container = new Instance(\"Frame\");\n  container.Name = \"VisualizationControls\";\n  container.Size = new UDim2(1, 0, 1, 0); // Use full size of parent\n  // Position above the buttons\n  container.Position = new UDim2(0, 0, 0, 0); // Position will be set by layout manager\n  container.BackgroundColor3 = new Color3(0.15, 0.15, 0.15);\n  container.BorderSizePixel = 0;\n  container.Parent = parent;\n\n  const containerCorner = new Instance(\"UICorner\");\n  containerCorner.CornerRadius = new UDim(0, 4);\n  containerCorner.Parent = container;\n\n  const rowHeight = 30;\n  const checkboxSize = 20;\n  const labelOffset = 30;\n  const startY = 20;\n  const spacing_between = 10;\n  const columnsPerRow = 2;\n  const columnWidth = (1 / columnsPerRow);\n\n  // Add title\n  const title = new Instance(\"TextLabel\");\n  title.Name = \"Title\";\n  title.Size = new UDim2(1, -20, 0, 20);\n  title.Position = new UDim2(0, 10, 0, 0);\n  title.BackgroundTransparency = 1;\n  title.Text = \"Visualization Options\";\n  title.TextColor3 = new Color3(0.9, 0.9, 0.9);\n  title.TextScaled = false;\n  title.TextSize = 14;\n  title.Font = Enum.Font.SourceSansBold;\n  title.TextXAlignment = Enum.TextXAlignment.Left;\n  title.Parent = container;\n\n  CHECKBOX_FIELDS.forEach((fieldDef, index) => {\n    const row = math.floor(index / columnsPerRow);\n    const col = index % columnsPerRow;\n    const xPos = col * columnWidth;\n    const yPos = startY + (row * (rowHeight + spacing_between));\n\n    // Create checkbox frame\n    const checkboxFrame = new Instance(\"Frame\");\n    checkboxFrame.Name = `${fieldDef.field}Frame`;\n    checkboxFrame.Size = new UDim2(columnWidth, -10, 0, rowHeight);\n    checkboxFrame.Position = new UDim2(xPos, 10, 0, yPos);\n    checkboxFrame.BackgroundTransparency = 1;\n    checkboxFrame.Parent = container;\n\n    // Create checkbox button\n    const checkbox = new Instance(\"TextButton\");\n    checkbox.Name = `${fieldDef.field}Checkbox`;\n    checkbox.Size = new UDim2(0, checkboxSize, 0, checkboxSize);\n    checkbox.Position = new UDim2(0, 0, 0.5, -checkboxSize/2);\n    checkbox.BackgroundColor3 = new Color3(0.25, 0.25, 0.25);\n    checkbox.BorderSizePixel = 0;\n    checkbox.Text = \"\";\n    checkbox.Parent = checkboxFrame;\n\n    const corner = new Instance(\"UICorner\");\n    corner.CornerRadius = new UDim(0, 4);\n    corner.Parent = checkbox;\n\n    // Create checkmark\n    const checkmark = new Instance(\"TextLabel\");\n    checkmark.Name = \"Checkmark\";\n    checkmark.Size = new UDim2(1, 0, 1, 0);\n    checkmark.BackgroundTransparency = 1;\n    checkmark.Font = Enum.Font.SourceSansBold;\n    checkmark.Text = \"✓\";\n    checkmark.TextColor3 = GUI_CONSTANTS.COLORS.SUCCESS;\n    checkmark.TextScaled = true;\n    checkmark.Visible = visualization[fieldDef.field] as boolean;\n    checkmark.Parent = checkbox;\n\n    // Create label\n    const label = new Instance(\"TextLabel\");\n    label.Size = new UDim2(1, -labelOffset, 1, 0);\n    label.Position = new UDim2(0, labelOffset, 0, 0);\n    label.BackgroundTransparency = 1;\n    label.Font = GUI_CONSTANTS.TYPOGRAPHY.LABEL_FONT;\n    label.Text = fieldDef.label;\n    label.TextColor3 = GUI_CONSTANTS.COLORS.TEXT;\n    label.TextSize = 14;\n    label.TextXAlignment = Enum.TextXAlignment.Left;\n    label.Parent = checkboxFrame;\n\n    // Handle checkbox click\n    checkbox.MouseButton1Click.Connect(() => {\n      const newValue = !(visualization[fieldDef.field] as boolean);\n      (visualization as any)[fieldDef.field] = newValue;\n      checkmark.Visible = newValue;\n      onVisualizationChange(fieldDef.field, newValue);\n    });\n  });\n  \n  return container;\n}",
      "patterns": {
        "functions": 3,
        "classes": 0,
        "interfaces": 2,
        "exports": 1,
        "imports": 2,
        "anyTypes": 0,
        "typeAssertions": 3,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": [
          {
            "name": "createVisualizationControls",
            "type": "function",
            "isExported": true
          }
        ]
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/client/services/configGui/components/axisMappingControls/components/dropdown.ts",
      "relativePath": "client/services/configGui/components/axisMappingControls/components/dropdown.ts",
      "name": "dropdown.ts",
      "size": 4428,
      "lines": 149,
      "lastModified": "2025-07-11T00:37:44.930Z",
      "content": "import { UserInputService } from \"@rbxts/services\";\nimport { UI_CONSTANTS } from \"../constants\";\nimport type { DropdownProps } from \"../types\";\n\n/**\n * Creates a dropdown functionality for a button\n */\nexport function createDropdown({\n  button,\n  currentValue,\n  onChange,\n  parent,\n  properties\n}: DropdownProps): void {\n  let isOpen = false;\n  let optionsFrame: Frame | undefined;\n\n  button.MouseButton1Click.Connect(() => {\n    if (!isOpen) {\n      optionsFrame = createOptionsFrame(button, parent, properties, (value) => {\n        // Don't update button text here - let the onChange handler do it\n        onChange(value);\n        closeDropdown();\n      });\n      isOpen = true;\n    } else {\n      closeDropdown();\n    }\n  });\n\n  // Close when clicking elsewhere\n  UserInputService.InputBegan.Connect((input) => {\n    if (input.UserInputType === Enum.UserInputType.MouseButton1 && isOpen && optionsFrame) {\n      wait(0.1);\n      closeDropdown();\n    }\n  });\n\n  function closeDropdown() {\n    if (optionsFrame) {\n      optionsFrame.Destroy();\n      optionsFrame = undefined;\n    }\n    isOpen = false;\n  }\n}\n\n/**\n * Creates the options frame for the dropdown\n */\nfunction createOptionsFrame(\n  button: TextButton,\n  parent: Frame,\n  properties: string[],\n  onSelect: (value: string) => void\n): Frame {\n  const optionsFrame = new Instance(\"Frame\");\n  optionsFrame.Name = button.Name + \"Options\";\n  \n  // Position dropdown below the button\n  const buttonPosition = button.Position;\n  const buttonSize = button.Size;\n  optionsFrame.Position = new UDim2(\n    buttonPosition.X.Scale,\n    buttonPosition.X.Offset,\n    buttonPosition.Y.Scale,\n    buttonPosition.Y.Offset + buttonSize.Y.Offset + UI_CONSTANTS.SPACING.DROPDOWN_OFFSET\n  );\n  \n  const maxVisibleItems = UI_CONSTANTS.DROPDOWN.MAX_VISIBLE_ITEMS;\n  const visibleHeight = math.min(properties.size() * UI_CONSTANTS.DROPDOWN.ITEM_HEIGHT, \n    maxVisibleItems * UI_CONSTANTS.DROPDOWN.ITEM_HEIGHT);\n  \n  optionsFrame.Size = new UDim2(0, button.Size.X.Offset, 0, visibleHeight);\n  optionsFrame.BackgroundColor3 = UI_CONSTANTS.DROPDOWN.BACKGROUND_COLOR;\n  optionsFrame.BorderSizePixel = 0;\n  optionsFrame.ZIndex = 10;\n  optionsFrame.Parent = parent;\n\n  const optionsCorner = new Instance(\"UICorner\");\n  optionsCorner.CornerRadius = new UDim(0, UI_CONSTANTS.BUTTON.CORNER_RADIUS);\n  optionsCorner.Parent = optionsFrame;\n\n  // Create scrolling frame if needed\n  const scrollFrame = createScrollFrame(optionsFrame, properties.size());\n\n  // Create option buttons\n  properties.forEach((property, index) => {\n    createOptionButton(scrollFrame, property, index, onSelect);\n  });\n\n  return optionsFrame;\n}\n\n/**\n * Creates the scrolling frame for dropdown options\n */\nfunction createScrollFrame(parent: Frame, itemCount: number): ScrollingFrame {\n  const scrollFrame = new Instance(\"ScrollingFrame\");\n  scrollFrame.Size = new UDim2(1, 0, 1, 0);\n  scrollFrame.Position = new UDim2(0, 0, 0, 0);\n  scrollFrame.BackgroundTransparency = 1;\n  scrollFrame.BorderSizePixel = 0;\n  scrollFrame.ScrollBarThickness = UI_CONSTANTS.DROPDOWN.SCROLL_BAR_THICKNESS;\n  scrollFrame.CanvasSize = new UDim2(0, 0, 0, itemCount * UI_CONSTANTS.DROPDOWN.ITEM_HEIGHT);\n  scrollFrame.Parent = parent;\n  \n  return scrollFrame;\n}\n\n/**\n * Creates an option button in the dropdown\n */\nfunction createOptionButton(\n  parent: ScrollingFrame,\n  property: string,\n  index: number,\n  onSelect: (value: string) => void\n): TextButton {\n  const optionButton = new Instance(\"TextButton\");\n  optionButton.Name = `Option_${property}`;\n  optionButton.Text = property;\n  optionButton.Position = new UDim2(0, 0, 0, index * UI_CONSTANTS.DROPDOWN.ITEM_HEIGHT);\n  optionButton.Size = new UDim2(1, -4, 0, UI_CONSTANTS.DROPDOWN.ITEM_HEIGHT);\n  optionButton.BackgroundTransparency = 1;\n  optionButton.TextColor3 = UI_CONSTANTS.TEXT.BUTTON_COLOR;\n  optionButton.Font = Enum.Font.SourceSans;\n  optionButton.TextSize = UI_CONSTANTS.TEXT.LABEL_SIZE;\n  optionButton.BorderSizePixel = 0;\n  optionButton.ZIndex = 100;\n  optionButton.Parent = parent;\n\n  // Hover effect\n  optionButton.MouseEnter.Connect(() => {\n    optionButton.BackgroundTransparency = 0;\n    optionButton.BackgroundColor3 = UI_CONSTANTS.BUTTON.HOVER_COLOR;\n  });\n\n  optionButton.MouseLeave.Connect(() => {\n    optionButton.BackgroundTransparency = 1;\n  });\n\n  // Selection\n  optionButton.MouseButton1Click.Connect(() => {\n    onSelect(property);\n  });\n\n  return optionButton;\n}",
      "patterns": {
        "functions": 12,
        "classes": 0,
        "interfaces": 0,
        "exports": 1,
        "imports": 3,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": [
          {
            "name": "createDropdown",
            "type": "function",
            "isExported": true
          },
          {
            "name": "closeDropdown",
            "type": "function",
            "isExported": false
          },
          {
            "name": "createOptionsFrame",
            "type": "function",
            "isExported": false
          },
          {
            "name": "createScrollFrame",
            "type": "function",
            "isExported": false
          },
          {
            "name": "createOptionButton",
            "type": "function",
            "isExported": false
          }
        ]
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/client/services/configGui/components/dropdownTestControls.ts",
      "relativePath": "client/services/configGui/components/dropdownTestControls.ts",
      "name": "dropdownTestControls.ts",
      "size": 4423,
      "lines": 137,
      "lastModified": "2025-07-09T03:26:09.002Z",
      "content": "/**\n * Dropdown Test Controls Component\n * Provides a test dropdown feature in the Advanced Controls GUI\n */\n\nimport { ComponentFactory } from \"../componentFactory\";\n\nexport interface DropdownTestControlsOptions {\n  parent: GuiObject;\n  onTestOptionChange: (value: string) => void;\n}\n\n/**\n * Creates dropdown test controls\n */\nexport function createDropdownTestControls(options: DropdownTestControlsOptions): Frame {\n  const { parent, onTestOptionChange } = options;\n\n  // Create container frame\n  const frame = new Instance(\"Frame\");\n  frame.Name = \"DropdownTestControls\";\n  frame.BackgroundTransparency = 1;\n  frame.Parent = parent;\n\n  // Create title label\n  ComponentFactory.createLabel({\n    name: \"DropdownTestTitle\",\n    parent: frame,\n    text: \"Dropdown Test Feature\",\n    position: new UDim2(0, 0, 0, 0),\n    size: new UDim2(1, 0, 0, 20),\n    font: Enum.Font.SourceSansBold\n  });\n\n  // Test options\n  const testOptions = [\n    \"Option A\",\n    \"Option B\", \n    \"Option C\",\n    \"Test Mode 1\",\n    \"Test Mode 2\",\n    \"Debug View\",\n    \"Performance Test\"\n  ];\n\n  // Create the dropdown button directly in the main frame\n  const dropdownButton = new Instance(\"TextButton\");\n  dropdownButton.Name = \"TestDropdownButton\";\n  dropdownButton.Text = \"Select Test Option\";\n  dropdownButton.Size = new UDim2(1, -10, 0, 30);\n  dropdownButton.Position = new UDim2(0, 5, 0, 25);\n  dropdownButton.BackgroundColor3 = new Color3(0.3, 0.3, 0.3);\n  dropdownButton.TextColor3 = new Color3(1, 1, 1);\n  dropdownButton.Font = Enum.Font.SourceSans;\n  dropdownButton.TextSize = 14;\n  dropdownButton.Parent = frame;\n\n  // Create dropdown list attached to button (initially hidden)\n  const dropdownList = new Instance(\"ScrollingFrame\");\n  dropdownList.Name = \"TestDropdownList\";\n  dropdownList.BackgroundColor3 = new Color3(0.25, 0.25, 0.25);\n  dropdownList.BorderSizePixel = 1;\n  dropdownList.BorderColor3 = new Color3(0.4, 0.4, 0.4);\n  dropdownList.Position = new UDim2(0, 0, 1, 0);\n  dropdownList.Size = new UDim2(1, 0, 0, math.min(testOptions.size() * 25, 150)); // Max height of 150\n  dropdownList.CanvasSize = new UDim2(0, 0, 0, testOptions.size() * 25);\n  dropdownList.ScrollBarThickness = 4;\n  dropdownList.Visible = false;\n  dropdownList.ZIndex = 100; // Ensure it's on top\n  dropdownList.Parent = dropdownButton;\n\n  // Create UIListLayout for dropdown items\n  const listLayout = new Instance(\"UIListLayout\");\n  listLayout.SortOrder = Enum.SortOrder.LayoutOrder;\n  listLayout.Parent = dropdownList;\n\n  // Create dropdown items\n  testOptions.forEach((option, index) => {\n    const optionButton = new Instance(\"TextButton\");\n    optionButton.Name = `TestOption_${option}`;\n    optionButton.Text = option;\n    optionButton.Size = new UDim2(1, 0, 0, 25);\n    optionButton.BackgroundColor3 = new Color3(0.25, 0.25, 0.25);\n    optionButton.TextColor3 = new Color3(1, 1, 1);\n    optionButton.Font = Enum.Font.SourceSans;\n    optionButton.TextSize = 14;\n    optionButton.BorderSizePixel = 0;\n    optionButton.LayoutOrder = index;\n    optionButton.Parent = dropdownList;\n\n    // Hover effect\n    optionButton.MouseEnter.Connect(() => {\n      optionButton.BackgroundColor3 = new Color3(0.35, 0.35, 0.35);\n    });\n\n    optionButton.MouseLeave.Connect(() => {\n      optionButton.BackgroundColor3 = new Color3(0.25, 0.25, 0.25);\n    });\n\n    // Selection handler\n    optionButton.MouseButton1Click.Connect(() => {\n      dropdownButton.Text = option;\n      dropdownList.Visible = false;\n      onTestOptionChange(option);\n      print(`[DropdownTest] Selected option: ${option}`);\n    });\n  });\n\n  // Toggle dropdown on button click\n  let isOpen = false;\n  dropdownButton.MouseButton1Click.Connect(() => {\n    isOpen = !isOpen;\n    dropdownList.Visible = isOpen;\n  });\n\n  // Close dropdown when clicking elsewhere\n  const userInputService = game.GetService(\"UserInputService\");\n  userInputService.InputBegan.Connect((input) => {\n    if (input.UserInputType === Enum.UserInputType.MouseButton1 && isOpen) {\n      wait(0.1); // Small delay to allow button clicks to register\n      isOpen = false;\n      dropdownList.Visible = false;\n    }\n  });\n\n  // Add description label\n  ComponentFactory.createLabel({\n    name: \"DropdownTestDescription\",\n    parent: frame,\n    text: \"Test various dropdown configurations\",\n    position: new UDim2(0, 5, 0, 60),\n    size: new UDim2(1, -10, 0, 20),\n    textColor: new Color3(0.7, 0.7, 0.7)\n  });\n\n  return frame;\n}",
      "patterns": {
        "functions": 7,
        "classes": 0,
        "interfaces": 1,
        "exports": 2,
        "imports": 1,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": [
          {
            "name": "createDropdownTestControls",
            "type": "function",
            "isExported": true
          }
        ]
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/renderers/constants/robloxColors.ts",
      "relativePath": "shared/modules/renderers/constants/robloxColors.ts",
      "name": "robloxColors.ts",
      "size": 4281,
      "lines": 100,
      "lastModified": "2025-07-11T05:14:17.047Z",
      "content": "export const robloxColors: Color3[] = [\n  new Color3(0.8, 0.2, 0.2), // Red\n  new Color3(0.2, 0.8, 0.2), // Green\n  new Color3(0.2, 0.2, 0.8), // Blue\n  new Color3(0.8, 0.8, 0.2), // Yellow\n  new Color3(0.8, 0.2, 0.8), // Magenta\n  new Color3(0.2, 0.8, 0.8), // Cyan\n  new Color3(0.6, 0.3, 0.1), // Brown\n  new Color3(1, 0.5, 0), // Orange\n  new Color3(0.5, 0, 0.5), // Purple\n  new Color3(0, 0.5, 0), // Dark Green\n];\n\nexport const LINK_COLORS: Color3[] = [\n  new Color3(35/255, 115/255, 35/255), // green007: rgba(35, 115, 35, 1)\n  new Color3(235/255, 77/255, 77/255), // red008: rgba(235, 77, 77, 1)\n  new Color3(255/255, 111/255, 0/255), // orange009: rgba(255, 111, 0, 1)\n  new Color3(130/255, 60/255, 180/255), // purple007: rgba(130, 60, 180, 1)\n  new Color3(25/255, 108/255, 192/255), // blue010: rgb(25, 108, 192)\n  new Color3(0.6431, 0.3608, 0.6471), // Base 19 saturated 200%\n];\nexport const Y_AXIS_COLORS: Color3[] = [\n  new Color3(0.6431, 0.3608, 0.6471), // Base 19 saturated 200%\n  new Color3(0.3608, 0.7529, 0.3608), // Base 20 saturated 200%\n  new Color3(0.3608, 0.5333, 1.0), // Base 15 saturated 200%\n  new Color3(0.948, 0.7186, 0.7422), // Base 1 saturated 150%\n  new Color3(0.3608, 0.5333, 1.0), // Base 18 saturated 200%\n  new Color3(1.0, 0.5333, 0.3608), // Base 11 saturated 200%\n  new Color3(0.9863, 0.6804, 0.7118), // Base 1 saturated 200%\n  new Color3(0.3608, 1.0, 0.5333), // Base 9 saturated 200%\n  new Color3(1.0, 0.6549, 0.3608), // Base 14 saturated 200%\n];\n\nexport const Z_AXIS_COLORS: Color3[] = [\n  new Color3(0.6431, 0.3608, 0.6471), // Base 19 saturated 200%\n  new Color3(0.3608, 0.7529, 0.3608), // Base 20 saturated 200%\n  new Color3(0.3608, 0.5333, 1.0), // Base 15 saturated 200%\n  new Color3(0.948, 0.7186, 0.7422), // Base 1 saturated 150%\n  new Color3(0.3608, 0.5333, 1.0), // Base 18 saturated 200%\n  new Color3(1.0, 0.5333, 0.3608), // Base 11 saturated 200%\n  new Color3(0.9863, 0.6804, 0.7118), // Base 1 saturated 200%\n  new Color3(0.3608, 1.0, 0.5333), // Base 9 saturated 200%\n  new Color3(1.0, 0.6549, 0.3608), // Base 14 saturated 200%\n];\nexport const X_AXIS_COLORS: Color3[] = [\n  new Color3(0.3608, 0.5333, 1.0), // Base 18 saturated 200%\n  new Color3(1.0, 0.5333, 0.3608), // Base 11 saturated 200%\n  new Color3(0.9863, 0.6804, 0.7118), // Base 1 saturated 200%\n  new Color3(0.3608, 1.0, 0.5333), // Base 9 saturated 200%\n  new Color3(1.0, 0.6549, 0.3608), // Base 14 saturated 200%\n  new Color3(0.8, 0.4, 0.0), // Hue 19\n  new Color3(0.0, 0.4, 0.4), // Hue 9\n  new Color3(0.2, 0.4, 0.0), // Hue 6\n  new Color3(0.8, 0.4, 0.0), // Hue 19\n  new Color3(0.6, 0.6, 0.0), // Hue 4\n  new Color3(0.4, 0.6, 0.0), // Hue 5\n  new Color3(0.6, 0.2, 0.0), // Hue 2\n  new Color3(0.0, 0.4, 0.0), // Hue 7\n  new Color3(0.4, 0.0, 0.4), // Hue 13\n  new Color3(0.0, 0.4, 0.2), // Hue 8\n  new Color3(0.0, 0.2, 0.4), // Hue 10\n  new Color3(0.0, 0.0, 0.4), // Hue 11\n  new Color3(0.6, 0.0, 0.0), // Hue 1\n  new Color3(0.2, 0.0, 0.4), // Hue 12\n  new Color3(0.6, 0.0, 0.4), // Hue 14\n  new Color3(0.8, 0.0, 0.4), // Hue 15\n  new Color3(0.8, 0.0, 0.2), // Hue 16\n  new Color3(0.8, 0.0, 0.0), // Hue 17\n  new Color3(0.8, 0.2, 0.0), // Hue 18\n  new Color3(0.8, 0.6, 0.0), // Hue 20\n];\n\n// Person type colors (used for nodes themselves, not swimlanes)\n// Colors are assigned sequentially based on NODE_TYPE_NAMES order:\n// Index 0: man (Blue)\n// Index 1: woman (Magenta)\n// Index 2: child (Green)\n// Index 3: grandparent (Yellow)\n// Index 4: Animals (Orange) - if needed\n// X-parallel lane colors - pastel/lighter shades for visual distinction from Z-parallel lanes\nexport const X_PARALLEL_LANE_COLORS: Color3[] = [\n  new Color3(0.9, 0.7, 0.7), // Light pink\n  new Color3(0.7, 0.9, 0.7), // Light green\n  new Color3(0.7, 0.7, 0.9), // Light blue\n  new Color3(0.9, 0.9, 0.7), // Light yellow\n  new Color3(0.9, 0.7, 0.9), // Light magenta\n  new Color3(0.7, 0.9, 0.9), // Light cyan\n  new Color3(0.8, 0.7, 0.6), // Light brown\n  new Color3(1.0, 0.8, 0.6), // Light orange\n  new Color3(0.8, 0.7, 0.8), // Light purple\n];\n\nexport const personColors: Color3[] = [\n  new Color3(0.0, 0.4, 0.4), // Hue 9\n  new Color3(0.2, 0.4, 0.0), // Hue 6\n  new Color3(0.8, 0.4, 0.0), // Hue 19\n  new Color3(0.6, 0.6, 0.0), // Hue 4\n  new Color3(0.4, 0.6, 0.0), // Hue 5\n];\n",
      "patterns": {
        "functions": 0,
        "classes": 0,
        "interfaces": 0,
        "exports": 7,
        "imports": 0,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/client/controllers/animationTestGUI.controller.ts",
      "relativePath": "client/controllers/animationTestGUI.controller.ts",
      "name": "animationTestGUI.controller.ts",
      "size": 4208,
      "lines": 157,
      "lastModified": "2025-07-09T02:32:56.357Z",
      "content": "/**\n * Animation Test GUI Controller\n * Handles the client-side GUI for the animation test\n */\n\nimport { Players, ReplicatedStorage } from \"@rbxts/services\";\n\n// GUI configuration\nconst GUI_CONFIG = {\n  BUTTON: {\n    SIZE: new UDim2(0, 200, 0, 50),\n    POSITION: new UDim2(1, -220, 0, 20), // Upper right with 20px margin\n    TEXT: \"Move Red Hexes to Blue\",\n    COLORS: {\n      DEFAULT: new Color3(0.2, 0.6, 0.2),\n      HOVER: new Color3(0.3, 0.7, 0.3),\n      DISABLED: new Color3(0.5, 0.5, 0.5)\n    }\n  }\n};\n\nexport class AnimationTestGUIController {\n  private gui?: ScreenGui;\n  private button?: TextButton;\n  private remoteEvent?: RemoteEvent;\n  private isAnimating = false;\n\n  /**\n   * Initializes the animation test GUI\n   */\n  public initialize(): void {\n    \n    // Wait for remote event\n    const remoteEvent = ReplicatedStorage.WaitForChild(\"AnimationTestRemote\", 5) as RemoteEvent | undefined;\n    if (!remoteEvent) {\n      warn(\"AnimationTestRemote not found - animation test may not be enabled\");\n      return;\n    }\n    \n    this.remoteEvent = remoteEvent;\n    \n    // Set up event listeners\n    this.setupEventListeners();\n    \n    // Create GUI\n    this.createGUI();\n  }\n\n  /**\n   * Sets up remote event listeners\n   */\n  private setupEventListeners(): void {\n    if (!this.remoteEvent) return;\n    \n    this.remoteEvent.OnClientEvent.Connect((eventType: string) => {\n      if (eventType === \"animationStarted\") {\n        this.isAnimating = true;\n        this.updateButtonState();\n      } else if (eventType === \"animationCompleted\") {\n        this.isAnimating = false;\n        this.updateButtonState();\n      }\n    });\n  }\n\n  /**\n   * Creates the GUI with move button\n   */\n  private createGUI(): void {\n    const player = Players.LocalPlayer;\n    const playerGui = player.WaitForChild(\"PlayerGui\") as PlayerGui;\n    \n    // Create ScreenGui\n    this.gui = new Instance(\"ScreenGui\");\n    this.gui.Name = \"AnimationTestGUI\";\n    this.gui.ResetOnSpawn = false;\n    \n    // Create transparent frame container\n    const frame = new Instance(\"Frame\");\n    frame.Size = new UDim2(1, 0, 1, 0);\n    frame.BackgroundTransparency = 1;\n    frame.Parent = this.gui;\n    \n    // Create button\n    this.button = new Instance(\"TextButton\");\n    this.button.Size = GUI_CONFIG.BUTTON.SIZE;\n    this.button.Position = GUI_CONFIG.BUTTON.POSITION;\n    this.button.Text = GUI_CONFIG.BUTTON.TEXT;\n    this.button.Font = Enum.Font.SourceSansBold;\n    this.button.TextScaled = true;\n    this.button.TextColor3 = new Color3(1, 1, 1);\n    this.button.BackgroundColor3 = GUI_CONFIG.BUTTON.COLORS.DEFAULT;\n    this.button.BorderSizePixel = 0;\n    this.button.Parent = frame;\n    \n    // Add corner rounding\n    const uiCorner = new Instance(\"UICorner\");\n    uiCorner.CornerRadius = new UDim(0, 8);\n    uiCorner.Parent = this.button;\n    \n    // Add hover effects\n    this.button.MouseEnter.Connect(() => {\n      if (!this.isAnimating && this.button) {\n        this.button.BackgroundColor3 = GUI_CONFIG.BUTTON.COLORS.HOVER;\n      }\n    });\n    \n    this.button.MouseLeave.Connect(() => {\n      if (!this.isAnimating && this.button) {\n        this.button.BackgroundColor3 = GUI_CONFIG.BUTTON.COLORS.DEFAULT;\n      }\n    });\n    \n    // Connect click event\n    this.button.MouseButton1Click.Connect(() => this.onButtonClick());\n    \n    // Parent to PlayerGui\n    this.gui.Parent = playerGui;\n    \n  }\n\n  /**\n   * Handles button click\n   */\n  private onButtonClick(): void {\n    if (this.isAnimating || !this.remoteEvent) return;\n    \n    // Send request to server\n    this.remoteEvent.FireServer(\"triggerAnimation\");\n  }\n\n  /**\n   * Updates button state based on animation status\n   */\n  private updateButtonState(): void {\n    if (!this.button) return;\n    \n    if (this.isAnimating) {\n      this.button.BackgroundColor3 = GUI_CONFIG.BUTTON.COLORS.DISABLED;\n      this.button.Text = \"Animating...\";\n    } else {\n      this.button.BackgroundColor3 = GUI_CONFIG.BUTTON.COLORS.DEFAULT;\n      this.button.Text = GUI_CONFIG.BUTTON.TEXT;\n    }\n  }\n\n  /**\n   * Cleans up the GUI\n   */\n  public destroy(): void {\n    if (this.gui) {\n      this.gui.Destroy();\n      this.gui = undefined;\n      this.button = undefined;\n    }\n  }\n}",
      "patterns": {
        "functions": 3,
        "classes": 1,
        "interfaces": 0,
        "exports": 1,
        "imports": 1,
        "anyTypes": 0,
        "typeAssertions": 2,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/server/services/graphInitializer.service.ts",
      "relativePath": "server/services/graphInitializer.service.ts",
      "name": "graphInitializer.service.ts",
      "size": 4076,
      "lines": 154,
      "lastModified": "2025-07-11T04:15:45.088Z",
      "content": "import { EnhancedGeneratorConfig } from \"../../shared/interfaces/enhancedGenerator.interface\";\n\nexport interface GraphInitConfig {\n  initialPosition: { x: number; y: number; z: number };\n  defaultConfig: EnhancedGeneratorConfig;\n}\n\nexport class GraphInitializerService {\n  private configGUIServer?: unknown;\n\n  private readonly DEFAULT_CONFIG: EnhancedGeneratorConfig = {\n    numNodeTypes: 4,\n    numLinkTypes: 3,\n    layers: [\n      {\n        layerNumber: 1,\n        numNodes: 4, // Test with more nodes in first layer\n        connectionsPerNode: 0, // Test with no intra-layer connections\n      },\n      {\n        layerNumber: 2,\n        numNodes: 8,\n        connectionsPerNode: 1,\n      },\n      {\n        layerNumber: 3,\n        numNodes: 12,\n        connectionsPerNode: 0, // Test sparse connectivity\n      },\n      {\n        layerNumber: 4,\n        numNodes: 16,\n        connectionsPerNode: 2,\n      },\n      {\n        layerNumber: 5,\n        numNodes: 20,\n        connectionsPerNode: 0, // Test last layer with no connections\n      },\n    ],\n    spacing: {\n      nodeHeight: 0.5,\n      nodeRadius: 0.5,\n      layerSpacing: 5,\n      // layerSpacing: 0.5,\n      nodeSpacing: 1,\n      swimlaneSpacing: 1,\n      linkDiameter: 0.1,\n    },\n    visualization: {\n      showNodes: true,\n      showLinkLabels: false,\n      showConnectors: true,\n      allowSameLevelLinks: true, // Enable same-level links for testing\n    },\n    // Default axis mapping for Harness data - will be updated when properties are discovered\n    axisMapping: {\n      xAxis: \"httpMethod\",\n      zAxis: \"apiPattern\",\n      yAxis: \"component\",\n    },\n    visualMapping: {\n      backgroundColor: \"httpMethod\", // Default to httpMethod for Harness data\n      borderColor: \"none\",\n    },\n    yAxisConfig: {\n      useLayer: true,\n      property: undefined,\n    },\n    numPetTypes: 5,\n    maxDataItems: 1000, // Maximum number of items to use from test data\n  };\n\n  private readonly DEFAULT_POSITION = { x: 0, y: 0, z: 0 };\n\n  constructor() {}\n\n  public setConfigGUIServer(configGUIServer: unknown): void {\n    this.configGUIServer = configGUIServer;\n  }\n\n  public initializeGraph(customConfig?: Partial<GraphInitConfig>): void {\n    // Merge custom config with defaults\n    const mergedDefaultConfig = {\n      ...this.DEFAULT_CONFIG,\n      ...customConfig?.defaultConfig,\n    };\n\n    const config: GraphInitConfig = {\n      initialPosition: customConfig?.initialPosition || this.DEFAULT_POSITION,\n      defaultConfig: mergedDefaultConfig,\n    };\n\n    wait(2);\n    this.triggerGraphGeneration(config);\n  }\n\n  public initializeGraphWithMaxItems(maxDataItems: number): void {\n    print(\n      `[GraphInitializer] Initializing graph with max ${maxDataItems} items`\n    );\n\n    const configWithMaxItems = {\n      ...this.DEFAULT_CONFIG,\n      maxDataItems,\n    };\n\n    const config: GraphInitConfig = {\n      initialPosition: this.DEFAULT_POSITION,\n      defaultConfig: configWithMaxItems,\n    };\n\n    wait(2);\n    this.triggerGraphGeneration(config);\n  }\n\n  private triggerGraphGeneration(config: GraphInitConfig): void {\n    if (!this.configGUIServer) {\n      warn(\n        \"⚠️ ConfigGUIServerService not set, cannot trigger graph generation\"\n      );\n      return;\n    }\n\n    const players = game.GetService(\"Players\").GetPlayers();\n\n    if (players.size() > 0) {\n      players.forEach((player) => {\n        this.sendInitialConfig(player, config);\n      });\n    }\n\n    game.GetService(\"Players\").PlayerAdded.Connect((player) => {\n      wait(2);\n      this.sendInitialConfig(player, config);\n    });\n  }\n\n  private sendInitialConfig(player: Player, config: GraphInitConfig): void {\n    const remoteEvent = game\n      .GetService(\"ReplicatedStorage\")\n      .FindFirstChild(\"ConfigGUIRemote\") as RemoteEvent;\n    if (!remoteEvent) {\n      warn(\"⚠️ ConfigGUIRemote not found, cannot send initial configuration\");\n      return;\n    }\n\n    remoteEvent.FireClient(player, \"initialConfig\", config.defaultConfig);\n\n    wait(1);\n    remoteEvent.FireClient(player, \"triggerGeneration\", config.defaultConfig);\n  }\n}\n",
      "patterns": {
        "functions": 2,
        "classes": 1,
        "interfaces": 1,
        "exports": 2,
        "imports": 1,
        "anyTypes": 0,
        "typeAssertions": 1,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [
          {
            "name": "GraphInitializerService",
            "methodCount": 6,
            "methods": [
              "initializeGraph",
              "initializeGraphWithMaxItems",
              "triggerGraphGeneration",
              "if",
              "sendInitialConfig",
              "if"
            ]
          }
        ],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/renderers/unifiedDataRenderer/core/nodeOrganizer.ts",
      "relativePath": "shared/modules/renderers/unifiedDataRenderer/core/nodeOrganizer.ts",
      "name": "nodeOrganizer.ts",
      "size": 3902,
      "lines": 135,
      "lastModified": "2025-07-07T09:26:00.809Z",
      "content": "/**\n * Node Organizer for clustering and grouping nodes\n * Part of F002 Phase 2 refactoring - T5\n */\n\nimport { Cluster, Node } from \"../../../../interfaces/simpleDataGenerator.interface\";\nimport { resolvePropertyValue } from \"../../../../utils/nodePropertyHelpers\";\n\nexport interface OrganizedNodes {\n  nodesByLayer: Map<number, Node[]>;\n  nodesByTypeAndLayer: Map<string, Node[]>;\n  typeCounters: Map<string, number>;\n}\n\nexport class NodeOrganizer {\n  /**\n   * Organize nodes by layer and property value\n   */\n  public organizeByLayerAndProperty(cluster: Cluster, propertyName: string): OrganizedNodes {\n    const nodesByLayer = new Map<number, Node[]>();\n    const typeCounters = new Map<string, number>();\n    const nodesByTypeAndLayer = new Map<string, Node[]>();\n    \n    // First organize by layer\n    this.organizeByLayer(cluster, nodesByLayer);\n    \n    // Then organize by property and layer\n    this.organizeByPropertyAndLayer(nodesByLayer, propertyName, nodesByTypeAndLayer, typeCounters);\n    \n    return { nodesByLayer, nodesByTypeAndLayer, typeCounters };\n  }\n\n  /**\n   * Sort property values by their node count\n   */\n  public sortByCount(typeCounters: Map<string, number>): string[] {\n    const sortedTypes: string[] = [];\n    typeCounters.forEach((_, nodeType) => {\n      sortedTypes.push(nodeType);\n    });\n    \n    // Use table.sort for stable sorting\n    table.sort(sortedTypes, (a, b) => {\n      const countA = typeCounters.get(a) || 0;\n      const countB = typeCounters.get(b) || 0;\n      return countB > countA;\n    });\n    \n    return sortedTypes;\n  }\n\n  /**\n   * Sort nodes within a group\n   */\n  public sortNodesAlphabetically(nodes: Node[]): void {\n    table.sort(nodes, (a, b) => a.name < b.name);\n  }\n\n  /**\n   * Get unique property values from nodes\n   */\n  public getUniquePropertyValues(nodes: Map<string, Node[]>, propertyName: string): Set<string> {\n    const uniqueValues = new Set<string>();\n    \n    nodes.forEach(nodeList => {\n      nodeList.forEach(node => {\n        const value = resolvePropertyValue(node, propertyName);\n        uniqueValues.add(value);\n      });\n    });\n    \n    return uniqueValues;\n  }\n\n  /**\n   * Find max nodes for a type across all layers\n   */\n  public findMaxNodesInLayer(\n    nodesByTypeAndLayer: Map<string, Node[]>, \n    nodeType: string, \n    numLayers: number\n  ): number {\n    let maxNodesInLayer = 0;\n    \n    for (let layer = 1; layer <= numLayers; layer++) {\n      const key = `${nodeType}-${layer}`;\n      const nodes = nodesByTypeAndLayer.get(key) || [];\n      maxNodesInLayer = math.max(maxNodesInLayer, nodes.size());\n    }\n    \n    return maxNodesInLayer;\n  }\n\n  /**\n   * Organize nodes by layer\n   */\n  private organizeByLayer(cluster: Cluster, nodesByLayer: Map<number, Node[]>): void {\n    cluster.groups.forEach(group => {\n      group.nodes.forEach((node) => {\n        const nodeWithLevel = node as Node & { level?: number };\n        const layer = nodeWithLevel.level || 1;\n        \n        if (!nodesByLayer.has(layer)) {\n          nodesByLayer.set(layer, []);\n        }\n        nodesByLayer.get(layer)!.push(node);\n      });\n    });\n  }\n\n  /**\n   * Organize nodes by property value and layer\n   */\n  private organizeByPropertyAndLayer(\n    nodesByLayer: Map<number, Node[]>,\n    propertyName: string,\n    nodesByTypeAndLayer: Map<string, Node[]>,\n    typeCounters: Map<string, number>\n  ): void {\n    nodesByLayer.forEach((nodes, layer) => {\n      nodes.forEach(node => {\n        const propertyValue = resolvePropertyValue(node, propertyName);\n        const key = `${propertyValue}-${layer}`;\n        \n        if (!nodesByTypeAndLayer.has(key)) {\n          nodesByTypeAndLayer.set(key, []);\n        }\n        nodesByTypeAndLayer.get(key)!.push(node);\n        \n        // Track total count per property value\n        typeCounters.set(propertyValue, (typeCounters.get(propertyValue) || 0) + 1);\n      });\n    });\n  }\n}",
      "patterns": {
        "functions": 8,
        "classes": 1,
        "interfaces": 1,
        "exports": 2,
        "imports": 2,
        "anyTypes": 0,
        "typeAssertions": 1,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/renderers/unifiedDataRenderer/core/boundsCalculator.ts",
      "relativePath": "shared/modules/renderers/unifiedDataRenderer/core/boundsCalculator.ts",
      "name": "boundsCalculator.ts",
      "size": 3886,
      "lines": 154,
      "lastModified": "2025-07-09T02:37:48.687Z",
      "content": "/**\n * Bounds Calculator for cluster and node positioning\n * Part of F002 Phase 2 refactoring - T5\n */\n\nimport { Cluster, Node } from \"../../../../interfaces/simpleDataGenerator.interface\";\nimport { POSITION_CONSTANTS } from \"../../constants/positionConstants\";\n\nexport interface Bounds {\n  minX: number;\n  maxX: number;\n  minY: number;\n  minZ: number;\n  maxZ: number;\n}\n\nexport class BoundsCalculator {\n  /**\n   * Calculate bounds for a cluster of nodes\n   */\n  public calculateClusterBounds(cluster: Cluster): Bounds {\n    if (!this.validateCluster(cluster)) {\n      return this.getEmptyBounds();\n    }\n\n    let minX = POSITION_CONSTANTS.BOUNDS.INITIAL_MIN;\n    let maxX = POSITION_CONSTANTS.BOUNDS.INITIAL_MAX;\n    let minY = POSITION_CONSTANTS.BOUNDS.INITIAL_MIN;\n    let minZ = POSITION_CONSTANTS.BOUNDS.INITIAL_MIN;\n    let maxZ = POSITION_CONSTANTS.BOUNDS.INITIAL_MAX;\n    \n    cluster.groups[0].nodes.forEach(node => {\n      if (!node.position) {\n        warn(`[BoundsCalculator] Node ${node.name} has no position`);\n        return;\n      }\n      \n      minX = math.min(minX, node.position.x);\n      maxX = math.max(maxX, node.position.x);\n      minY = math.min(minY, node.position.y);\n      minZ = math.min(minZ, node.position.z);\n      maxZ = math.max(maxZ, node.position.z);\n    });\n    \n    // Handle case where no valid positions were found\n    if (minX === POSITION_CONSTANTS.BOUNDS.INITIAL_MIN) {\n      return this.getEmptyBounds();\n    }\n    \n    const bounds = { minX, maxX, minY, minZ, maxZ };\n    this.logBounds(bounds, cluster.groups[0].nodes.size());\n    \n    return bounds;\n  }\n\n  /**\n   * Calculate bounds for a set of nodes\n   */\n  public calculateNodeSetBounds(nodes: Node[]): Bounds {\n    if (nodes.size() === 0) {\n      return this.getEmptyBounds();\n    }\n\n    let minX = POSITION_CONSTANTS.BOUNDS.INITIAL_MIN;\n    let maxX = POSITION_CONSTANTS.BOUNDS.INITIAL_MAX;\n    let minZ = POSITION_CONSTANTS.BOUNDS.INITIAL_MIN;\n    let maxZ = POSITION_CONSTANTS.BOUNDS.INITIAL_MAX;\n    \n    nodes.forEach(node => {\n      if (!node.position) return;\n      \n      minX = math.min(minX, node.position.x);\n      maxX = math.max(maxX, node.position.x);\n      minZ = math.min(minZ, node.position.z);\n      maxZ = math.max(maxZ, node.position.z);\n    });\n    \n    // Handle case where no valid positions were found\n    if (minX === POSITION_CONSTANTS.BOUNDS.INITIAL_MIN) {\n      return this.getEmptyBounds();\n    }\n    \n    return { \n      minX, \n      maxX, \n      minY: 0, // Node sets don't track Y bounds\n      minZ, \n      maxZ \n    };\n  }\n\n  /**\n   * Calculate center point of bounds\n   */\n  public calculateCenter(bounds: Bounds): Vector3 {\n    return new Vector3(\n      (bounds.minX + bounds.maxX) / 2,\n      bounds.minY,\n      (bounds.minZ + bounds.maxZ) / 2\n    );\n  }\n\n  /**\n   * Calculate dimensions from bounds\n   */\n  public calculateDimensions(bounds: Bounds): Vector3 {\n    return new Vector3(\n      bounds.maxX - bounds.minX,\n      0, // Height not calculated from bounds\n      bounds.maxZ - bounds.minZ\n    );\n  }\n\n  /**\n   * Get empty bounds object\n   */\n  private getEmptyBounds(): Bounds {\n    return {\n      minX: 0,\n      maxX: 0,\n      minY: 0,\n      minZ: 0,\n      maxZ: 0\n    };\n  }\n\n  /**\n   * Validate cluster structure\n   */\n  private validateCluster(cluster: Cluster): boolean {\n    if (!cluster) {\n      warn(\"[BoundsCalculator] Invalid cluster: cluster is null or undefined\");\n      return false;\n    }\n    \n    if (!cluster.groups || cluster.groups.size() === 0) {\n      warn(\"[BoundsCalculator] Invalid cluster: no groups found\");\n      return false;\n    }\n    \n    if (!cluster.groups[0].nodes) {\n      warn(\"[BoundsCalculator] Invalid cluster: first group has no nodes array\");\n      return false;\n    }\n    \n    return true;\n  }\n\n  /**\n   * Log bounds information\n   */\n  private logBounds(bounds: Bounds, nodeCount: number): void {\n  }\n}",
      "patterns": {
        "functions": 2,
        "classes": 1,
        "interfaces": 1,
        "exports": 2,
        "imports": 2,
        "anyTypes": 0,
        "typeAssertions": 2,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/client/services/configGui/components/axisMappingControls/constants.ts",
      "relativePath": "client/services/configGui/components/axisMappingControls/constants.ts",
      "name": "constants.ts",
      "size": 3880,
      "lines": 134,
      "lastModified": "2025-07-11T00:37:44.930Z",
      "content": "import { AXIS_DEFAULTS } from \"../../../../../shared/constants/axisDefaults\";\n\n// Store the discovered properties internally\nlet _availableProperties: string[] = [];\nlet _visualProperties: string[] = [];\nlet _propertyValueCounts: Map<string, Map<string, number>> = new Map();\n\n// Export getters to ensure we always get the latest values\nexport function getAvailableProperties(): string[] {\n  return _availableProperties;\n}\n\nexport function getPropertyValueCount(propertyName: string): number {\n  const counts = _propertyValueCounts.get(propertyName);\n  return counts ? counts.size() : 0;\n}\n\nexport function getVisualProperties(): string[] {\n  return _visualProperties;\n}\n\n/**\n * Updates the available properties from discovered data properties\n * @param discoveredProps - Array of property names discovered from data\n */\nexport function updateAvailableProperties(discoveredProps: string[]): void {\n  if (discoveredProps && discoveredProps.size() > 0) {\n    // Update axis mapping properties\n    _availableProperties = [...discoveredProps];\n    \n    // Update visual properties (include \"none\" option)\n    _visualProperties = [\"none\", ...discoveredProps];\n    \n    // Update property counts by scanning the workspace\n    updatePropertyCounts(discoveredProps);\n    \n    discoveredProps.forEach((prop, index) => {\n      \n    });\n  } else {\n    \n    _availableProperties = [];\n    _visualProperties = [\"none\"];\n    _propertyValueCounts.clear();\n  }\n}\n\n/**\n * Scans the workspace for nodes and counts unique property values\n */\nfunction updatePropertyCounts(properties: string[]): void {\n  _propertyValueCounts.clear();\n  \n  // Find all hexagon nodes in the workspace\n  const workspace = game.GetService(\"Workspace\");\n  const myStuff = workspace.FindFirstChild(\"MyStuff\");\n  if (!myStuff) return;\n  \n  const graphMaker = myStuff.FindFirstChild(\"GraphMaker\");\n  if (!graphMaker) return;\n  \n  const clusterFolder = graphMaker.FindFirstChild(\"UnifiedDataCluster\");\n  if (!clusterFolder) return;\n  \n  const nodesFolder = clusterFolder.FindFirstChild(\"Nodes\");\n  if (!nodesFolder) return;\n  \n  // Initialize counts for each property\n  properties.forEach(prop => {\n    _propertyValueCounts.set(prop, new Map<string, number>());\n  });\n  \n  // Count property values from nodes\n  nodesFolder.GetDescendants().forEach(desc => {\n    if (desc.IsA(\"Model\") && desc.Name.match(\"^Hexagon_\")) {\n      properties.forEach(prop => {\n        const value = desc.GetAttribute(prop) as string;\n        if (value !== undefined) {\n          const propCounts = _propertyValueCounts.get(prop)!;\n          const currentCount = propCounts.get(value) || 0;\n          propCounts.set(value, currentCount + 1);\n        }\n      });\n    }\n  });\n}\n\n// UI Constants\nexport const UI_CONSTANTS = {\n  FRAME: {\n    WIDTH: 300,\n    HEIGHT: 200,  // Reduced from 250 since Y-axis config section removed\n    BACKGROUND_COLOR: new Color3(0.2, 0.2, 0.2),\n    CORNER_RADIUS: 8\n  },\n  BUTTON: {\n    HEIGHT: 20,\n    BACKGROUND_COLOR: new Color3(0.3, 0.3, 0.3),\n    HOVER_COLOR: new Color3(0.35, 0.35, 0.35),\n    DISABLED_BACKGROUND_COLOR: new Color3(0.2, 0.2, 0.2),\n    CORNER_RADIUS: 4\n  },\n  TEXT: {\n    SECTION_COLOR: new Color3(0.6, 0.6, 0.6),\n    LABEL_COLOR: new Color3(0.8, 0.8, 0.8),\n    BUTTON_COLOR: new Color3(1, 1, 1),\n    DISABLED_COLOR: new Color3(0.5, 0.5, 0.5),\n    SECTION_SIZE: 12,\n    LABEL_SIZE: 14\n  },\n  SPACING: {\n    SECTION_MARGIN: 10,\n    LABEL_WIDTH: 80,\n    DROPDOWN_WIDTH: 180,\n    DROPDOWN_OFFSET: 5,\n    RADIO_SIZE: 16,\n    RADIO_INNER_SIZE: 8\n  },\n  DROPDOWN: {\n    MAX_VISIBLE_ITEMS: 8,\n    ITEM_HEIGHT: 20,\n    BACKGROUND_COLOR: new Color3(0.25, 0.25, 0.25),\n    SCROLL_BAR_THICKNESS: 4\n  }\n};\n\n// Default values\nexport const DEFAULTS = {\n  X_AXIS: AXIS_DEFAULTS.LEGACY_X_AXIS,\n  Z_AXIS: AXIS_DEFAULTS.LEGACY_Z_AXIS,\n  BACKGROUND_COLOR: \"none\",\n  BORDER_COLOR: \"none\",\n  USE_LAYER_FOR_Y_AXIS: true\n};",
      "patterns": {
        "functions": 9,
        "classes": 0,
        "interfaces": 0,
        "exports": 6,
        "imports": 1,
        "anyTypes": 0,
        "typeAssertions": 1,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": [
          {
            "name": "getAvailableProperties",
            "type": "function",
            "isExported": true
          },
          {
            "name": "getPropertyValueCount",
            "type": "function",
            "isExported": true
          },
          {
            "name": "getVisualProperties",
            "type": "function",
            "isExported": true
          },
          {
            "name": "updateAvailableProperties",
            "type": "function",
            "isExported": true
          },
          {
            "name": "updatePropertyCounts",
            "type": "function",
            "isExported": false
          }
        ]
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/server/services/colorsTest.service.ts",
      "relativePath": "server/services/colorsTest.service.ts",
      "name": "colorsTest.service.ts",
      "size": 3776,
      "lines": 126,
      "lastModified": "2025-07-09T02:35:23.164Z",
      "content": "/**\n * Colors Test Service\n * \n * Creates a line of blocks using specified BrickColors for testing\n * color appearance and selection.\n */\n\nexport class ColorsTestService {\n  private testFolder?: Folder;\n  private blocks: Part[] = [];\n\n  // Selected BrickColors to test with their numbers\n  private readonly TEST_COLORS = [\n    { name: \"Bright reddish violet\", number: 124 },\n    { name: \"Light brick yellow\", number: 226 },\n    { name: \"Bright bluish violet\", number: 110 },\n    { name: \"Bright reddish lilac\", number: 198 },\n    { name: \"Med. reddish violet\", number: 22 },\n    { name: \"Medium bluish violet\", number: 112 },\n    { name: \"Bright green\", number: 37 },\n    { name: \"Bright blue\", number: 23 },\n    { name: \"Light purple\", number: 223 },\n    { name: \"Medium green\", number: 29 }\n  ];\n\n  // Block configuration\n  private readonly BLOCK_CONFIG = {\n    SIZE: new Vector3(4, 4, 4),\n    SPACING: 5,\n    START_POSITION: new Vector3(30, 30, 30)\n  };\n\n  /**\n   * Runs the color test\n   */\n  public runTest(parentFolder: Folder): void {\n    \n    // Cleanup any previous test\n    this.cleanup();\n    \n    // Create test folder\n    this.testFolder = new Instance(\"Folder\");\n    this.testFolder.Name = \"ColorsTest\";\n    this.testFolder.Parent = parentFolder;\n    \n    // Create blocks for each color\n    this.createColorBlocks();\n    \n  }\n\n  /**\n   * Creates a block for each BrickColor in the test array\n   */\n  private createColorBlocks(): void {\n    if (!this.testFolder) return;\n\n    // Create blocks in a line\n    this.TEST_COLORS.forEach((colorData, index) => {\n      // Create BrickColor from number\n      const [success, brickColor] = pcall(() => new BrickColor(colorData.number));\n\n      if (success && brickColor) {\n        // Calculate position in line\n        const xOffset = index * (this.BLOCK_CONFIG.SIZE.X + this.BLOCK_CONFIG.SPACING);\n        const position = this.BLOCK_CONFIG.START_POSITION.add(new Vector3(xOffset, 0, 0));\n        \n        // Create block\n        const block = this.createBlock(brickColor, position, colorData.name);\n        this.blocks.push(block);\n        \n      } else {\n        warn(`❌ Failed to create BrickColor: ${colorData.name} (${colorData.number})`);\n      }\n    });\n  }\n\n  /**\n   * Creates a single colored block\n   */\n  private createBlock(brickColor: BrickColor, position: Vector3, displayName: string): Part {\n    const block = new Instance(\"Part\");\n    block.Name = `ColorBlock_${displayName}`;\n    block.Size = this.BLOCK_CONFIG.SIZE;\n    block.Position = position;\n    block.BrickColor = brickColor;\n    block.Material = Enum.Material.SmoothPlastic;\n    block.TopSurface = Enum.SurfaceType.Smooth;\n    block.BottomSurface = Enum.SurfaceType.Smooth;\n    block.Anchored = true;\n    block.Parent = this.testFolder;\n\n    // Add a billboard GUI to show the color name\n    const billboardGui = new Instance(\"BillboardGui\");\n    billboardGui.Size = new UDim2(6, 0, 1, 0);\n    billboardGui.StudsOffset = new Vector3(0, 3, 0);\n    billboardGui.AlwaysOnTop = true;\n    billboardGui.Parent = block;\n\n    const textLabel = new Instance(\"TextLabel\");\n    textLabel.Size = new UDim2(1, 0, 1, 0);\n    textLabel.BackgroundTransparency = 1;\n    textLabel.Text = displayName;\n    textLabel.TextColor3 = new Color3(1, 1, 1);\n    textLabel.TextStrokeColor3 = new Color3(0, 0, 0);\n    textLabel.TextStrokeTransparency = 0;\n    textLabel.TextScaled = true;\n    textLabel.Font = Enum.Font.SourceSansBold;\n    textLabel.Parent = billboardGui;\n\n    return block;\n  }\n\n  /**\n   * Cleans up previous test instances\n   */\n  private cleanup(): void {\n    // Destroy test folder and all blocks\n    if (this.testFolder) {\n      this.testFolder.Destroy();\n      this.testFolder = undefined;\n    }\n    \n    // Clear arrays\n    this.blocks = [];\n  }\n}",
      "patterns": {
        "functions": 1,
        "classes": 1,
        "interfaces": 0,
        "exports": 1,
        "imports": 0,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/renderers/unifiedDataRenderer/core/dataGenerator.ts",
      "relativePath": "shared/modules/renderers/unifiedDataRenderer/core/dataGenerator.ts",
      "name": "dataGenerator.ts",
      "size": 3737,
      "lines": 122,
      "lastModified": "2025-07-11T04:50:20.442Z",
      "content": "/**\n * Modular Data Generator for Unified Data Renderer\n * \n * Orchestrates node generation, link creation, and test data processing\n */\n\nimport {\n  Cluster,\n  Group,\n  Link,\n  Node,\n} from \"../../../../interfaces/simpleDataGenerator.interface\";\nimport { EnhancedGeneratorConfig } from \"../../../../interfaces/enhancedGenerator.interface\";\nimport { IDataGenerator } from \"../interfaces\";\n\n// Import modules\nimport { NodeGenerator } from \"./dataGenerator/nodeGenerator\";\nimport { LinkGenerator } from \"./dataGenerator/linkGenerator\";\nimport { PropertyManager } from \"./dataGenerator/propertyManager\";\nimport { TestDataProcessor } from \"./dataGenerator/testDataProcessor\";\n\n// Default maximum number of items to use from test data\nconst DEFAULT_MAX_DATA_ITEMS = 100;\n\n/**\n * Main DataGenerator - Orchestrates all modules\n */\nexport class DataGenerator implements IDataGenerator {\n  private nodeGenerator: NodeGenerator;\n  private linkGenerator: LinkGenerator;\n  private propertyManager: PropertyManager;\n  private testDataProcessor: TestDataProcessor;\n  private useTestData = true;\n\n  constructor() {\n    // Initialize all modules\n    this.nodeGenerator = new NodeGenerator();\n    this.linkGenerator = new LinkGenerator();\n    this.propertyManager = new PropertyManager();\n    this.testDataProcessor = new TestDataProcessor();\n  }\n\n  /**\n   * Generates cluster data from layer configuration\n   */\n  public generateClusterFromLayers(config: EnhancedGeneratorConfig): Cluster {\n    // Use test data if enabled\n    if (this.useTestData) {\n      return this.testDataProcessor.generateClusterFromTestData(config);\n    }\n\n    const allNodes: Node[] = [];\n    const nodesByLayer = new Map<number, Node[]>();\n\n    // Generate nodes for each layer using NodeGenerator\n    config.layers.forEach((layer) => {\n      const layerNodes = this.nodeGenerator.generateLayerNodes(layer, config);\n      layerNodes.forEach((node) => allNodes.push(node));\n      nodesByLayer.set(layer.layerNumber, layerNodes);\n    });\n\n    // Generate links using LinkGenerator\n    const allLinks = this.linkGenerator.generateAllLinks(nodesByLayer, config);\n\n    // Ensure all nodes have at least one connection\n    this.linkGenerator.ensureConnectivity(allNodes, allLinks, config);\n\n    // Create a single group containing all nodes\n    const mainGroup: Group = {\n      id: \"unified-group\",\n      name: \"Unified Data Group\",\n      nodes: allNodes,\n    };\n\n    // Discover properties using PropertyManager\n    const validProps = this.propertyManager.discoverAndValidateProperties(allNodes);\n\n    const cluster: Cluster = {\n      groups: [mainGroup],\n      relations: allLinks,\n      discoveredProperties: validProps,\n    };\n\n    // Write first maxDataItems objects to tempData.json for debugging\n    this.writeTempData(allNodes, allLinks, config.maxDataItems ?? DEFAULT_MAX_DATA_ITEMS);\n\n    return cluster;\n  }\n\n  /**\n   * Enable or disable test data usage\n   */\n  public setUseTestData(useTestData: boolean): void {\n    this.useTestData = useTestData;\n    this.testDataProcessor.setUseTestData(useTestData);\n  }\n\n  /**\n   * Write temporary debug data\n   */\n  private writeTempData(allNodes: Node[], allLinks: Link[], maxDataItems: number): void {\n    const first10Nodes: Node[] = [];\n    const first10Links: Link[] = [];\n\n    // Get first maxDataItems nodes\n    for (let i = 0; i < math.min(maxDataItems, allNodes.size()); i++) {\n      first10Nodes.push(allNodes[i]);\n    }\n\n    // Get first maxDataItems links\n    for (let i = 0; i < math.min(maxDataItems, allLinks.size()); i++) {\n      first10Links.push(allLinks[i]);\n    }\n\n    // Debug output\n    first10Nodes.forEach((node) => {\n      // Node properties are already set\n    });\n\n    // Links are already processed\n  }\n}",
      "patterns": {
        "functions": 2,
        "classes": 1,
        "interfaces": 0,
        "exports": 1,
        "imports": 7,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/client/services/configGui/components/axisMappingControls/components/yAxisConfigSection.ts",
      "relativePath": "client/services/configGui/components/axisMappingControls/components/yAxisConfigSection.ts",
      "name": "yAxisConfigSection.ts",
      "size": 3718,
      "lines": 123,
      "lastModified": "2025-07-10T09:45:30.794Z",
      "content": "import { getAvailableProperties, UI_CONSTANTS } from \"../constants\";\nimport { createDropdown } from \"./dropdown\";\nimport { createRadioButton, updateRadioButtonState } from \"./radioButton\";\nimport { createSectionLabel, createButton, setButtonEnabled } from \"../utils/layoutManager\";\n\ninterface YAxisConfigSectionProps {\n  parent: Frame;\n  useLayerForYAxis: boolean;\n  yAxisProperty?: string;\n  onYAxisModeChange?: (useLayer: boolean) => void;\n  onYAxisPropertyChange?: (property: string) => void;\n}\n\n/**\n * Creates the Y-axis configuration section of the controls\n */\nexport function createYAxisConfigSection({\n  parent,\n  useLayerForYAxis,\n  yAxisProperty,\n  onYAxisModeChange,\n  onYAxisPropertyChange\n}: YAxisConfigSectionProps): void {\n  // Section label\n  createSectionLabel(parent, \"Y-Axis Configuration\", 165);\n\n  // Radio button container\n  const radioContainer = new Instance(\"Frame\");\n  radioContainer.Name = \"RadioContainer\";\n  radioContainer.Position = new UDim2(0, UI_CONSTANTS.SPACING.SECTION_MARGIN, 0, 185);\n  radioContainer.Size = new UDim2(1, -UI_CONSTANTS.SPACING.SECTION_MARGIN * 2, 0, 50);\n  radioContainer.BackgroundTransparency = 1;\n  radioContainer.Parent = parent;\n\n  // Use Layer option\n  const useLayerRadio = createRadioButton({\n    parent: radioContainer,\n    position: new UDim2(0, 0, 0, 0),\n    text: \"Use Layer for Y Position\",\n    selected: useLayerForYAxis,\n    onSelect: () => {\n      if (!currentUseLayer) {\n        currentUseLayer = true;\n        updateRadioStates();\n        updatePropertyButton();\n        if (onYAxisModeChange) {\n          onYAxisModeChange(true);\n        }\n      }\n    }\n  });\n\n  // Use Property option frame\n  const usePropertyFrame = new Instance(\"Frame\");\n  usePropertyFrame.Name = \"UsePropertyFrame\";\n  usePropertyFrame.Position = new UDim2(0, 0, 0, 25);\n  usePropertyFrame.Size = new UDim2(1, 0, 0, 20);\n  usePropertyFrame.BackgroundTransparency = 1;\n  usePropertyFrame.Parent = radioContainer;\n\n  const usePropertyRadio = createRadioButton({\n    parent: usePropertyFrame,\n    position: new UDim2(0, 0, 0, 0),\n    text: \"Use Property:\",\n    selected: !useLayerForYAxis,\n    onSelect: () => {\n      if (currentUseLayer) {\n        currentUseLayer = false;\n        updateRadioStates();\n        updatePropertyButton();\n        if (onYAxisModeChange) {\n          onYAxisModeChange(false);\n        }\n        // Create dropdown when switching to property mode\n        if (onYAxisPropertyChange && yAxisPropertyButton) {\n          createDropdown({\n            button: yAxisPropertyButton,\n            currentValue: yAxisPropertyButton.Text,\n            onChange: onYAxisPropertyChange,\n            parent: parent,\n            properties: getAvailableProperties()\n          });\n        }\n      }\n    }\n  });\n\n  // Property dropdown button\n  const yAxisPropertyButton = createButton(\n    usePropertyFrame,\n    \"YAxisPropertyButton\",\n    yAxisProperty || \"Select Property\",\n    new UDim2(0, 110, 0, -2),\n    170\n  );\n\n  // Track current mode\n  let currentUseLayer = useLayerForYAxis;\n\n  // Helper functions\n  function updateRadioStates() {\n    updateRadioButtonState(useLayerRadio, currentUseLayer);\n    updateRadioButtonState(usePropertyRadio, !currentUseLayer);\n  }\n\n  function updatePropertyButton() {\n    setButtonEnabled(yAxisPropertyButton, !currentUseLayer);\n  }\n\n  // Initialize button state\n  updatePropertyButton();\n\n  // Create dropdown for Y-axis property when property mode is selected\n  if (!currentUseLayer && onYAxisPropertyChange) {\n    createDropdown({\n      button: yAxisPropertyButton,\n      currentValue: yAxisProperty || \"type\",\n      onChange: onYAxisPropertyChange,\n      parent: parent,\n      properties: getAvailableProperties()\n    });\n  }\n}",
      "patterns": {
        "functions": 5,
        "classes": 0,
        "interfaces": 1,
        "exports": 1,
        "imports": 4,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": [
          {
            "name": "createYAxisConfigSection",
            "type": "function",
            "isExported": true
          },
          {
            "name": "updateRadioStates",
            "type": "function",
            "isExported": false
          },
          {
            "name": "updatePropertyButton",
            "type": "function",
            "isExported": false
          }
        ]
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/client/services/configGui/components/spacingControls.ts",
      "relativePath": "client/services/configGui/components/spacingControls.ts",
      "name": "spacingControls.ts",
      "size": 3718,
      "lines": 96,
      "lastModified": "2025-07-09T02:31:19.092Z",
      "content": "import { GUI_CONSTANTS } from \"../constants\";\nimport type { SpacingConfig } from \"../../../../shared/interfaces/enhancedGenerator.interface\";\n\ninterface SpacingControlsProps {\n  parent: Frame;\n  spacing: SpacingConfig;\n  onSpacingChange: (field: keyof SpacingConfig, value: number) => void;\n}\n\ninterface SpacingField {\n  label: string;\n  field: keyof SpacingConfig;\n  min: number;\n  max: number;\n  default: number;\n}\n\nconst SPACING_FIELDS: SpacingField[] = [\n  { label: \"Node Height:\", field: \"nodeHeight\", min: 0.1, max: 100, default: GUI_CONSTANTS.SPACING_DEFAULTS.NODE_HEIGHT },\n  { label: \"Node Radius:\", field: \"nodeRadius\", min: 0.1, max: 20, default: GUI_CONSTANTS.SPACING_DEFAULTS.NODE_RADIUS },\n  { label: \"Layer Spacing:\", field: \"layerSpacing\", min: 0.1, max: 200, default: GUI_CONSTANTS.SPACING_DEFAULTS.LAYER_SPACING },\n  { label: \"Node Spacing:\", field: \"nodeSpacing\", min: 0.1, max: 100, default: GUI_CONSTANTS.SPACING_DEFAULTS.NODE_SPACING },\n  { label: \"Swimlane Spacing:\", field: \"swimlaneSpacing\", min: 0.1, max: 100, default: GUI_CONSTANTS.SPACING_DEFAULTS.SWIMLANE_SPACING },\n  { label: \"Link Diameter:\", field: \"linkDiameter\", min: 0.1, max: 10, default: GUI_CONSTANTS.SPACING_DEFAULTS.LINK_DIAMETER },\n  { label: \"Origin Y Offset:\", field: \"originYOffset\", min: -100, max: 100, default: 0 }\n];\n\nexport function createSpacingControls({\n  parent,\n  spacing,\n  onSpacingChange\n}: SpacingControlsProps): void {\n  const rowHeight = 25;\n  const labelWidth = 100;\n  const inputWidth = 50;\n  const startY = 35;\n  const spacing_between = 5;\n  const columnGap = 20;\n  \n  // Calculate column positions\n  const col1X = 10;\n  const col2X = col1X + labelWidth + inputWidth + columnGap;\n  \n  // Determine rows per column\n  const itemsPerColumn = math.ceil(SPACING_FIELDS.size() / 2);\n\n  SPACING_FIELDS.forEach((fieldDef, index) => {\n    // Determine column and row\n    const column = index < itemsPerColumn ? 0 : 1;\n    const rowIndex = column === 0 ? index : index - itemsPerColumn;\n    const yPos = startY + (rowIndex * (rowHeight + spacing_between));\n    const xPos = column === 0 ? col1X : col2X;\n\n    // Create label\n    const label = new Instance(\"TextLabel\");\n    label.Size = new UDim2(0, labelWidth, 0, rowHeight);\n    label.Position = new UDim2(0, xPos, 0, yPos);\n    label.BackgroundTransparency = 1;\n    label.Font = GUI_CONSTANTS.TYPOGRAPHY.LABEL_FONT;\n    label.Text = fieldDef.label;\n    label.TextColor3 = GUI_CONSTANTS.COLORS.TEXT;\n    label.TextScaled = true;\n    label.TextXAlignment = Enum.TextXAlignment.Left;\n    label.Parent = parent;\n\n    // Create input box\n    const input = new Instance(\"TextBox\");\n    input.Name = `${fieldDef.field}Input`;\n    input.Size = new UDim2(0, inputWidth, 0, rowHeight);\n    input.Position = new UDim2(0, xPos + labelWidth + 5, 0, yPos);\n    input.BackgroundColor3 = new Color3(0.25, 0.25, 0.25);\n    input.BorderSizePixel = 0;\n    input.Font = GUI_CONSTANTS.TYPOGRAPHY.INPUT_FONT;\n    input.Text = tostring(spacing[fieldDef.field] ?? fieldDef.default);\n    input.TextColor3 = GUI_CONSTANTS.COLORS.TEXT;\n    input.TextScaled = true;\n    input.Parent = parent;\n\n    const corner = new Instance(\"UICorner\");\n    corner.CornerRadius = new UDim(0, 4);\n    corner.Parent = input;\n\n    // Input validation\n    input.FocusLost.Connect(() => {\n      const value = tonumber(input.Text);\n      if (value && value >= fieldDef.min && value <= fieldDef.max) {\n        // Keep decimal precision for all fields now that minimum is 0.1\n        onSpacingChange(fieldDef.field, value);\n        input.Text = tostring(value);\n      } else {\n        // Revert to current value\n        input.Text = tostring(spacing[fieldDef.field] ?? fieldDef.default);\n      }\n    });\n  });\n}",
      "patterns": {
        "functions": 3,
        "classes": 0,
        "interfaces": 2,
        "exports": 1,
        "imports": 2,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": [
          {
            "name": "createSpacingControls",
            "type": "function",
            "isExported": true
          }
        ]
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/utils/validation/stringValidation.ts",
      "relativePath": "shared/utils/validation/stringValidation.ts",
      "name": "stringValidation.ts",
      "size": 3659,
      "lines": 145,
      "lastModified": "2025-07-11T04:40:07.539Z",
      "content": "/**\n * String validation utilities for input sanitization and security\n */\n\ninterface StringValidationOptions {\n  maxLength?: number;\n  minLength?: number;\n  allowEmpty?: boolean;\n  blockSpecialChars?: boolean;\n  customPattern?: string;\n  trimWhitespace?: boolean;\n}\n\nexport interface ValidationResult {\n  isValid: boolean;\n  error?: string;\n  sanitized?: string;\n}\n\n// Default limits based on common Roblox constraints\nexport const STRING_LIMITS = {\n  NODE_NAME: 50,\n  LABEL_TEXT: 100,\n  DESCRIPTION: 200,\n  SHORT_TEXT: 25,\n  MAX_SAFE_LENGTH: 1000,\n} as const;\n\n// Pattern for detecting potentially malicious characters\n// Note: In Roblox Lua, we use string patterns instead of regex\n\n\n\n/**\n * General string validation with configurable options\n */\nexport function validateString(\n  input: string | undefined,\n  options: StringValidationOptions = {}\n): ValidationResult {\n  // Handle undefined\n  if (input === undefined) {\n    if (options.allowEmpty) {\n      return { isValid: true, sanitized: \"\" };\n    }\n    return { isValid: false, error: \"Input is required\" };\n  }\n\n  // Ensure input is a string\n  if (!typeIs(input, \"string\")) {\n    return { isValid: false, error: \"Input must be a string\" };\n  }\n\n  let sanitized = input;\n\n  // Trim whitespace if requested\n  if (options.trimWhitespace) {\n    // Use Roblox string matching to trim\n    sanitized = string.match(sanitized, \"^%s*(.-)%s*$\")[0] as string || sanitized;\n  }\n\n  // Check empty string\n  if (sanitized.size() === 0 && !options.allowEmpty) {\n    return { isValid: false, error: \"Input cannot be empty\" };\n  }\n\n  // Check minimum length\n  if (options.minLength !== undefined && sanitized.size() < options.minLength) {\n    return {\n      isValid: false,\n      error: `Input must be at least ${options.minLength} characters`,\n    };\n  }\n\n  // Check maximum length\n  const maxLength = options.maxLength || STRING_LIMITS.MAX_SAFE_LENGTH;\n  if (sanitized.size() > maxLength) {\n    return {\n      isValid: false,\n      error: `Input exceeds maximum length of ${maxLength} characters`,\n    };\n  }\n\n  // Check for injection attempts\n  if (string.match(sanitized, \"[<>\\\"'&\\\\]\")[0] !== undefined) {\n    if (options.blockSpecialChars) {\n      // Remove dangerous characters\n      sanitized = string.gsub(sanitized, \"[<>\\\"'&\\\\]\", \"\")[0];\n      // Recheck length after sanitization\n      if (sanitized.size() === 0 && !options.allowEmpty) {\n        return {\n          isValid: false,\n          error: \"Input contains only invalid characters\",\n        };\n      }\n    } else {\n      return {\n        isValid: false,\n        error: \"Input contains potentially dangerous characters\",\n      };\n    }\n  }\n\n  // Apply custom pattern if provided\n  if (options.customPattern) {\n    if (!string.match(sanitized, options.customPattern)[0]) {\n      return {\n        isValid: false,\n        error: \"Input does not match required pattern\",\n      };\n    }\n  }\n\n  // Remove all special characters if requested\n  if (options.blockSpecialChars) {\n    sanitized = string.gsub(sanitized, \"[^a-zA-Z0-9\\s\\-_.,!?]\", \" \")[0];\n    // Clean up multiple spaces\n    sanitized = string.gsub(sanitized, \"%s+\", \" \")[0];\n    // Trim again\n    sanitized = string.match(sanitized, \"^%s*(.-)%s*$\")[0] as string || sanitized;\n  }\n\n  return {\n    isValid: true,\n    sanitized,\n  };\n}\n\n/**\n * Sanitizes a string by removing dangerous characters\n */\nexport function sanitizeString(input: string, maxLength?: number): string {\n  const result = validateString(input, {\n    maxLength: maxLength || STRING_LIMITS.MAX_SAFE_LENGTH,\n    blockSpecialChars: true,\n    trimWhitespace: true,\n    allowEmpty: true,\n  });\n\n  return result.sanitized || \"\";\n}\n\n\n\n",
      "patterns": {
        "functions": 2,
        "classes": 0,
        "interfaces": 2,
        "exports": 4,
        "imports": 0,
        "anyTypes": 0,
        "typeAssertions": 3,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": [
          {
            "name": "validateString",
            "type": "function",
            "isExported": true
          },
          {
            "name": "sanitizeString",
            "type": "function",
            "isExported": true
          }
        ]
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/client/services/configGui/components/axisMappingControls/components/axisMappingSection.ts",
      "relativePath": "client/services/configGui/components/axisMappingControls/components/axisMappingSection.ts",
      "name": "axisMappingSection.ts",
      "size": 3584,
      "lines": 142,
      "lastModified": "2025-07-11T03:10:05.568Z",
      "content": "import { UI_CONSTANTS, getAvailableProperties, getPropertyValueCount } from \"../constants\";\nimport { createButton, createLabel, createSectionLabel } from \"../utils/layoutManager\";\n\nimport { createDropdown } from \"./dropdown\";\n\ninterface AxisMappingSectionProps {\n  parent: Frame;\n  xAxisValue: string;\n  zAxisValue: string;\n  yAxisValue: string;\n  onXAxisChange: (value: string) => void;\n  onZAxisChange: (value: string) => void;\n  onYAxisChange: (value: string) => void;\n}\n\n/**\n * Creates the axis mapping section of the controls\n */\nexport function createAxisMappingSection({\n  parent,\n  xAxisValue,\n  zAxisValue,\n  yAxisValue,\n  onXAxisChange,\n  onZAxisChange,\n  onYAxisChange\n}: AxisMappingSectionProps): void {\n  const availableProps = getAvailableProperties();\n  \n  // Format properties with counts\n  const propsWithCounts = availableProps.map(prop => {\n    const count = getPropertyValueCount(prop);\n    return count > 0 ? `${prop} [${count}]` : prop;\n  });\n  \n  \n  \n  // Section label\n  createSectionLabel(parent, \"Spatial Grouping\", 5);\n\n  // X position grouping row\n  createLabel(\n    parent,\n    \"X group:\",\n    new UDim2(0, UI_CONSTANTS.SPACING.SECTION_MARGIN, 0, 25),\n    50\n  );\n\n  // Helper to format button text with count\n  const formatButtonText = (prop: string): string => {\n    const count = getPropertyValueCount(prop);\n    return count > 0 ? `${prop} [${count}]` : prop;\n  };\n\n  const xAxisButton = createButton(\n    parent,\n    \"XAxisButton\",\n    formatButtonText(xAxisValue),\n    new UDim2(0, 65, 0, 25),\n    UI_CONSTANTS.SPACING.DROPDOWN_WIDTH\n  );\n\n  // Z position grouping row\n  createLabel(\n    parent,\n    \"Z group:\",\n    new UDim2(0, UI_CONSTANTS.SPACING.SECTION_MARGIN, 0, 50),\n    50\n  );\n\n  const zAxisButton = createButton(\n    parent,\n    \"ZAxisButton\",\n    formatButtonText(zAxisValue),\n    new UDim2(0, 65, 0, 50),\n    UI_CONSTANTS.SPACING.DROPDOWN_WIDTH\n  );\n\n  // Y position grouping row\n  createLabel(\n    parent,\n    \"Y group:\",\n    new UDim2(0, UI_CONSTANTS.SPACING.SECTION_MARGIN, 0, 75),\n    50\n  );\n\n  const yAxisButton = createButton(\n    parent,\n    \"YAxisButton\",\n    formatButtonText(yAxisValue),\n    new UDim2(0, 65, 0, 75),\n    UI_CONSTANTS.SPACING.DROPDOWN_WIDTH\n  );\n\n  // Helper to extract property name from display string\n  const extractPropertyName = (displayValue: string): string => {\n    // Remove the count suffix if present (e.g., \"service [15]\" -> \"service\")\n    const match = displayValue.match(\"^([^%[]+)%s*%[?\");\n    if (match && match[1]) {\n      const result = match[1];\n      return typeIs(result, \"string\") ? result : tostring(result);\n    }\n    return displayValue;\n  };\n\n  // Create dropdown functionality\n  createDropdown({\n    button: xAxisButton,\n    currentValue: xAxisValue,\n    onChange: (value) => {\n      const propName = extractPropertyName(value);\n      xAxisButton.Text = formatButtonText(propName);\n      onXAxisChange(propName);\n    },\n    parent: parent,\n    properties: propsWithCounts\n  });\n\n  createDropdown({\n    button: zAxisButton,\n    currentValue: zAxisValue,\n    onChange: (value) => {\n      const propName = extractPropertyName(value);\n      zAxisButton.Text = formatButtonText(propName);\n      onZAxisChange(propName);\n    },\n    parent: parent,\n    properties: propsWithCounts\n  });\n\n  createDropdown({\n    button: yAxisButton,\n    currentValue: yAxisValue,\n    onChange: (value) => {\n      const propName = extractPropertyName(value);\n      yAxisButton.Text = formatButtonText(propName);\n      onYAxisChange(propName);\n    },\n    parent: parent,\n    properties: propsWithCounts\n  });\n}",
      "patterns": {
        "functions": 7,
        "classes": 0,
        "interfaces": 1,
        "exports": 1,
        "imports": 3,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": [
          {
            "name": "createAxisMappingSection",
            "type": "function",
            "isExported": true
          }
        ]
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/renderers/unifiedDataRenderer/types.ts",
      "relativePath": "shared/modules/renderers/unifiedDataRenderer/types.ts",
      "name": "types.ts",
      "size": 3533,
      "lines": 179,
      "lastModified": "2025-07-10T23:53:39.651Z",
      "content": "/**\n * Type definitions for UnifiedDataRenderer and related modules\n */\n\nimport { EnhancedGeneratorConfig } from \"../../../interfaces/enhancedGenerator.interface\";\nimport { Cluster, Node, Link } from \"../../../interfaces/simpleDataGenerator.interface\";\n\n/**\n * Lane bounds for calculating shadow dimensions\n */\nexport interface LaneBounds {\n  width: number;\n  depth: number;\n}\n\n/**\n * Bounds for a property value group\n */\nexport interface PropertyBounds {\n  minX: number;\n  maxX: number;\n  minZ: number;\n  maxZ: number;\n}\n\n/**\n * Lane position information\n */\nexport interface LanePosition {\n  z: number;\n  minZ: number;\n  maxZ: number;\n}\n\n/**\n * Lane dimensions calculation result\n */\nexport interface LaneDimensions {\n  lanePositions: Map<string, LanePosition>;\n}\n\n/**\n * Platform bounds for wall creation\n */\nexport interface PlatformBounds {\n  minX: number;\n  maxX: number;\n  minZ: number;\n  maxZ: number;\n}\n\n/**\n * Wall configuration\n */\nexport interface WallConfig {\n  platformBounds: PlatformBounds;\n  height: number;\n  parent: Instance;\n}\n\n/**\n * Y-axis property group bounds\n */\nexport interface YPropertyBounds {\n  minY: number;\n  maxY: number;\n}\n\n/**\n * Shadow block configuration\n */\nexport interface ShadowBlockConfig {\n  origin: Vector3;\n  parent: Instance;\n  height?: number;\n  width?: number;\n  depth?: number;\n  buffer?: number;\n}\n\n/**\n * Platform block configuration\n */\nexport interface PlatformBlockConfig {\n  origin: Vector3;\n  parent: Instance;\n  height?: number;\n  size?: number;\n}\n\n/**\n * Endcap configuration\n */\nexport interface EndcapConfig {\n  swimlaneBlock: Part;\n  swimlaneName: string;\n  parent: Instance;\n  gap?: number;\n  isZAxis?: boolean;\n}\n\n/**\n * Y-parallel shadow configuration\n */\nexport interface YParallelShadowConfig {\n  nodes: Node[];\n  yAxisProperty: string;\n  parent: Folder;\n  shadowWidth: number;\n  shadowDepth: number;\n}\n\n/**\n * Main renderer configuration\n */\nexport interface RendererConfig {\n  parentFolder: Folder;\n  config: EnhancedGeneratorConfig;\n  origin?: Vector3;\n}\n\n/**\n * Update configuration\n */\nexport interface UpdateConfig extends RendererConfig {\n  nodesFolder: Folder;\n  linksFolder: Folder;\n}\n\n/**\n * Lane manager result containing created blocks\n */\nexport interface LaneManagerResult {\n  xParallelLanes: Map<string, Part>;\n  zParallelLanes: Map<string, Part>;\n  allLaneBounds: LaneBounds;\n}\n\n/**\n * Platform and shadow manager result\n */\nexport interface PlatformShadowResult {\n  platform: Part;\n  shadow: Part;\n}\n\n/**\n * Wall manager result\n */\nexport interface WallManagerResult {\n  walls: Part[];\n  wallHeight: number;\n}\n\n/**\n * Type guard functions\n */\nexport function isNode(obj: unknown): obj is Node {\n  if (!obj || typeOf(obj) !== \"table\") return false;\n  const data = obj as { uuid?: unknown; position?: { x?: unknown } };\n  return typeIs(data.uuid, \"string\") && \n         data.position !== undefined &&\n         typeIs(data.position.x, \"number\");\n}\n\nexport function isLink(obj: unknown): obj is Link {\n  if (!obj || typeOf(obj) !== \"table\") return false;\n  const data = obj as { uuid?: unknown; sourceNodeUuid?: unknown; targetNodeUuid?: unknown };\n  return typeIs(data.uuid, \"string\") && \n         typeIs(data.sourceNodeUuid, \"string\") && \n         typeIs(data.targetNodeUuid, \"string\");\n}\n\nexport function isCluster(obj: unknown): obj is Cluster {\n  if (!obj || typeOf(obj) !== \"table\") return false;\n  const data = obj as { groups?: unknown; relations?: unknown };\n  return typeIs(data.groups, \"table\") && \n         typeIs(data.relations, \"table\");\n}",
      "patterns": {
        "functions": 3,
        "classes": 0,
        "interfaces": 16,
        "exports": 19,
        "imports": 2,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": [
          {
            "name": "isNode",
            "type": "function",
            "isExported": true
          },
          {
            "name": "isLink",
            "type": "function",
            "isExported": true
          },
          {
            "name": "isCluster",
            "type": "function",
            "isExported": true
          }
        ]
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/labelBlockMaker/standardizedInterfaces.ts",
      "relativePath": "shared/modules/labelBlockMaker/standardizedInterfaces.ts",
      "name": "standardizedInterfaces.ts",
      "size": 3523,
      "lines": 154,
      "lastModified": "2025-07-08T10:10:20.993Z",
      "content": "/**\n * Standardized interfaces for label block maker\n * Following the IMaker pattern\n */\n\nimport { ILabelMakerConfig } from \"../../interfaces/IMaker\";\n\n/**\n * Label configuration for each face\n */\nexport interface IFaceLabelConfig {\n  text: string;\n  textColor?: Color3;\n  backgroundColor?: Color3;\n  borderColor?: Color3;\n}\n\n/**\n * Standardized configuration for label block creation\n */\nexport interface ILabelBlockMakerConfig extends ILabelMakerConfig {\n  /** Size of the block (cube) */\n  size?: number;\n  \n  /** Rotation of the block */\n  rotation?: Vector3;\n  \n  /** Labels for each face */\n  labels?: {\n    front?: IFaceLabelConfig;\n    back?: IFaceLabelConfig;\n    left?: IFaceLabelConfig;\n    right?: IFaceLabelConfig;\n    top?: IFaceLabelConfig;\n    bottom?: IFaceLabelConfig;\n  };\n  \n  /** Block color */\n  color?: Color3;\n  \n  /** Block material */\n  material?: Enum.Material;\n  \n  /** Block transparency */\n  transparency?: number;\n  \n  /** Whether the block is anchored */\n  anchored?: boolean;\n  \n  /** Whether the block casts shadows */\n  castShadow?: boolean;\n  \n  /** Override text box properties */\n  textBoxOverrides?: {\n    textSize?: number;\n    font?: Enum.Font;\n    borderSizePixel?: number;\n  };\n}\n\n/**\n * Legacy label block configuration (for backward compatibility during migration)\n */\nexport interface LabelBlockConfigLegacy {\n  id: string | number;\n  position?: { x: number; y: number; z: number };\n  rotation?: { x: number; y: number; z: number };\n  props?: {\n    Size?: number;\n    Color?: [number, number, number];\n    Material?: string;\n    Anchored?: boolean;\n    Transparency?: number;\n    CastShadow?: boolean;\n    [key: string]: any;\n  };\n  labels?: {\n    [face: string]: {\n      text: string;\n      textColor?: Color3;\n      backgroundColor?: Color3;\n      borderColor?: Color3;\n    };\n  };\n  textBoxOverrides?: {\n    textSize?: number;\n    font?: Enum.Font;\n    borderSizePixel?: number;\n  };\n  parent?: Instance;\n}\n\n/**\n * Converts legacy config to standardized config\n */\nexport function convertLegacyLabelBlockConfig(legacy: LabelBlockConfigLegacy): ILabelBlockMakerConfig {\n  const config: ILabelBlockMakerConfig = {\n    id: legacy.id,\n    parent: legacy.parent,\n    text: \"\", // Will be set from labels\n    textBoxOverrides: legacy.textBoxOverrides,\n  };\n\n  // Convert position\n  if (legacy.position) {\n    config.position = new Vector3(\n      legacy.position.x,\n      legacy.position.y,\n      legacy.position.z\n    );\n  }\n\n  // Convert rotation\n  if (legacy.rotation) {\n    config.rotation = new Vector3(\n      legacy.rotation.x,\n      legacy.rotation.y,\n      legacy.rotation.z\n    );\n  }\n\n  // Convert props\n  if (legacy.props) {\n    if (legacy.props.Size !== undefined) {\n      config.size = legacy.props.Size;\n    }\n    if (legacy.props.Color) {\n      config.color = new Color3(\n        legacy.props.Color[0],\n        legacy.props.Color[1],\n        legacy.props.Color[2]\n      );\n    }\n    if (legacy.props.Material) {\n      config.material = legacy.props.Material as unknown as Enum.Material;\n    }\n    if (legacy.props.Transparency !== undefined) {\n      config.transparency = legacy.props.Transparency;\n    }\n    if (legacy.props.Anchored !== undefined) {\n      config.anchored = legacy.props.Anchored;\n    }\n    if (legacy.props.CastShadow !== undefined) {\n      config.castShadow = legacy.props.CastShadow;\n    }\n  }\n\n  // Convert labels\n  if (legacy.labels) {\n    config.labels = legacy.labels as any; // Labels are already in the right format\n  }\n\n  return config;\n}",
      "patterns": {
        "functions": 1,
        "classes": 0,
        "interfaces": 3,
        "exports": 4,
        "imports": 1,
        "anyTypes": 1,
        "typeAssertions": 3,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": [
          {
            "name": "convertLegacyLabelBlockConfig",
            "type": "function",
            "isExported": true
          }
        ]
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/client/services/configGui/components/dropdown.ts",
      "relativePath": "client/services/configGui/components/dropdown.ts",
      "name": "dropdown.ts",
      "size": 3515,
      "lines": 116,
      "lastModified": "2025-07-06T03:12:48.606Z",
      "content": "import { GUI_CONSTANTS } from \"../constants\";\n\ninterface DropdownProps {\n  parent: Frame;\n  position: UDim2;\n  size: UDim2;\n  items: string[];\n  defaultValue: string;\n  onChange: (value: string) => void;\n}\n\nexport function createDropdown({\n  parent,\n  position,\n  size,\n  items,\n  defaultValue,\n  onChange\n}: DropdownProps): TextButton {\n  // Create dropdown button\n  const dropdown = new Instance(\"TextButton\");\n  dropdown.Name = \"Dropdown\";\n  dropdown.Size = size;\n  dropdown.Position = position;\n  dropdown.BackgroundColor3 = GUI_CONSTANTS.COLORS.BUTTON.DEFAULT;\n  dropdown.BorderSizePixel = 0;\n  dropdown.Font = GUI_CONSTANTS.TYPOGRAPHY.INPUT_FONT;\n  dropdown.Text = defaultValue;\n  dropdown.TextColor3 = GUI_CONSTANTS.COLORS.TEXT;\n  dropdown.TextScaled = true;\n  dropdown.Parent = parent;\n\n  // Add corner radius\n  const corner = new Instance(\"UICorner\");\n  corner.CornerRadius = new UDim(0, 4);\n  corner.Parent = dropdown;\n\n  // Create dropdown list (initially hidden)\n  const listFrame = new Instance(\"Frame\");\n  listFrame.Name = \"DropdownList\";\n  listFrame.Size = new UDim2(1, 0, 0, math.min(items.size() * 25, 200));\n  listFrame.Position = new UDim2(0, 0, 1, 2);\n  listFrame.BackgroundColor3 = GUI_CONSTANTS.COLORS.BACKGROUND;\n  listFrame.BorderSizePixel = 0;\n  listFrame.Visible = false;\n  listFrame.ZIndex = 10;\n  listFrame.Parent = dropdown;\n\n  const listCorner = new Instance(\"UICorner\");\n  listCorner.CornerRadius = new UDim(0, 4);\n  listCorner.Parent = listFrame;\n\n  // Create scrolling frame\n  const scrollFrame = new Instance(\"ScrollingFrame\");\n  scrollFrame.Size = new UDim2(1, -4, 1, -4);\n  scrollFrame.Position = new UDim2(0, 2, 0, 2);\n  scrollFrame.BackgroundTransparency = 1;\n  scrollFrame.BorderSizePixel = 0;\n  scrollFrame.ScrollBarThickness = 4;\n  scrollFrame.CanvasSize = new UDim2(0, 0, 0, items.size() * 25);\n  scrollFrame.Parent = listFrame;\n\n  // Create list layout\n  const listLayout = new Instance(\"UIListLayout\");\n  listLayout.SortOrder = Enum.SortOrder.LayoutOrder;\n  listLayout.Parent = scrollFrame;\n\n  // Create items\n  items.forEach((item, index) => {\n    const itemButton = new Instance(\"TextButton\");\n    itemButton.Name = `Item_${index}`;\n    itemButton.Size = new UDim2(1, 0, 0, 25);\n    itemButton.BackgroundColor3 = GUI_CONSTANTS.COLORS.BACKGROUND;\n    itemButton.BorderSizePixel = 0;\n    itemButton.Font = GUI_CONSTANTS.TYPOGRAPHY.INPUT_FONT;\n    itemButton.Text = item;\n    itemButton.TextColor3 = GUI_CONSTANTS.COLORS.TEXT;\n    itemButton.TextScaled = true;\n    itemButton.Parent = scrollFrame;\n\n    // Hover effect\n    itemButton.MouseEnter.Connect(() => {\n      itemButton.BackgroundColor3 = GUI_CONSTANTS.COLORS.BUTTON.HOVER;\n    });\n\n    itemButton.MouseLeave.Connect(() => {\n      itemButton.BackgroundColor3 = GUI_CONSTANTS.COLORS.BACKGROUND;\n    });\n\n    // Click handler\n    itemButton.MouseButton1Click.Connect(() => {\n      dropdown.Text = item;\n      listFrame.Visible = false;\n      onChange(item);\n    });\n  });\n\n  // Toggle dropdown on click\n  let isOpen = false;\n  dropdown.MouseButton1Click.Connect(() => {\n    isOpen = !isOpen;\n    listFrame.Visible = isOpen;\n  });\n\n  // Close dropdown when clicking elsewhere\n  const userInputService = game.GetService(\"UserInputService\");\n  userInputService.InputBegan.Connect((input) => {\n    if (input.UserInputType === Enum.UserInputType.MouseButton1 && isOpen) {\n      wait(0.1); // Small delay to prevent immediate closing\n      isOpen = false;\n      listFrame.Visible = false;\n    }\n  });\n\n  return dropdown;\n}",
      "patterns": {
        "functions": 7,
        "classes": 0,
        "interfaces": 1,
        "exports": 1,
        "imports": 1,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": [
          {
            "name": "createDropdown",
            "type": "function",
            "isExported": true
          }
        ]
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/client/services/configGui/validationHandlers.ts",
      "relativePath": "client/services/configGui/validationHandlers.ts",
      "name": "validationHandlers.ts",
      "size": 3433,
      "lines": 115,
      "lastModified": "2025-07-11T04:44:58.609Z",
      "content": "/**\n * Validation Handlers for Configuration GUI\n * \n * Provides comprehensive validation for all configuration inputs\n * to ensure data integrity and prevent invalid states.\n */\n\nimport { EnhancedGeneratorConfig, LayerConfig } from \"./interfaces\";\nimport { GUI_CONSTANTS } from \"./constants\";\n\nexport interface ValidationResult {\n  isValid: boolean;\n  error?: string;\n}\n\n/**\n * Validates the entire enhanced configuration\n */\nexport function validateEnhancedConfig(config: EnhancedGeneratorConfig): ValidationResult {\n  // Validate node types\n  if (config.numNodeTypes < 1 || config.numNodeTypes > 10) {\n    return {\n      isValid: false,\n      error: \"Node types must be between 1 and 10\"\n    };\n  }\n\n  // Validate link types\n  if (config.numLinkTypes < 1 || config.numLinkTypes > 10) {\n    return {\n      isValid: false,\n      error: \"Link types must be between 1 and 10\"\n    };\n  }\n\n  // Validate layers\n  if (config.layers.size() > GUI_CONSTANTS.VALIDATION.MAX_LAYERS) {\n    return {\n      isValid: false,\n      error: `Cannot exceed ${GUI_CONSTANTS.VALIDATION.MAX_LAYERS} layers`\n    };\n  }\n\n  // Validate each layer\n  for (let i = 0; i < config.layers.size(); i++) {\n    const layer = config.layers[i];\n    const layerResult = validateLayerConfig(layer, i + 1);\n    if (!layerResult.isValid) {\n      return layerResult;\n    }\n  }\n\n  // Validate spacing\n  if (config.spacing) {\n    const spacingResult = validateSpacingConfig(config.spacing);\n    if (!spacingResult.isValid) {\n      return spacingResult;\n    }\n  }\n\n  return { isValid: true };\n}\n\n/**\n * Validates a single layer configuration\n */\nexport function validateLayerConfig(layer: LayerConfig, layerNumber: number): ValidationResult {\n  // Validate number of nodes\n  if (layer.numNodes < 1 || layer.numNodes > GUI_CONSTANTS.VALIDATION.MAX_NODES_PER_LAYER) {\n    return {\n      isValid: false,\n      error: `Layer ${layerNumber}: Number of nodes must be between 1 and ${GUI_CONSTANTS.VALIDATION.MAX_NODES_PER_LAYER}`\n    };\n  }\n\n  // Validate connections per node\n  if (layer.connectionsPerNode < 0 || layer.connectionsPerNode > GUI_CONSTANTS.VALIDATION.MAX_CONNECTIONS_PER_NODE) {\n    return {\n      isValid: false,\n      error: `Layer ${layerNumber}: Connections per node must be between 0 and ${GUI_CONSTANTS.VALIDATION.MAX_CONNECTIONS_PER_NODE}`\n    };\n  }\n\n  // Node type and link type are optional - they will be auto-generated if not specified\n  // No validation needed for these fields\n\n  return { isValid: true };\n}\n\n/**\n * Validates spacing configuration\n */\nexport function validateSpacingConfig(spacing: import(\"../../../shared/interfaces/enhancedGenerator.interface\").SpacingConfig): ValidationResult {\n  const fields = [\n    { name: \"nodeHeight\", value: spacing.nodeHeight, min: 0.1, max: 100 },\n    { name: \"nodeRadius\", value: spacing.nodeRadius, min: 0.1, max: 50 },\n    { name: \"layerSpacing\", value: spacing.layerSpacing, min: 0.1, max: 200 },\n    { name: \"nodeSpacing\", value: spacing.nodeSpacing, min: 0.1, max: 100 },\n    { name: \"swimlaneSpacing\", value: spacing.swimlaneSpacing, min: 0.1, max: 200 },\n    { name: \"linkDiameter\", value: spacing.linkDiameter, min: 0.1, max: 10 }\n  ];\n\n  for (const field of fields) {\n    if (field.value < field.min || field.value > field.max) {\n      return {\n        isValid: false,\n        error: `${field.name} must be between ${field.min} and ${field.max}`\n      };\n    }\n  }\n\n  return { isValid: true };\n}\n\n",
      "patterns": {
        "functions": 3,
        "classes": 0,
        "interfaces": 1,
        "exports": 4,
        "imports": 2,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": [
          {
            "name": "validateEnhancedConfig",
            "type": "function",
            "isExported": true
          },
          {
            "name": "validateLayerConfig",
            "type": "function",
            "isExported": true
          },
          {
            "name": "validateSpacingConfig",
            "type": "function",
            "isExported": true
          }
        ]
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/renderers/unifiedDataRenderer/managers/wallManager.ts",
      "relativePath": "shared/modules/renderers/unifiedDataRenderer/managers/wallManager.ts",
      "name": "wallManager.ts",
      "size": 3421,
      "lines": 113,
      "lastModified": "2025-07-11T03:11:57.389Z",
      "content": "/**\n * Wall Manager\n * Handles creation of vertical walls for Y-axis visualization\n */\n\nimport { Cluster, Node } from \"../../../../interfaces/simpleDataGenerator.interface\";\nimport { EnhancedGeneratorConfig } from \"../../../../interfaces/enhancedGenerator.interface\";\nimport { createVerticalWalls } from \"../../verticalWallCreator\";\nimport { PropertyValueResolver } from \"../../propertyValueResolver\";\nimport {\n  YPropertyBounds,\n  WallManagerResult\n} from \"../types\";\n\nexport class WallManager {\n  private propertyResolver: PropertyValueResolver;\n\n  constructor() {\n    this.propertyResolver = new PropertyValueResolver();\n  }\n\n  /**\n   * Creates vertical walls if Y-axis property is configured\n   */\n  public createWalls(\n    cluster: Cluster,\n    config: EnhancedGeneratorConfig,\n    targetOrigin: Vector3,\n    shadowWidth: number,\n    shadowDepth: number,\n    platform: Part\n  ): WallManagerResult | undefined {\n    print(`[WallManager] createWalls called with yAxis: ${config.axisMapping?.yAxis || \"undefined\"}`);\n    \n    if (!config.axisMapping?.yAxis || config.axisMapping.yAxis === \"none\") {\n      print(\"[WallManager] No Y-axis configured, skipping wall creation\");\n      return undefined;\n    }\n\n    print(\"[WallManager] Creating vertical walls...\");\n\n    const wallHeight = this.calculateWallHeight(cluster);\n    \n    const walls = createVerticalWalls({\n      platformBounds: {\n        minX: targetOrigin.X - shadowWidth / 2,\n        maxX: targetOrigin.X + shadowWidth / 2,\n        minZ: targetOrigin.Z - shadowDepth / 2,\n        maxZ: targetOrigin.Z + shadowDepth / 2,\n      },\n      height: wallHeight,\n      parent: platform\n    });\n\n    // Add swimlane shadows on walls\n    this.createYAxisWallSwimlanes(cluster, walls, config);\n\n    return { walls, wallHeight };\n  }\n\n  /**\n   * Calculate wall height based on cluster bounds\n   */\n  private calculateWallHeight(cluster: Cluster): number {\n    let maxY = 0;\n    cluster.groups[0].nodes.forEach((node: Node) => {\n      maxY = math.max(maxY, node.position.y);\n    });\n    return maxY + 10; // Add some padding\n  }\n\n  /**\n   * Create Y-axis swimlane shadows on walls\n   */\n  private createYAxisWallSwimlanes(\n    cluster: Cluster,\n    _walls: Part[],\n    config: EnhancedGeneratorConfig\n  ): void {\n    if (!config.axisMapping?.yAxis || config.axisMapping.yAxis === \"none\") return;\n\n    const yAxisProperty = config.axisMapping.yAxis;\n    const propertyGroups = new Map<string, YPropertyBounds>();\n    const propertyColors = new Map<string, Color3>();\n\n    // Group nodes by Y-axis property and find bounds\n    cluster.groups[0].nodes.forEach((node: Node) => {\n      const propertyValue = this.propertyResolver.getPropertyValue(\n        node,\n        yAxisProperty\n      );\n\n      if (!propertyGroups.has(propertyValue)) {\n        propertyGroups.set(propertyValue, {\n          minY: math.huge,\n          maxY: -math.huge,\n        });\n        // Use node color for the property\n        propertyColors.set(\n          propertyValue,\n          new Color3(node.color[0], node.color[1], node.color[2])\n        );\n      }\n\n      const bounds = propertyGroups.get(propertyValue)!;\n      bounds.minY = math.min(bounds.minY, node.position.y);\n      bounds.maxY = math.max(bounds.maxY, node.position.y);\n    });\n\n    // Create swimlane shadows on walls - DISABLED: remove child walls inside walls\n    // createWallSwimlanes(walls, propertyGroups, propertyColors);\n  }\n}",
      "patterns": {
        "functions": 2,
        "classes": 1,
        "interfaces": 0,
        "exports": 1,
        "imports": 5,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/client/services/configGui/components/axisMappingControls/utils/layoutManager.ts",
      "relativePath": "client/services/configGui/components/axisMappingControls/utils/layoutManager.ts",
      "name": "layoutManager.ts",
      "size": 3361,
      "lines": 103,
      "lastModified": "2025-07-09T23:26:02.022Z",
      "content": "import { UI_CONSTANTS } from \"../constants\";\n\n/**\n * Creates a section label\n */\nexport function createSectionLabel(parent: Frame, text: string, yPosition: number): TextLabel {\n  const label = new Instance(\"TextLabel\");\n  label.Name = `${text.gsub(\" \", \"\")[0]}Label`;\n  label.Text = text;\n  label.Position = new UDim2(0, UI_CONSTANTS.SPACING.SECTION_MARGIN, 0, yPosition);\n  label.Size = new UDim2(1, -UI_CONSTANTS.SPACING.SECTION_MARGIN * 2, 0, 15);\n  label.BackgroundTransparency = 1;\n  label.TextColor3 = UI_CONSTANTS.TEXT.SECTION_COLOR;\n  label.Font = Enum.Font.SourceSans;\n  label.TextSize = UI_CONSTANTS.TEXT.SECTION_SIZE;\n  label.TextXAlignment = Enum.TextXAlignment.Left;\n  label.Parent = parent;\n  \n  return label;\n}\n\n/**\n * Creates a label for a control\n */\nexport function createLabel(parent: Frame, text: string, position: UDim2, width: number): TextLabel {\n  const label = new Instance(\"TextLabel\");\n  label.Name = `${text.gsub(\" \", \"\")[0]}Label`;\n  label.Text = text;\n  label.Position = position;\n  label.Size = new UDim2(0, width, 0, UI_CONSTANTS.BUTTON.HEIGHT);\n  label.BackgroundTransparency = 1;\n  label.TextColor3 = UI_CONSTANTS.TEXT.LABEL_COLOR;\n  label.Font = Enum.Font.SourceSans;\n  label.TextSize = UI_CONSTANTS.TEXT.LABEL_SIZE;\n  label.TextXAlignment = Enum.TextXAlignment.Left;\n  label.Parent = parent;\n  \n  return label;\n}\n\n/**\n * Creates a styled button\n */\nexport function createButton(parent: Frame, name: string, text: string, position: UDim2, width: number): TextButton {\n  const button = new Instance(\"TextButton\");\n  button.Name = name;\n  button.Text = text;\n  button.Position = position;\n  button.Size = new UDim2(0, width, 0, UI_CONSTANTS.BUTTON.HEIGHT);\n  button.BackgroundColor3 = UI_CONSTANTS.BUTTON.BACKGROUND_COLOR;\n  button.BorderSizePixel = 0;\n  button.TextColor3 = UI_CONSTANTS.TEXT.BUTTON_COLOR;\n  button.Font = Enum.Font.SourceSans;\n  button.TextSize = UI_CONSTANTS.TEXT.LABEL_SIZE;\n  button.Parent = parent;\n\n  applyCornerRadius(button, UI_CONSTANTS.BUTTON.CORNER_RADIUS);\n  \n  return button;\n}\n\n/**\n * Applies corner radius to a GUI object\n */\nexport function applyCornerRadius(object: GuiObject, radius: number | UDim): void {\n  const corner = new Instance(\"UICorner\");\n  if (typeIs(radius, \"UDim\")) {\n    corner.CornerRadius = radius;\n  } else {\n    corner.CornerRadius = new UDim(0, radius);\n  }\n  corner.Parent = object;\n}\n\n/**\n * Creates the main container frame\n */\nexport function createMainFrame(gui: ScreenGui): Frame {\n  const mainFrame = new Instance(\"Frame\");\n  mainFrame.Name = \"AxisControlsFrame\";\n  mainFrame.Size = new UDim2(0, UI_CONSTANTS.FRAME.WIDTH, 0, UI_CONSTANTS.FRAME.HEIGHT);\n  mainFrame.Position = new UDim2(1, -UI_CONSTANTS.FRAME.WIDTH - 10, 0.5, -UI_CONSTANTS.FRAME.HEIGHT / 2);\n  mainFrame.BackgroundColor3 = UI_CONSTANTS.FRAME.BACKGROUND_COLOR;\n  mainFrame.BorderSizePixel = 0;\n  mainFrame.Parent = gui;\n\n  applyCornerRadius(mainFrame, UI_CONSTANTS.FRAME.CORNER_RADIUS);\n  \n  return mainFrame;\n}\n\n/**\n * Sets button enabled state\n */\nexport function setButtonEnabled(button: TextButton, enabled: boolean): void {\n  button.Active = enabled;\n  button.BackgroundColor3 = enabled \n    ? UI_CONSTANTS.BUTTON.BACKGROUND_COLOR \n    : UI_CONSTANTS.BUTTON.DISABLED_BACKGROUND_COLOR;\n  button.TextColor3 = enabled \n    ? UI_CONSTANTS.TEXT.BUTTON_COLOR \n    : UI_CONSTANTS.TEXT.DISABLED_COLOR;\n}",
      "patterns": {
        "functions": 6,
        "classes": 0,
        "interfaces": 0,
        "exports": 6,
        "imports": 1,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": [
          {
            "name": "createSectionLabel",
            "type": "function",
            "isExported": true
          },
          {
            "name": "createLabel",
            "type": "function",
            "isExported": true
          },
          {
            "name": "createButton",
            "type": "function",
            "isExported": true
          },
          {
            "name": "applyCornerRadius",
            "type": "function",
            "isExported": true
          },
          {
            "name": "createMainFrame",
            "type": "function",
            "isExported": true
          },
          {
            "name": "setButtonEnabled",
            "type": "function",
            "isExported": true
          }
        ]
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/barMaker/standardizedInterfaces.ts",
      "relativePath": "shared/modules/barMaker/standardizedInterfaces.ts",
      "name": "standardizedInterfaces.ts",
      "size": 3297,
      "lines": 135,
      "lastModified": "2025-07-08T10:10:20.991Z",
      "content": "/**\n * Standardized interfaces for bar maker\n * Following the IMaker pattern\n */\n\nimport { IVisualMakerConfig } from \"../../interfaces/IMaker\";\n\n/**\n * Standardized configuration for bar creation\n */\nexport interface IBarMakerConfig extends IVisualMakerConfig {\n  /** Rotation of the bar */\n  rotation?: Vector3;\n  \n  /** Label text for the bar */\n  label?: string;\n  \n  /** Stack index for hierarchical organization */\n  stackIndex?: number;\n  \n  /** Hexagon index within the stack */\n  hexIndex?: number;\n  \n  /** Bar index within the hexagon */\n  barIndex?: number;\n  \n  /** Background color for the label */\n  backgroundColor?: Color3;\n  \n  /** Border color for the label */\n  borderColor?: Color3;\n  \n  /** Text color for the label */\n  textColor?: Color3;\n  \n  /** Whether the bar is anchored */\n  anchored?: boolean;\n  \n  /** Surface types */\n  topSurface?: Enum.SurfaceType;\n  bottomSurface?: Enum.SurfaceType;\n}\n\n/**\n * Legacy bar configuration (for backward compatibility during migration)\n */\nexport interface BarConfigLegacy {\n  id: string | number;\n  position?: { x: number; y: number; z: number };\n  rotation?: { x: number; y: number; z: number };\n  props?: {\n    Size?: [number, number, number];\n    Color?: [number, number, number];\n    Material?: string;\n    Anchored?: boolean;\n    TopSurface?: string;\n    BottomSurface?: string;\n    Transparency?: number;\n    BackgroundColor?: Color3;\n    BorderColor?: Color3;\n    [key: string]: any;\n  };\n  label?: string;\n  stackIndex?: number;\n  hexIndex?: number;\n  barIndex?: number;\n}\n\n/**\n * Converts legacy config to standardized config\n */\nexport function convertLegacyBarConfig(legacy: BarConfigLegacy): IBarMakerConfig {\n  const config: IBarMakerConfig = {\n    id: legacy.id,\n    label: legacy.label,\n    stackIndex: legacy.stackIndex,\n    hexIndex: legacy.hexIndex,\n    barIndex: legacy.barIndex,\n  };\n\n  // Convert position\n  if (legacy.position) {\n    config.position = new Vector3(\n      legacy.position.x,\n      legacy.position.y,\n      legacy.position.z\n    );\n  }\n\n  // Convert rotation\n  if (legacy.rotation) {\n    config.rotation = new Vector3(\n      legacy.rotation.x,\n      legacy.rotation.y,\n      legacy.rotation.z\n    );\n  }\n\n  // Convert props\n  if (legacy.props) {\n    if (legacy.props.Size) {\n      config.size = new Vector3(\n        legacy.props.Size[0],\n        legacy.props.Size[1],\n        legacy.props.Size[2]\n      );\n    }\n    if (legacy.props.Color) {\n      config.color = new Color3(\n        legacy.props.Color[0],\n        legacy.props.Color[1],\n        legacy.props.Color[2]\n      );\n    }\n    if (legacy.props.Material) {\n      config.material = legacy.props.Material as unknown as Enum.Material;\n    }\n    if (legacy.props.Transparency !== undefined) {\n      config.transparency = legacy.props.Transparency;\n    }\n    if (legacy.props.Anchored !== undefined) {\n      config.anchored = legacy.props.Anchored;\n    }\n    if (legacy.props.TopSurface) {\n      config.topSurface = legacy.props.TopSurface as unknown as Enum.SurfaceType;\n    }\n    if (legacy.props.BottomSurface) {\n      config.bottomSurface = legacy.props.BottomSurface as unknown as Enum.SurfaceType;\n    }\n    config.backgroundColor = legacy.props.BackgroundColor;\n    config.borderColor = legacy.props.BorderColor;\n  }\n\n  return config;\n}",
      "patterns": {
        "functions": 1,
        "classes": 0,
        "interfaces": 2,
        "exports": 3,
        "imports": 1,
        "anyTypes": 1,
        "typeAssertions": 6,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": [
          {
            "name": "convertLegacyBarConfig",
            "type": "function",
            "isExported": true
          }
        ]
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/client/services/configGui/components/axisMappingControls/main.ts",
      "relativePath": "client/services/configGui/components/axisMappingControls/main.ts",
      "name": "main.ts",
      "size": 3217,
      "lines": 97,
      "lastModified": "2025-07-10T20:36:41.965Z",
      "content": "import { DEFAULTS, getAvailableProperties } from \"./constants\";\nimport type { AxisMappingControlsProps, CompactAxisControlsProps } from \"./types\";\nimport { getOrCreateScreenGui } from \"./utils/screenGuiManager\";\nimport { createMainFrame } from \"./utils/layoutManager\";\nimport { createAxisMappingSection } from \"./components/axisMappingSection\";\nimport { createVisualCustomizationSection } from \"./components/visualCustomizationSection\";\n\n/**\n * Creates axis mapping controls UI\n * Main entry point that maintains backward compatibility\n */\nexport function createAxisMappingControls({\n  parent,\n  axisMapping,\n  visualMapping,\n  useLayerForYAxis = DEFAULTS.USE_LAYER_FOR_Y_AXIS,\n  yAxisProperty,\n  onAxisMappingChange,\n  onVisualMappingChange,\n  onYAxisModeChange,\n  onYAxisPropertyChange\n}: AxisMappingControlsProps): void {\n  // Provide default axis mapping if not provided\n  const mapping = axisMapping || {\n    xAxis: DEFAULTS.X_AXIS,\n    zAxis: DEFAULTS.Z_AXIS\n  };\n  \n  // Provide default visual mapping if not provided\n  const visMapping = visualMapping || {\n    backgroundColor: DEFAULTS.BACKGROUND_COLOR,\n    borderColor: DEFAULTS.BORDER_COLOR\n  };\n  \n  // Get or create the shared ScreenGui\n  const gui = getOrCreateScreenGui();\n  \n  // Get the 3rd available property for Y axis default\n  const availableProps = getAvailableProperties();\n  const yAxisDefaultValue = availableProps.size() >= 3 ? availableProps[2] : \"none\";\n  \n  // Create a single compact frame for all controls\n  createCompactAxisControls({\n    gui: gui,\n    xAxisValue: mapping.xAxis,\n    zAxisValue: mapping.zAxis,\n    yAxisValue: mapping.yAxis || yAxisDefaultValue,\n    backgroundColorValue: visMapping.backgroundColor || DEFAULTS.BACKGROUND_COLOR,\n    borderColorValue: visMapping.borderColor || DEFAULTS.BORDER_COLOR,\n    onXAxisChange: (value) => onAxisMappingChange(\"xAxis\", value),\n    onZAxisChange: (value) => onAxisMappingChange(\"zAxis\", value),\n    onYAxisChange: (value) => onAxisMappingChange(\"yAxis\", value),\n    onBackgroundColorChange: (value) => onVisualMappingChange(\"backgroundColor\", value),\n    onBorderColorChange: (value) => onVisualMappingChange(\"borderColor\", value)\n  });\n}\n\n/**\n * Creates the compact axis controls frame with all sections\n * Internal function that orchestrates the UI creation\n */\nfunction createCompactAxisControls({\n  gui,\n  xAxisValue,\n  zAxisValue,\n  yAxisValue,\n  backgroundColorValue,\n  borderColorValue,\n  onXAxisChange,\n  onZAxisChange,\n  onYAxisChange,\n  onBackgroundColorChange,\n  onBorderColorChange\n}: CompactAxisControlsProps): void {\n  // Create main container frame\n  const mainFrame = createMainFrame(gui);\n\n  // Create axis mapping section\n  createAxisMappingSection({\n    parent: mainFrame,\n    xAxisValue: xAxisValue,\n    zAxisValue: zAxisValue,\n    yAxisValue: yAxisValue,\n    onXAxisChange: onXAxisChange,\n    onZAxisChange: onZAxisChange,\n    onYAxisChange: onYAxisChange\n  });\n\n  // Create visual customization section\n  createVisualCustomizationSection({\n    parent: mainFrame,\n    backgroundColorValue: backgroundColorValue,\n    borderColorValue: borderColorValue,\n    onBackgroundColorChange: onBackgroundColorChange,\n    onBorderColorChange: onBorderColorChange\n  });\n}",
      "patterns": {
        "functions": 3,
        "classes": 0,
        "interfaces": 0,
        "exports": 1,
        "imports": 6,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": [
          {
            "name": "createAxisMappingControls",
            "type": "function",
            "isExported": true
          },
          {
            "name": "createCompactAxisControls",
            "type": "function",
            "isExported": false
          }
        ]
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/barMaker/barMaker.ts",
      "relativePath": "shared/modules/barMaker/barMaker.ts",
      "name": "barMaker.ts",
      "size": 3152,
      "lines": 109,
      "lastModified": "2025-07-08T22:08:21.568Z",
      "content": "/**\n * Standardized bar maker following IMaker pattern\n */\n\nimport { IBarMakerConfig } from \"./standardizedInterfaces\";\nimport { generateAttachmentName, generateBarName, makeAttachment } from \"./utilities\";\nimport { createTextLabel } from \"../TextLabelMaker\";\n\n/**\n * Default values for bar properties\n */\nconst BAR_DEFAULTS = {\n  size: new Vector3(0.5, 0.5, 4),\n  color: new Color3(0.5, 0.5, 0.5),\n  material: Enum.Material.SmoothPlastic,\n  transparency: 0,\n  anchored: true,\n  topSurface: Enum.SurfaceType.Smooth,\n  bottomSurface: Enum.SurfaceType.Smooth,\n  rotation: new Vector3(0, -30, 0),\n};\n\n/**\n * Creates a bar part with standardized configuration\n * @param config - Standardized bar configuration\n * @returns The created bar part\n */\nexport function makeBar(config: IBarMakerConfig): Part {\n  // Extract configuration with defaults\n  const {\n    position = new Vector3(0, 0, 0),\n    rotation = BAR_DEFAULTS.rotation,\n    size = BAR_DEFAULTS.size,\n    color = BAR_DEFAULTS.color,\n    material = BAR_DEFAULTS.material,\n    transparency = BAR_DEFAULTS.transparency,\n    anchored = BAR_DEFAULTS.anchored,\n    topSurface = BAR_DEFAULTS.topSurface,\n    bottomSurface = BAR_DEFAULTS.bottomSurface,\n    label = \"Bar\",\n    stackIndex = 1,\n    hexIndex = 1,\n    barIndex = 1,\n    backgroundColor,\n    borderColor,\n    textColor,\n    parent,\n    castShadow = false,\n  } = config;\n\n  const barLength = typeIs(size, \"Vector3\") ? size.Z : size[2];\n  const frontFaceOffset = barLength / 2;\n  const backFaceOffset = -barLength / 2;\n\n  const barName = generateBarName(stackIndex, hexIndex, barIndex);\n  const bar = new Instance(\"Part\");\n  bar.Name = barName;\n  bar.Size = typeIs(size, \"Vector3\") ? size : new Vector3(size[0], size[1], size[2]);\n  bar.Position = position;\n  bar.Orientation = rotation;\n  bar.Anchored = anchored;\n  bar.Color = typeIs(color, \"Color3\") ? color : new Color3(color[0], color[1], color[2]);\n  bar.Material = material;\n  bar.TopSurface = topSurface;\n  bar.BottomSurface = bottomSurface;\n  bar.Transparency = transparency;\n  bar.CastShadow = castShadow;\n\n  // Create attachments\n  const frontAttachment = makeAttachment(\n    \"FrontAttachment\",\n    frontFaceOffset,\n    generateAttachmentName((barIndex - 1) * 2 + 1, hexIndex, stackIndex)\n  );\n  const backAttachment = makeAttachment(\n    \"BackAttachment\",\n    backFaceOffset,\n    generateAttachmentName((barIndex - 1) * 2 + 2, hexIndex, stackIndex)\n  );\n\n  frontAttachment.Parent = bar;\n  backAttachment.Parent = bar;\n\n  // Create labels\n  createTextLabel({\n    part: bar,\n    face: Enum.NormalId.Front,\n    text: label,\n    backgroundColor: backgroundColor || (typeIs(color, \"Color3\") ? color : new Color3(color[0], color[1], color[2])),\n    borderColor: borderColor,\n    textColor: textColor || borderColor,\n  });\n\n  createTextLabel({\n    part: bar,\n    face: Enum.NormalId.Back,\n    text: label,\n    backgroundColor: backgroundColor || (typeIs(color, \"Color3\") ? color : new Color3(color[0], color[1], color[2])),\n    borderColor: borderColor,\n    textColor: textColor || borderColor,\n  });\n\n  // Set parent if provided\n  if (parent) {\n    bar.Parent = parent;\n  }\n\n  return bar;\n}",
      "patterns": {
        "functions": 1,
        "classes": 0,
        "interfaces": 0,
        "exports": 1,
        "imports": 3,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": [
          {
            "name": "makeBar",
            "type": "function",
            "isExported": true
          }
        ]
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/utils/propertyDiscovery.ts",
      "relativePath": "shared/utils/propertyDiscovery.ts",
      "name": "propertyDiscovery.ts",
      "size": 3148,
      "lines": 107,
      "lastModified": "2025-07-11T04:42:16.113Z",
      "content": "/**\n * Property Discovery Utility\n * Dynamically discovers properties from data objects for axis mapping\n * Part of T9: Make Axis Filters Dynamic\n */\n\nimport { Node } from \"../interfaces/simpleDataGenerator.interface\";\n\n/**\n * System properties that should be excluded from axis mapping\n */\nconst SYSTEM_PROPERTIES = new Set([\n  \"uuid\",\n  \"name\", \n  \"type\",\n  \"color\",\n  \"position\",\n  \"attachmentNames\",\n  \"properties\", // This is the container, we want what's inside\n  \"level\" // Internal property used by layout algorithm\n]);\n\n/**\n * Discovers all unique properties from an array of nodes\n * @param nodes - Array of nodes to analyze\n * @returns Array of discovered property names suitable for axis mapping\n */\nexport function discoverNodeProperties(nodes: Node[]): string[] {\n  const propertySet = new Set<string>();\n  \n  nodes.forEach(node => {\n    // Check if node has properties object\n    if (node.properties && typeIs(node.properties, \"table\")) {\n      // Extract all property keys\n      for (const [key, _] of pairs(node.properties)) {\n        if (typeIs(key, \"string\") && !SYSTEM_PROPERTIES.has(key)) {\n          propertySet.add(key);\n        }\n      }\n    }\n  });\n  \n  // Convert set to sorted array for consistent ordering\n  const properties: string[] = [];\n  propertySet.forEach(prop => properties.push(prop));\n  properties.sort();\n  \n  return properties;\n}\n\n\n/**\n * Gets property value from a node, handling nested properties\n * @param node - Node to get property from\n * @param propertyName - Name of property to retrieve\n * @returns Property value or undefined\n */\nexport function getNodePropertyValue(node: Node, propertyName: string): unknown {\n  // Check nested properties first\n  if (node.properties) {\n    const props = node.properties as Record<string, unknown>;\n    const value = props[propertyName];\n    if (value !== undefined) {\n      return value;\n    }\n  }\n  \n  // Check top-level properties (but skip system properties)\n  if (!SYSTEM_PROPERTIES.has(propertyName)) {\n    const topLevel = node as unknown as Record<string, unknown>;\n    const value = topLevel[propertyName];\n    if (value !== undefined) {\n      return value;\n    }\n  }\n  \n  return undefined;\n}\n\n/**\n * Validates that discovered properties have enough variety for axis mapping\n * @param nodes - Array of nodes\n * @param propertyName - Property to validate\n * @returns True if property has at least 2 different values\n */\nfunction isValidAxisProperty(nodes: Node[], propertyName: string): boolean {\n  const uniqueValues = new Set<string>();\n  \n  nodes.forEach(node => {\n    const value = getNodePropertyValue(node, propertyName);\n    if (value !== undefined) {\n      uniqueValues.add(tostring(value));\n    }\n  });\n  \n  return uniqueValues.size() >= 2;\n}\n\n/**\n * Filters discovered properties to only include those suitable for axis mapping\n * @param nodes - Array of nodes\n * @param properties - Array of property names to filter\n * @returns Filtered array of properties with enough variety\n */\nexport function filterValidAxisProperties(nodes: Node[], properties: string[]): string[] {\n  return properties.filter(prop => isValidAxisProperty(nodes, prop));\n}",
      "patterns": {
        "functions": 6,
        "classes": 0,
        "interfaces": 0,
        "exports": 3,
        "imports": 1,
        "anyTypes": 0,
        "typeAssertions": 5,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": [
          {
            "name": "discoverNodeProperties",
            "type": "function",
            "isExported": true
          },
          {
            "name": "getNodePropertyValue",
            "type": "function",
            "isExported": true
          },
          {
            "name": "isValidAxisProperty",
            "type": "function",
            "isExported": false
          },
          {
            "name": "filterValidAxisProperties",
            "type": "function",
            "isExported": true
          }
        ]
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/hexagonMaker/hexagonMaker.ts",
      "relativePath": "shared/modules/hexagonMaker/hexagonMaker.ts",
      "name": "hexagonMaker.ts",
      "size": 3088,
      "lines": 107,
      "lastModified": "2025-07-10T10:06:23.249Z",
      "content": "/**\n * Standardized hexagon maker following IMaker pattern\n */\n\nimport { makeBar } from \"../barMaker\";\nimport { HEXAGON_CONSTANTS } from \"./constants\";\nimport {\n  generateHexagonName,\n  createCenterCube,\n  createCenterAttachment,\n  calculateBarDimensions\n} from \"./utilities\";\nimport { createTextLabel } from \"../TextLabelMaker\";\nimport { IHexagonMakerConfig } from \"./standardizedInterfaces\";\n\n/**\n * Creates a hexagon model with standardized configuration\n * @param config - Standardized hexagon configuration\n * @returns The created hexagon model\n */\nexport function makeHexagon(config: IHexagonMakerConfig): Model {\n  // Extract configuration with defaults\n  const {\n    id = 1,\n    position = new Vector3(0, 0, 0),\n    width = HEXAGON_CONSTANTS.DEFAULT_WIDTH,\n    height = HEXAGON_CONSTANTS.DEFAULT_HEIGHT,\n    labels = HEXAGON_CONSTANTS.DEFAULT_LABELS,\n    stackIndex = 1,\n    hexIndex = 1,\n    guid,\n    barColor = new Color3(\n      HEXAGON_CONSTANTS.DEFAULT_BAR_COLOR[0],\n      HEXAGON_CONSTANTS.DEFAULT_BAR_COLOR[1],\n      HEXAGON_CONSTANTS.DEFAULT_BAR_COLOR[2]\n    ),\n    barMaterial = Enum.Material.SmoothPlastic,\n    barTransparency = 0,\n    parent,\n  } = config;\n\n  // Calculate bar dimensions\n  const dimensions = calculateBarDimensions(width, height);\n\n  // Create the hexagon model\n  const hexModel = new Instance(\"Model\");\n  const hexagonName = generateHexagonName(stackIndex, hexIndex);\n  hexModel.Name = hexagonName;\n\n  // Set GUID as attribute if provided\n  if (guid) {\n    hexModel.SetAttribute(\"guid\", guid);\n  }\n\n  // Create center cube and attachment\n  const centerCube = createCenterCube(\n    [position.X, position.Y, position.Z], // Convert back to array for compatibility\n    hexIndex,\n    stackIndex\n  );\n  centerCube.Parent = hexModel;\n  \n  // Set the center cube as the primary part for positioning\n  hexModel.PrimaryPart = centerCube;\n  \n  createCenterAttachment(centerCube, hexIndex, stackIndex);\n\n  // Create 3 bars rotated 60 degrees apart\n  for (let i = 0; i < HEXAGON_CONSTANTS.NUM_BARS; i++) {\n    const rotation = i * HEXAGON_CONSTANTS.ROTATION_ANGLE; // 0°, 60°, 120°\n\n    // Slightly raise the first bar to avoid z-fighting with the top label\n    const yOffset = i === 0 ? 0.001 : 0;\n    \n    const bar = makeBar({\n      id: `${id}_bar${i + 1}`,\n      position: new Vector3(position.X, position.Y + yOffset, position.Z),\n      rotation: new Vector3(0, rotation, 0),\n      size: new Vector3(dimensions.barLength, dimensions.barHeight, dimensions.barWidth),\n      color: barColor,\n      material: barMaterial,\n      transparency: barTransparency,\n      label: labels[i] || `Bar${i + 1}`,\n      stackIndex: stackIndex,\n      hexIndex: hexIndex,\n      barIndex: i + 1,\n    });\n\n    bar.Parent = hexModel;\n    \n    // Add top label on the first bar only\n    if (i === 0 && labels.size() > 0) {\n      createTextLabel({\n        part: bar,\n        face: Enum.NormalId.Top,\n        text: labels[0], // Use the first label (node name)\n      });\n    }\n  }\n\n  // Set parent if provided\n  if (parent) {\n    hexModel.Parent = parent;\n  }\n\n  return hexModel;\n}",
      "patterns": {
        "functions": 1,
        "classes": 0,
        "interfaces": 0,
        "exports": 1,
        "imports": 5,
        "anyTypes": 0,
        "typeAssertions": 2,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": [
          {
            "name": "makeHexagon",
            "type": "function",
            "isExported": true
          }
        ]
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/renderers/unifiedDataRenderer/managers/yParallelShadowManager.ts",
      "relativePath": "shared/modules/renderers/unifiedDataRenderer/managers/yParallelShadowManager.ts",
      "name": "yParallelShadowManager.ts",
      "size": 3068,
      "lines": 83,
      "lastModified": "2025-07-11T05:14:17.048Z",
      "content": "/**\n * Y-Parallel Shadow Manager\n * Handles creation of Y-axis parallel shadow planes\n */\n\nimport { Cluster } from \"../../../../interfaces/simpleDataGenerator.interface\";\nimport { EnhancedGeneratorConfig } from \"../../../../interfaces/enhancedGenerator.interface\";\nimport { YParallelShadowCreator } from \"../../blocks/yParallelShadowCreator\";\nimport { LAYOUT_CONSTANTS } from \"../../constants/layoutConstants\";\nimport { LaneBounds } from \"../types\";\n\nexport class YParallelShadowManager {\n  private yParallelShadowCreator: YParallelShadowCreator;\n\n  constructor() {\n    this.yParallelShadowCreator = new YParallelShadowCreator();\n  }\n\n  /**\n   * Creates Y-parallel shadow blocks based on Y-axis property\n   */\n  public createYParallelShadows(\n    cluster: Cluster,\n    parentFolder: Folder,\n    config: EnhancedGeneratorConfig,\n    allLaneBounds: LaneBounds\n  ): Map<string, Part> | undefined {\n    if (!config.axisMapping?.yAxis || config.axisMapping.yAxis === \"none\") {\n      return undefined;\n    }\n\n    // Get the cluster folder\n    const graphMakerFolder = parentFolder.FindFirstChild(\"GraphMaker\") as Folder;\n    if (!graphMakerFolder) {\n      warn(\"[YParallelShadowManager] GraphMaker folder not found for Y-parallel shadows\");\n      return undefined;\n    }\n\n    const clusterFolder = graphMakerFolder.FindFirstChild(\"UnifiedDataCluster\") as Folder;\n    if (!clusterFolder) {\n      warn(\"[YParallelShadowManager] UnifiedDataCluster folder not found for Y-parallel shadows\");\n      return undefined;\n    }\n\n    // Create models to wrap Y shadows\n    const yShadowsModelRight = new Instance(\"Model\");\n    yShadowsModelRight.Name = \"YParallelShadowsRight\";\n    yShadowsModelRight.Parent = clusterFolder;\n    \n    const yShadowsModelBack = new Instance(\"Model\");\n    yShadowsModelBack.Name = \"YParallelShadowsBack\";\n    yShadowsModelBack.Parent = clusterFolder;\n\n    // Calculate shadow dimensions (same as group shadow)\n    const shadowWidth = allLaneBounds.width + LAYOUT_CONSTANTS.SHADOW_PADDING.X_PADDING * 2;\n    const shadowDepth = allLaneBounds.depth + LAYOUT_CONSTANTS.SHADOW_PADDING.Z_PADDING * 2;\n\n    // Create Y-parallel shadows for right side (original)\n    const yParallelShadowsRight = this.yParallelShadowCreator.createYParallelShadows({\n      nodes: cluster.groups[0].nodes,\n      yAxisProperty: config.axisMapping.yAxis,\n      parent: yShadowsModelRight,\n      shadowWidth: shadowWidth,\n      shadowDepth: shadowDepth,\n      side: \"right\"\n    });\n\n    // Create Y-parallel shadows for back side (duplicate)\n    const yParallelShadowsBack = this.yParallelShadowCreator.createYParallelShadows({\n      nodes: cluster.groups[0].nodes,\n      yAxisProperty: config.axisMapping.yAxis,\n      parent: yShadowsModelBack,\n      shadowWidth: shadowWidth,\n      shadowDepth: shadowDepth,\n      side: \"back\"\n    });\n\n    print(`[YParallelShadowManager] Created ${yParallelShadowsRight.size()} right and ${yParallelShadowsBack.size()} back Y-parallel shadow blocks`);\n    \n    // Return the right shadows for compatibility\n    return yParallelShadowsRight;\n  }\n}",
      "patterns": {
        "functions": 0,
        "classes": 1,
        "interfaces": 0,
        "exports": 1,
        "imports": 5,
        "anyTypes": 0,
        "typeAssertions": 3,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/TextLabelMaker.ts",
      "relativePath": "shared/modules/TextLabelMaker.ts",
      "name": "TextLabelMaker.ts",
      "size": 3048,
      "lines": 100,
      "lastModified": "2025-07-10T21:53:52.206Z",
      "content": "interface TextLabelConfig {\n  part: Part;\n  face: Enum.NormalId;\n  text: string;\n  parent?: Instance;\n  backgroundColor?: Color3;\n  borderColor?: Color3;\n  textColor?: Color3;\n}\n\nexport function createTextLabel({\n  part,\n  face,\n  text,\n  parent,\n  backgroundColor,\n  borderColor,\n  textColor\n}: TextLabelConfig): TextLabel {\n  // Create the SurfaceGui\n  const surfaceGui = new Instance(\"SurfaceGui\");\n  surfaceGui.Name = `SurfaceGui_${face.Name}`;\n  surfaceGui.Face = face;\n  surfaceGui.SizingMode = Enum.SurfaceGuiSizingMode.PixelsPerStud;\n  surfaceGui.PixelsPerStud = 50;\n  surfaceGui.Parent = part;\n\n  // Use provided background color or default to part color\n  const bgColor = backgroundColor || part.Color;\n\n  // Create the TextLabel (not TextBox) with barMaker styling\n  const textLabel = new Instance(\"TextLabel\");\n  textLabel.Name = \"TextLabel\";\n  textLabel.Text = text;\n  textLabel.TextScaled = true; // Scale text to fit within bounds\n  textLabel.Font = Enum.Font.SourceSans;\n  textLabel.Size = new UDim2(1, 0, 1, 0);\n  textLabel.BackgroundColor3 = bgColor;\n  textLabel.TextColor3 = textColor || new Color3(0, 0, 0);\n  textLabel.BorderSizePixel = 0; // No border on hex labels\n  textLabel.BorderColor3 = borderColor || new Color3(0, 0, 0);\n  textLabel.BorderMode = Enum.BorderMode.Inset; // Keep border inside the TextLabel bounds\n  textLabel.TextWrapped = true; // Allow wrapping in addition to scaling\n  textLabel.Parent = surfaceGui;\n\n  return textLabel;\n}\n\nexport function createTextLabelWithCustomStyling({\n  part,\n  face,\n  text,\n  textSize = 24,\n  backgroundColor,\n  textColor = new Color3(0, 0, 0),\n  font = Enum.Font.SourceSans,\n  borderSizePixel = 2, // Reduced default from 10 to 2\n  borderColor,\n  textWrapped = true,\n}: TextLabelConfig & {\n  textSize?: number;\n  backgroundColor?: Color3;\n  textColor?: Color3;\n  font?: Enum.Font;\n  borderSizePixel?: number;\n  borderColor?: Color3;\n  textWrapped?: boolean;\n}): TextLabel {\n  // Create the SurfaceGui\n  const surfaceGui = new Instance(\"SurfaceGui\");\n  surfaceGui.Name = `SurfaceGui_${face.Name}`;\n  surfaceGui.Face = face;\n  surfaceGui.SizingMode = Enum.SurfaceGuiSizingMode.PixelsPerStud;\n  surfaceGui.PixelsPerStud = 50;\n  surfaceGui.Parent = part;\n\n  // Use part color as default background if not specified\n  const defaultBackgroundColor =\n    backgroundColor ||\n    Color3.fromRGB(part.Color.R * 255, part.Color.G * 255, part.Color.B * 255);\n\n  // Create the TextLabel with custom styling\n  const textLabel = new Instance(\"TextLabel\");\n  textLabel.Name = \"TextLabel\";\n  textLabel.Text = text;\n  textLabel.TextSize = textSize;\n  textLabel.Font = font;\n  textLabel.Size = new UDim2(1, 0, 1, 0);\n  textLabel.BackgroundColor3 = defaultBackgroundColor;\n  textLabel.TextColor3 = textColor;\n  textLabel.BorderSizePixel = borderSizePixel;\n  if (borderColor) {\n    textLabel.BorderColor3 = borderColor;\n  }\n  textLabel.BorderMode = Enum.BorderMode.Inset; // Keep border inside bounds\n  textLabel.TextWrapped = textWrapped;\n  textLabel.Parent = surfaceGui;\n\n  return textLabel;\n}",
      "patterns": {
        "functions": 2,
        "classes": 0,
        "interfaces": 1,
        "exports": 2,
        "imports": 0,
        "anyTypes": 0,
        "typeAssertions": 1,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": [
          {
            "name": "createTextLabel",
            "type": "function",
            "isExported": true
          },
          {
            "name": "createTextLabelWithCustomStyling",
            "type": "function",
            "isExported": true
          }
        ]
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/TextBoxMaker.ts",
      "relativePath": "shared/modules/TextBoxMaker.ts",
      "name": "TextBoxMaker.ts",
      "size": 2963,
      "lines": 101,
      "lastModified": "2025-07-07T09:30:00.137Z",
      "content": "interface TextBoxConfig {\n  part: Part;\n  face: Enum.NormalId;\n  text: string;\n  parent?: Instance;\n  backgroundColor?: Color3;\n  borderColor?: Color3;\n  textColor?: Color3;\n}\n\nexport function createTextBox({\n  part,\n  face,\n  text,\n  parent,\n  backgroundColor,\n  borderColor,\n  textColor\n}: TextBoxConfig): TextBox {\n  // Create the SurfaceGui\n  const surfaceGui = new Instance(\"SurfaceGui\");\n  surfaceGui.Name = `SurfaceGui_${face.Name}`;\n  surfaceGui.Face = face;\n  surfaceGui.SizingMode = Enum.SurfaceGuiSizingMode.PixelsPerStud;\n  surfaceGui.PixelsPerStud = 50;\n  surfaceGui.Parent = part;\n\n  // Use provided background color or default to part color\n  const bgColor = backgroundColor || part.Color;\n\n  // Create the TextBox with barMaker styling\n  const textBox = new Instance(\"TextBox\");\n  textBox.Name = \"TextBox\";\n  textBox.Text = text;\n  textBox.TextScaled = true; // Scale text to fit within bounds\n  textBox.Font = Enum.Font.SourceSans;\n  textBox.Size = new UDim2(1, 0, 1, 0);\n  textBox.BackgroundColor3 = bgColor;\n  textBox.TextColor3 = textColor || new Color3(0, 0, 0);\n  textBox.BorderSizePixel = 2; // Reduced from 10 to prevent overflow\n  textBox.BorderColor3 = borderColor || new Color3(0, 0, 0);\n  textBox.BorderMode = Enum.BorderMode.Inset; // Keep border inside the TextBox bounds\n  textBox.TextWrapped = true; // Allow wrapping in addition to scaling\n  textBox.Parent = surfaceGui;\n\n  return textBox;\n}\n\nexport function createTextBoxWithCustomStyling({\n  part,\n  face,\n  text,\n  textSize = 24,\n  backgroundColor,\n  textColor = new Color3(0, 0, 0),\n  font = Enum.Font.SourceSans,\n  borderSizePixel = 2, // Reduced default from 10 to 2\n  borderColor,\n  textWrapped = true,\n}: TextBoxConfig & {\n  textSize?: number;\n  backgroundColor?: Color3;\n  textColor?: Color3;\n  font?: Enum.Font;\n  borderSizePixel?: number;\n  borderColor?: Color3;\n  textWrapped?: boolean;\n}): TextBox {\n  // Create the SurfaceGui\n  const surfaceGui = new Instance(\"SurfaceGui\");\n  surfaceGui.Name = `SurfaceGui_${face.Name}`;\n  surfaceGui.Face = face;\n  surfaceGui.SizingMode = Enum.SurfaceGuiSizingMode.PixelsPerStud;\n  surfaceGui.PixelsPerStud = 50;\n  surfaceGui.Parent = part;\n\n  // Use part color as default background if not specified\n  const defaultBackgroundColor =\n    backgroundColor ||\n    Color3.fromRGB(part.Color.R * 255, part.Color.G * 255, part.Color.B * 255);\n\n  // Create the TextBox with custom styling\n  const textBox = new Instance(\"TextBox\");\n  textBox.Name = \"TextBox\";\n  textBox.Text = text;\n  textBox.TextSize = textSize;\n  textBox.Font = font;\n  textBox.Size = new UDim2(1, 0, 1, 0);\n  textBox.BackgroundColor3 = defaultBackgroundColor;\n  textBox.TextColor3 = textColor;\n  textBox.BorderSizePixel = borderSizePixel;\n  if (borderColor) {\n    textBox.BorderColor3 = borderColor;\n  }\n  textBox.BorderMode = Enum.BorderMode.Inset; // Keep border inside bounds\n  textBox.TextWrapped = textWrapped;\n  textBox.Parent = surfaceGui;\n\n  return textBox;\n}\n",
      "patterns": {
        "functions": 2,
        "classes": 0,
        "interfaces": 1,
        "exports": 2,
        "imports": 0,
        "anyTypes": 0,
        "typeAssertions": 1,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": [
          {
            "name": "createTextBox",
            "type": "function",
            "isExported": true
          },
          {
            "name": "createTextBoxWithCustomStyling",
            "type": "function",
            "isExported": true
          }
        ]
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/makeOriginBlock.ts",
      "relativePath": "shared/modules/makeOriginBlock.ts",
      "name": "makeOriginBlock.ts",
      "size": 2926,
      "lines": 91,
      "lastModified": "2025-07-10T00:34:39.413Z",
      "content": "/**\n * Origin Block Module\n * Creates a labeled orientation reference block\n */\n\n// Legacy function signature for backward compatibility\nimport { makeLabelBlock } from \"./labelBlockMaker\";\n\nexport interface OriginBlockConfig {\n  origin: { x: number; y: number; z: number };\n  parent: Instance;\n  offset?: { x: number; y: number; z: number };\n  size?: number;\n}\n\n/**\n * Creates an orientation reference block with labeled faces\n */\nexport function makeOriginBlock({\n  origin,\n  parent,\n  offset = { x: 0, y: 0, z: 0 },\n  size = 4\n}: OriginBlockConfig): Part {\n  const orientationFolder = new Instance(\"Folder\");\n  orientationFolder.Name = \"OrientationReference\";\n  orientationFolder.Parent = parent;\n\n  const block = makeLabelBlock({\n    id: \"orientation-ref\",\n    text: \"ORIENT\", // Required text field\n    position: new Vector3(\n      origin.x + offset.x,\n      origin.y + offset.y,\n      origin.z + offset.z\n    ),\n    size: size,\n    color: new Color3(0.3, 0.3, 0.3), // Dark gray\n    transparency: 0.2,\n    material: Enum.Material.SmoothPlastic,\n    anchored: true,\n    castShadow: false,\n    labels: {\n      front: {\n        text: \"FRONT\\n<-- X -->\",\n        textColor: new Color3(0, 0, 0.8), // Dark blue text\n        backgroundColor: new Color3(0.5, 0.5, 0.8), // Medium blue background\n        borderColor: new Color3(0, 0, 0.3), // Very dark blue border\n      },\n      back: {\n        text: \"BACK\\n<-- X -->\",\n        textColor: new Color3(0, 0, 0.8), // Dark blue text\n        backgroundColor: new Color3(0.5, 0.5, 0.8), // Medium blue background\n        borderColor: new Color3(0, 0, 0.3), // Very dark blue border\n      },\n      left: {\n        text: \"LEFT\\n<-- Z -->\",\n        textColor: new Color3(0.8, 0, 0), // Dark red text\n        backgroundColor: new Color3(0.8, 0.5, 0.5), // Medium red background\n        borderColor: new Color3(0.3, 0, 0), // Very dark red border\n      },\n      right: {\n        text: \"RIGHT\\n<-- Z -->\",\n        textColor: new Color3(0.8, 0, 0), // Dark red text\n        backgroundColor: new Color3(0.8, 0.5, 0.5), // Medium red background\n        borderColor: new Color3(0.3, 0, 0), // Very dark red border\n      },\n      top: {\n        text: \"TOP\\nX-Y\",\n        textColor: new Color3(0, 0.8, 0), // Dark green text\n        backgroundColor: new Color3(0.5, 0.8, 0.5), // Medium green background\n        borderColor: new Color3(0, 0.3, 0), // Very dark green border\n      },\n      bottom: {\n        text: \"BOTTOM\\nX-Y\",\n        textColor: new Color3(0, 0.8, 0), // Dark green text\n        backgroundColor: new Color3(0.5, 0.8, 0.5), // Medium green background\n        borderColor: new Color3(0, 0.3, 0), // Very dark green border\n      },\n    },\n    textBoxOverrides: {\n      textSize: 50, // Reduced by 50% from 100\n      font: Enum.Font.SourceSansBold,\n      borderSizePixel: 10, // Wider borders for better visibility\n    },\n    parent: orientationFolder,\n  });\n\n  \n  return block;\n}",
      "patterns": {
        "functions": 2,
        "classes": 0,
        "interfaces": 1,
        "exports": 2,
        "imports": 1,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": [
          {
            "name": "makeOriginBlock",
            "type": "function",
            "isExported": true
          }
        ]
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/interfaces/IMaker.ts",
      "relativePath": "shared/interfaces/IMaker.ts",
      "name": "IMaker.ts",
      "size": 2858,
      "lines": 128,
      "lastModified": "2025-07-06T22:52:45.635Z",
      "content": "/**\n * IMaker - Interface for all maker functions/classes\n * \n * Defines the contract that all makers should follow for consistent API\n */\n\n/**\n * Base configuration for all makers\n */\nexport interface IMakerConfig {\n  /** Optional unique identifier */\n  id?: string | number;\n  \n  /** Parent instance to attach the created object to */\n  parent?: Instance;\n  \n  /** Position in 3D space */\n  position?: Vector3;\n  \n  /** Optional name for the created instance */\n  name?: string;\n}\n\n/**\n * Standard result from a maker function\n */\nexport interface IMakerResult<T extends Instance = Instance> {\n  /** The primary instance created */\n  instance: T;\n  \n  /** Any child instances that should be tracked */\n  children?: Instance[];\n  \n  /** Cleanup function to destroy all created instances */\n  cleanup?: () => void;\n}\n\n/**\n * Interface for maker functions\n * Makers are functions that create Roblox instances\n */\nexport interface IMakerFunction<TConfig extends IMakerConfig = IMakerConfig, TResult extends Instance = Instance> {\n  (config: TConfig): TResult;\n}\n\n/**\n * Interface for maker classes\n * More complex makers may be implemented as classes\n */\nexport interface IMakerClass<TConfig extends IMakerConfig = IMakerConfig, TResult extends Instance = Instance> {\n  /**\n   * Creates an instance based on the configuration\n   */\n  make(config: TConfig): TResult;\n  \n  /**\n   * Optional method to validate configuration before creating\n   */\n  validate?(config: TConfig): boolean;\n  \n  /**\n   * Optional method to get default configuration\n   */\n  getDefaults?(): Partial<TConfig>;\n}\n\n/**\n * Extended maker configuration with visual properties\n */\nexport interface IVisualMakerConfig extends IMakerConfig {\n  /** Size of the object */\n  size?: Vector3 | number[];\n  \n  /** Color of the object */\n  color?: Color3 | number[];\n  \n  /** Material of the object */\n  material?: Enum.Material;\n  \n  /** Transparency (0-1) */\n  transparency?: number;\n  \n  /** Whether the object casts shadows */\n  castShadow?: boolean;\n}\n\n/**\n * Configuration for label makers\n */\nexport interface ILabelMakerConfig extends IMakerConfig {\n  /** Text content */\n  text: string;\n  \n  /** Font to use */\n  font?: Enum.Font;\n  \n  /** Text color */\n  textColor?: Color3;\n  \n  /** Text size */\n  textSize?: number;\n  \n  /** Background color */\n  backgroundColor?: Color3;\n  \n  /** Background transparency */\n  backgroundTransparency?: number;\n}\n\n/**\n * Configuration for connector/rope makers\n */\nexport interface IConnectorMakerConfig extends IMakerConfig {\n  /** Start position or attachment */\n  startPoint: Vector3 | Attachment;\n  \n  /** End position or attachment */\n  endPoint: Vector3 | Attachment;\n  \n  /** Thickness of the connector */\n  thickness?: number;\n  \n  /** Color of the connector */\n  color?: Color3;\n  \n  /** Material of the connector */\n  material?: Enum.Material;\n}",
      "patterns": {
        "functions": 1,
        "classes": 0,
        "interfaces": 7,
        "exports": 7,
        "imports": 0,
        "anyTypes": 0,
        "typeAssertions": 1,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/renderers/blocks/blockDimensionCalculator.ts",
      "relativePath": "shared/modules/renderers/blocks/blockDimensionCalculator.ts",
      "name": "blockDimensionCalculator.ts",
      "size": 2845,
      "lines": 106,
      "lastModified": "2025-07-09T02:29:36.189Z",
      "content": "/**\n * Block Dimension Calculator\n * Calculates dimensions for various block types\n * Part of F002 Phase 2 refactoring - T6\n */\n\nimport { BLOCK_CONSTANTS } from \"../constants/blockConstants\";\n\nexport interface NodeBounds {\n  minX: number;\n  maxX: number;\n  minZ: number;\n  maxZ: number;\n}\n\nexport interface BlockDimensions {\n  width: number;\n  depth: number;\n}\n\nexport class BlockDimensionCalculator {\n  /**\n   * Calculate block dimensions based on node bounds\n   */\n  public calculateBlockDimensions(\n    nodeBounds: NodeBounds,\n    padding: number = 0\n  ): BlockDimensions {\n    const nodeWidth = nodeBounds.maxX - nodeBounds.minX;\n    const nodeDepth = nodeBounds.maxZ - nodeBounds.minZ;\n    \n    const width = nodeWidth + padding * 2;\n    const depth = nodeDepth + padding * 2;\n    \n    // Ensure minimum size\n    const finalWidth = math.max(width, BLOCK_CONSTANTS.DIMENSIONS.MIN_BLOCK_SIZE);\n    const finalDepth = math.max(depth, BLOCK_CONSTANTS.DIMENSIONS.MIN_BLOCK_SIZE);\n    \n    return {\n      width: finalWidth,\n      depth: finalDepth,\n    };\n  }\n\n  /**\n   * Calculate swimlane dimensions with buffer\n   */\n  public calculateSwimlaneeDimensions(\n    bounds: NodeBounds,\n    buffer: number = BLOCK_CONSTANTS.DIMENSIONS.SHADOW_BUFFER\n  ): { size: Vector3; position: Vector3 } {\n    const width = bounds.maxX - bounds.minX + buffer * 2;\n    const depth = bounds.maxZ - bounds.minZ + buffer * 2;\n    const centerX = (bounds.minX + bounds.maxX) / 2;\n    const centerZ = (bounds.minZ + bounds.maxZ) / 2;\n    \n    return {\n      size: new Vector3(width, BLOCK_CONSTANTS.DIMENSIONS.SHADOW_BLOCK_HEIGHT, depth),\n      position: new Vector3(centerX, 0, centerZ) // Y will be set by caller\n    };\n  }\n\n  /**\n   * Calculate platform dimensions with bounds\n   */\n  public calculatePlatformDimensions(\n    clusterBounds: NodeBounds,\n    extraPadding: number = 50\n  ): BlockDimensions {\n    return this.calculateBlockDimensions(clusterBounds, extraPadding);\n  }\n\n  /**\n   * Calculate shadow block dimensions\n   */\n  public calculateShadowDimensions(\n    clusterBounds: NodeBounds,\n    shadowBuffer: number = BLOCK_CONSTANTS.DIMENSIONS.SHADOW_BUFFER\n  ): BlockDimensions {\n    return this.calculateBlockDimensions(clusterBounds, shadowBuffer);\n  }\n\n  /**\n   * Calculate minimum bounding box for a set of bounds\n   */\n  public calculateCombinedBounds(boundsList: NodeBounds[]): NodeBounds {\n    if (boundsList.size() === 0) {\n      return { minX: 0, maxX: 0, minZ: 0, maxZ: 0 };\n    }\n\n    let minX = math.huge;\n    let maxX = -math.huge;\n    let minZ = math.huge;\n    let maxZ = -math.huge;\n\n    boundsList.forEach(bounds => {\n      minX = math.min(minX, bounds.minX);\n      maxX = math.max(maxX, bounds.maxX);\n      minZ = math.min(minZ, bounds.minZ);\n      maxZ = math.max(maxZ, bounds.maxZ);\n    });\n\n    return { minX, maxX, minZ, maxZ };\n  }\n\n}",
      "patterns": {
        "functions": 1,
        "classes": 1,
        "interfaces": 2,
        "exports": 3,
        "imports": 1,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/client/services/configGui/components/axisMappingControls/components/radioButton.ts",
      "relativePath": "client/services/configGui/components/axisMappingControls/components/radioButton.ts",
      "name": "radioButton.ts",
      "size": 2782,
      "lines": 83,
      "lastModified": "2025-07-09T23:28:56.588Z",
      "content": "import { UI_CONSTANTS } from \"../constants\";\nimport type { RadioButtonProps } from \"../types\";\n\n/**\n * Creates a radio button control\n */\nexport function createRadioButton({\n  parent,\n  position,\n  text,\n  selected,\n  onSelect\n}: RadioButtonProps): Frame {\n  const container = new Instance(\"Frame\");\n  container.Name = \"RadioButtonContainer\";\n  container.Position = position;\n  container.Size = new UDim2(1, 0, 0, UI_CONSTANTS.SPACING.RADIO_SIZE);\n  container.BackgroundTransparency = 1;\n  container.Parent = parent;\n\n  // Radio button circle\n  const radioButton = new Instance(\"TextButton\");\n  radioButton.Name = \"RadioButton\";\n  radioButton.Position = new UDim2(0, 0, 0, 0);\n  radioButton.Size = new UDim2(0, UI_CONSTANTS.SPACING.RADIO_SIZE, 0, UI_CONSTANTS.SPACING.RADIO_SIZE);\n  radioButton.BackgroundColor3 = UI_CONSTANTS.BUTTON.BACKGROUND_COLOR;\n  radioButton.BorderSizePixel = 0;\n  radioButton.Text = \"\";\n  radioButton.Parent = container;\n\n  const radioCorner = new Instance(\"UICorner\");\n  radioCorner.CornerRadius = new UDim(0.5, 0);\n  radioCorner.Parent = radioButton;\n\n  // Inner circle (visible when selected)\n  const innerCircle = new Instance(\"Frame\");\n  innerCircle.Name = \"InnerCircle\";\n  innerCircle.Position = new UDim2(0.5, 0, 0.5, 0);\n  innerCircle.AnchorPoint = new Vector2(0.5, 0.5);\n  innerCircle.Size = new UDim2(0, UI_CONSTANTS.SPACING.RADIO_INNER_SIZE, 0, UI_CONSTANTS.SPACING.RADIO_INNER_SIZE);\n  innerCircle.BackgroundColor3 = UI_CONSTANTS.TEXT.BUTTON_COLOR;\n  innerCircle.BorderSizePixel = 0;\n  innerCircle.Visible = selected;\n  innerCircle.Parent = radioButton;\n\n  const innerCorner = new Instance(\"UICorner\");\n  innerCorner.CornerRadius = new UDim(0.5, 0);\n  innerCorner.Parent = innerCircle;\n\n  // Label\n  const label = new Instance(\"TextLabel\");\n  label.Name = \"RadioLabel\";\n  label.Text = text;\n  label.Position = new UDim2(0, 25, 0, 0);\n  label.Size = new UDim2(1, -25, 0, UI_CONSTANTS.SPACING.RADIO_SIZE);\n  label.BackgroundTransparency = 1;\n  label.TextColor3 = UI_CONSTANTS.TEXT.LABEL_COLOR;\n  label.Font = Enum.Font.SourceSans;\n  label.TextSize = UI_CONSTANTS.TEXT.LABEL_SIZE;\n  label.TextXAlignment = Enum.TextXAlignment.Left;\n  label.Parent = container;\n\n  // Click handler\n  radioButton.MouseButton1Click.Connect(() => {\n    onSelect();\n  });\n\n  return container;\n}\n\n/**\n * Updates the selected state of a radio button\n */\nexport function updateRadioButtonState(radioContainer: Frame, selected: boolean): void {\n  // Find the inner circle by traversing the children\n  const radioButton = radioContainer.FindFirstChild(\"RadioButton\") as TextButton | undefined;\n  if (radioButton) {\n    const innerCircle = radioButton.FindFirstChild(\"InnerCircle\") as Frame | undefined;\n    if (innerCircle) {\n      innerCircle.Visible = selected;\n    }\n  }\n}",
      "patterns": {
        "functions": 3,
        "classes": 0,
        "interfaces": 0,
        "exports": 2,
        "imports": 2,
        "anyTypes": 0,
        "typeAssertions": 2,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": [
          {
            "name": "createRadioButton",
            "type": "function",
            "isExported": true
          },
          {
            "name": "updateRadioButtonState",
            "type": "function",
            "isExported": true
          }
        ]
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/server/services/main/game.service.ts",
      "relativePath": "server/services/main/game.service.ts",
      "name": "game.service.ts",
      "size": 2760,
      "lines": 92,
      "lastModified": "2025-07-11T04:18:03.597Z",
      "content": "import { BaseService } from \"../../../shared/services/base/BaseService\";\nimport { ConfigGUIServerService } from \"../configGUIServer.service\";\nimport { GraphInitializerService } from \"../graphInitializer.service\";\nimport { initializeDev2Features } from \"./dev2features\";\nimport { makeOriginBlock } from \"../../../shared/modules/makeOriginBlock\";\n\n// Origin configuration for 3D positioning\nconst ORIGIN = {\n  x: 0,\n  y: 0, // BASE_Y from RENDERER_CONSTANTS\n  z: 0,\n};\n\n// Maximum number of data items to generate\nconst MAX_DATA_ITEMS = 200;\n\nexport class GameService extends BaseService {\n  private configGUIServer?: ConfigGUIServerService;\n  private graphInitializer: GraphInitializerService;\n  private myStuffFolder!: Folder;\n  private gameStarted = false; // Flag to prevent duplicate initialization\n\n  constructor() {\n    super(\"GameService\");\n    this.graphInitializer = new GraphInitializerService();\n  }\n\n  public startGame(): void {\n    if (this.gameStarted) {\n      return;\n    }\n\n    this.gameStarted = true;\n\n    // Create or find the MyStuff folder at the start\n    this.myStuffFolder = game.Workspace.FindFirstChild(\"MyStuff\") as Folder;\n    if (!this.myStuffFolder) {\n      this.myStuffFolder = new Instance(\"Folder\");\n      this.myStuffFolder.Name = \"MyStuff\";\n      this.myStuffFolder.Parent = game.Workspace;\n      // Track the folder for cleanup\n      this.addInstance(this.myStuffFolder);\n    }\n\n    // Skip initial data generation - let user generate via GUI\n    // The GUI starts in enhanced mode with its own configuration\n\n    // Create orientation reference block at origin\n    if (true) {\n      makeOriginBlock({\n        origin: { x: ORIGIN.x, y: ORIGIN.y + 20, z: ORIGIN.z }, // Offset cube by 20 in Y\n        parent: this.myStuffFolder,\n      });\n    }\n\n    // Initialize the configuration GUI server with origin\n    this.configGUIServer = new ConfigGUIServerService(\n      this.myStuffFolder,\n      new Vector3(ORIGIN.x, ORIGIN.y, ORIGIN.z)\n    );\n\n    // Set up graph initializer with the GUI server\n    this.graphInitializer.setConfigGUIServer(this.configGUIServer);\n\n    // Initialize the graph with configuration including max data items\n    this.graphInitializer.initializeGraphWithMaxItems(MAX_DATA_ITEMS);\n\n    // Initialize dev2 features\n    if (false) {\n      initializeDev2Features(this.myStuffFolder);\n    }\n  }\n\n  /**\n   * Custom cleanup logic\n   */\n  protected onDestroy(): void {\n    // Destroy services in reverse order of creation\n    if (this.configGUIServer) {\n      this.configGUIServer.destroy();\n      this.configGUIServer = undefined;\n    }\n\n    const initializer = this.graphInitializer as unknown as {\n      destroy?: () => void;\n    };\n    if (initializer.destroy) {\n      initializer.destroy();\n    }\n  }\n}\n",
      "patterns": {
        "functions": 0,
        "classes": 1,
        "interfaces": 0,
        "exports": 1,
        "imports": 5,
        "anyTypes": 0,
        "typeAssertions": 2,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [
          {
            "name": "GameService",
            "methodCount": 8,
            "methods": [
              "startGame",
              "if",
              "if",
              "if",
              "if",
              "onDestroy",
              "if",
              "if"
            ]
          }
        ],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/labelBlockMaker/labelBlockMaker.ts",
      "relativePath": "shared/modules/labelBlockMaker/labelBlockMaker.ts",
      "name": "labelBlockMaker.ts",
      "size": 2754,
      "lines": 94,
      "lastModified": "2025-07-08T22:08:21.570Z",
      "content": "/**\n * Standardized label block maker following IMaker pattern\n */\n\nimport { ILabelBlockMakerConfig } from \"./standardizedInterfaces\";\nimport { createLabelsForBlock } from \"./utilities\";\nimport { LABEL_BLOCK_CONSTANTS } from \"./constants\";\nimport { padNumber } from \"../../utils/stringUtils\";\n\n/**\n * Default values for label block properties\n */\nconst LABEL_BLOCK_DEFAULTS = {\n  size: 4,\n  color: new Color3(0.5, 0.5, 0.5),\n  material: Enum.Material.SmoothPlastic,\n  transparency: 0,\n  anchored: true,\n  castShadow: false,\n  position: new Vector3(0, 0, 0),\n  rotation: new Vector3(0, 0, 0),\n};\n\n/**\n * Creates a label block part with standardized configuration\n * @param config - Standardized label block configuration\n * @returns The created label block part\n */\nexport function makeLabelBlock(config: ILabelBlockMakerConfig): Part {\n  // Extract configuration with defaults\n  const {\n    id = 1,\n    position = LABEL_BLOCK_DEFAULTS.position,\n    rotation = LABEL_BLOCK_DEFAULTS.rotation,\n    size = LABEL_BLOCK_DEFAULTS.size,\n    color = LABEL_BLOCK_DEFAULTS.color,\n    material = LABEL_BLOCK_DEFAULTS.material,\n    transparency = LABEL_BLOCK_DEFAULTS.transparency,\n    anchored = LABEL_BLOCK_DEFAULTS.anchored,\n    castShadow = LABEL_BLOCK_DEFAULTS.castShadow,\n    labels = {},\n    textBoxOverrides = {},\n    parent,\n  } = config;\n\n  // Create the cube part\n  const block = new Instance(\"Part\");\n  block.Name = `${LABEL_BLOCK_CONSTANTS.NAME_PREFIX}${padNumber(\n    math.floor(tonumber(id) || 1), \n    LABEL_BLOCK_CONSTANTS.PAD_LENGTH\n  )}`;\n  \n  // Apply properties\n  block.Size = new Vector3(size, size, size);\n  block.Position = position;\n  block.Orientation = rotation;\n  block.Anchored = anchored;\n  block.TopSurface = Enum.SurfaceType.Smooth;\n  block.BottomSurface = Enum.SurfaceType.Smooth;\n  block.CastShadow = castShadow;\n  block.Color = color;\n  block.Material = material;\n  block.Transparency = transparency;\n  \n  // Apply any additional properties that might be passed\n  // (removed the generic property application for type safety)\n  \n  // Set parent if provided\n  if (parent) {\n    block.Parent = parent;\n  }\n  \n  // Add labels to each face\n  // Check if labels object has any entries\n  const labelKeys = [];\n  for (const [key] of pairs(labels)) {\n    labelKeys.push(key);\n  }\n  \n  if (labels && labelKeys.size() > 0) {\n    // Create face mapping\n    const faceMap: [keyof typeof labels, Enum.NormalId][] = [\n      [\"front\", Enum.NormalId.Front],\n      [\"back\", Enum.NormalId.Back],\n      [\"left\", Enum.NormalId.Left],\n      [\"right\", Enum.NormalId.Right],\n      [\"top\", Enum.NormalId.Top],\n      [\"bottom\", Enum.NormalId.Bottom],\n    ];\n    createLabelsForBlock(block, labels as any, textBoxOverrides, faceMap);\n  }\n  \n  return block;\n}",
      "patterns": {
        "functions": 1,
        "classes": 0,
        "interfaces": 0,
        "exports": 1,
        "imports": 4,
        "anyTypes": 0,
        "typeAssertions": 2,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": [
          {
            "name": "makeLabelBlock",
            "type": "function",
            "isExported": true
          }
        ]
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/utils/validation/arrayValidation.ts",
      "relativePath": "shared/utils/validation/arrayValidation.ts",
      "name": "arrayValidation.ts",
      "size": 2691,
      "lines": 130,
      "lastModified": "2025-07-11T04:40:35.332Z",
      "content": "/**\n * Array validation utilities for bounds checking and type safety\n */\n\ninterface ArrayValidationOptions {\n  maxSize?: number;\n  minSize?: number;\n  allowEmpty?: boolean;\n  itemValidator?: (item: unknown) => boolean;\n}\n\ninterface ArrayValidationResult<T = unknown> {\n  isValid: boolean;\n  error?: string;\n  sanitized?: T[];\n}\n\n// Default array size limits\nexport const ARRAY_LIMITS = {\n  MAX_NODES: 1000,\n  MAX_LAYERS: 20,\n  MAX_CONNECTIONS: 5000,\n  MAX_LABELS: 10,\n  MAX_SAFE_SIZE: 10000,\n} as const;\n\n/**\n * Validates array bounds and optionally validates each item\n */\nexport function validateArray<T extends defined>(\n  input: unknown,\n  options: ArrayValidationOptions = {}\n): ArrayValidationResult<T> {\n  // Check if input is an array\n  if (!typeIs(input, \"table\")) {\n    return { isValid: false, error: \"Input must be an array\" };\n  }\n\n  const arr = input as T[];\n\n  // Check empty array\n  if (arr.size() === 0 && !options.allowEmpty) {\n    return { isValid: false, error: \"Array cannot be empty\" };\n  }\n\n  // Check minimum size\n  if (options.minSize !== undefined && arr.size() < options.minSize) {\n    return {\n      isValid: false,\n      error: `Array must have at least ${options.minSize} items`,\n    };\n  }\n\n  // Check maximum size\n  const maxSize = options.maxSize || ARRAY_LIMITS.MAX_SAFE_SIZE;\n  if (arr.size() > maxSize) {\n    return {\n      isValid: false,\n      error: `Array exceeds maximum size of ${maxSize} items`,\n    };\n  }\n\n  // Validate each item if validator provided\n  if (options.itemValidator) {\n    const sanitized: T[] = [];\n    \n    for (let i = 0; i < arr.size(); i++) {\n      if (!options.itemValidator(arr[i])) {\n        return {\n          isValid: false,\n          error: `Invalid item at index ${i}`,\n        };\n      }\n      sanitized.push(arr[i]);\n    }\n    \n    return {\n      isValid: true,\n      sanitized,\n    };\n  }\n\n  return {\n    isValid: true,\n    sanitized: [...arr],\n  };\n}\n\n\n\n\n/**\n * Checks for circular references in an array\n */\nexport function hasCircularReference(arr: unknown[]): boolean {\n  const seen = new Set<unknown>();\n  \n  function checkCircular(obj: unknown): boolean {\n    if (obj === undefined || !typeIs(obj, \"table\")) {\n      return false;\n    }\n    \n    if (seen.has(obj)) {\n      return true;\n    }\n    \n    seen.add(obj);\n    \n    if (typeIs(obj, \"table\")) {\n      for (const [_, item] of pairs(obj as unknown[])) {\n        if (checkCircular(item)) {\n          return true;\n        }\n      }\n    } else {\n      for (const [_, value] of pairs(obj)) {\n        if (checkCircular(value)) {\n          return true;\n        }\n      }\n    }\n    \n    seen.delete(obj);\n    return false;\n  }\n  \n  return checkCircular(arr);\n}\n\n",
      "patterns": {
        "functions": 3,
        "classes": 0,
        "interfaces": 2,
        "exports": 3,
        "imports": 0,
        "anyTypes": 0,
        "typeAssertions": 3,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": [
          {
            "name": "hasCircularReference",
            "type": "function",
            "isExported": true
          },
          {
            "name": "checkCircular",
            "type": "function",
            "isExported": false
          }
        ]
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/client/services/configGui/guiLayout.ts",
      "relativePath": "client/services/configGui/guiLayout.ts",
      "name": "guiLayout.ts",
      "size": 2643,
      "lines": 90,
      "lastModified": "2025-07-09T07:53:12.743Z",
      "content": "/**\n * GUI Layout Manager\n * Manages automatic positioning of GUI components to prevent overlaps\n */\n\nimport { GUI_CONSTANTS } from \"./constants\";\n\nexport class GuiLayoutManager {\n  private currentY: number = 40; // Start after title\n  private readonly padding: number = 10;\n  private readonly parent: Frame;\n\n  constructor(parent: Frame) {\n    this.parent = parent;\n  }\n\n  /**\n   * Get next Y position and update current position\n   */\n  public getNextPosition(componentHeight: number): UDim2 {\n    const position = new UDim2(0, 10, 0, this.currentY);\n    this.currentY += componentHeight + this.padding;\n    return position;\n  }\n\n  /**\n   * Get current Y position without updating\n   */\n  public getCurrentY(): number {\n    return this.currentY;\n  }\n\n  /**\n   * Reset layout to initial position\n   */\n  public reset(): void {\n    this.currentY = 40;\n  }\n\n  /**\n   * Add extra spacing\n   */\n  public addSpacing(pixels: number): void {\n    this.currentY += pixels;\n  }\n\n  /**\n   * Create a scrolling frame if content exceeds available space\n   */\n  public createScrollingFrame(): Frame {\n    const scrollFrame = new Instance(\"ScrollingFrame\");\n    scrollFrame.Name = \"ContentScrollFrame\";\n    scrollFrame.Size = new UDim2(1, 0, 1, -120); // Leave more space for buttons at bottom\n    scrollFrame.Position = new UDim2(0, 0, 0, 40); // Start after title\n    scrollFrame.BackgroundTransparency = 1;\n    scrollFrame.BorderSizePixel = 0;\n    scrollFrame.ScrollBarThickness = 8;\n    scrollFrame.ScrollBarImageColor3 = new Color3(0.3, 0.3, 0.3);\n    scrollFrame.CanvasSize = new UDim2(0, 0, 0, this.currentY);\n    scrollFrame.Parent = this.parent;\n    \n    // Cast to Frame for compatibility with component APIs\n    return scrollFrame as unknown as Frame;\n  }\n\n  /**\n   * Update canvas size based on content\n   */\n  public updateCanvasSize(scrollFrame: Frame): void {\n    if (scrollFrame.IsA(\"ScrollingFrame\")) {\n      scrollFrame.CanvasSize = new UDim2(0, 0, 0, this.currentY + 20); // Add some bottom padding\n    }\n  }\n}\n\n/**\n * Component heights for layout calculation\n */\nexport const COMPONENT_HEIGHTS = {\n  GLOBAL_SETTINGS: GUI_CONSTANTS.ENHANCED.GLOBAL_SETTINGS_HEIGHT,\n  NODE_TYPES: 145, // Increased for 3 rows (node types, link types, pet types)\n  LAYER_GRID_HEADER: GUI_CONSTANTS.ENHANCED.GRID_HEADER_HEIGHT,\n  LAYER_ROW: GUI_CONSTANTS.ENHANCED.GRID_ROW_HEIGHT,\n  AXIS_MAPPING: 120, // Height for axis mapping controls\n  VISUAL_CUSTOMIZATION: 160, // Height for visual customization\n  Y_AXIS_CONTROLS: 80, // Height for Y-axis controls\n  VISUALIZATION_CONTROLS: 280, // Height for visualization controls\n  STATUS_AREA: 30,\n  SPACING: 10\n};",
      "patterns": {
        "functions": 0,
        "classes": 1,
        "interfaces": 0,
        "exports": 2,
        "imports": 1,
        "anyTypes": 0,
        "typeAssertions": 3,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [
          {
            "name": "GuiLayoutManager",
            "methodCount": 4,
            "methods": [
              "reset",
              "addSpacing",
              "createScrollingFrame",
              "updateCanvasSize"
            ]
          }
        ],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/client/services/configGui/constants.ts",
      "relativePath": "client/services/configGui/constants.ts",
      "name": "constants.ts",
      "size": 2601,
      "lines": 107,
      "lastModified": "2025-07-09T02:31:19.093Z",
      "content": "export const GUI_CONSTANTS = {\n  // Dimensions\n  FRAME: {\n    WIDTH: 350,\n    HEIGHT: 285,\n    ENHANCED_WIDTH: 650, // Doubled from 325\n    ENHANCED_HEIGHT: 0, // Will be calculated as 90% of screen height\n    ENHANCED_HEIGHT_SCALE: 0.9, // 90% of screen height\n    POSITION: new UDim2(0, 10, 0, 10), // Upper left corner\n    CORNER_RADIUS: new UDim(0, 8)\n  },\n  \n  // Colors\n  COLORS: {\n    BACKGROUND: new Color3(0.2, 0.2, 0.2),\n    TEXT: new Color3(1, 1, 1),\n    ERROR: new Color3(1, 0.5, 0.5),\n    SUCCESS: new Color3(0.1, 0.4, 0.1),\n    BUTTON: {\n      DEFAULT: new Color3(0.1, 0.3, 0.5),\n      HOVER: new Color3(0.15, 0.35, 0.55),\n      ACTIVE: new Color3(0.05, 0.25, 0.45)\n    }\n  },\n  \n  // Typography\n  TYPOGRAPHY: {\n    TITLE_FONT: Enum.Font.SourceSansBold,\n    TITLE_HEIGHT: 30,\n    INPUT_FONT: Enum.Font.SourceSans,\n    BUTTON_FONT: Enum.Font.SourceSansSemibold,\n    LABEL_FONT: Enum.Font.SourceSans\n  },\n  \n  // Animation\n  ANIMATION: {\n    FLASH_DURATION: 0.5,\n    BUTTON_FEEDBACK: 0.2,\n    FADE_TIME: 0.3,\n    COLLAPSE_DURATION: 0.3\n  },\n  \n  // Component names\n  NAMES: {\n    SCREEN_GUI: \"ConfigurationGUI\",\n    MAIN_FRAME: \"ConfigFrame\",\n    TITLE: \"Title\",\n    REGENERATE_BUTTON: \"RegenerateButton\",\n    INPUT_PREFIX: \"Input_\",\n    LABEL_PREFIX: \"Label_\"\n  },\n  \n  // Input configuration\n  INPUT: {\n    HEIGHT: 25,\n    SPACING: 5,\n    LABEL_WIDTH: 0.5,\n    INPUT_WIDTH: 0.4,\n    START_Y: 40\n  },\n  \n  // Enhanced mode configuration\n  ENHANCED: {\n    GLOBAL_SETTINGS_HEIGHT: 140, // Reduced height due to 2-column layout\n    NODE_LINK_TYPES_HEIGHT: 110, // Increased for vertical stacking of node/link types\n    GRID_HEADER_HEIGHT: 30,\n    GRID_ROW_HEIGHT: 30,\n    GRID_PADDING: 10,\n    COLUMN_WIDTHS: {\n      LAYER: 30, // Reduced for narrower GUI\n      NODES: 40, // Reduced for narrower GUI\n      CONNECTIONS: 50, // Reduced for narrower GUI\n      NODE_TYPE: 60, // Reduced for narrower GUI\n      LINK_TYPE: 60, // Reduced for narrower GUI\n      DELETE: 30 // Reduced for narrower GUI\n    },\n    MAX_LAYERS: 10,\n    DROPDOWN_ITEMS: 10\n  },\n  \n  // Default spacing values\n  SPACING_DEFAULTS: {\n    NODE_HEIGHT: 1,\n    NODE_RADIUS: 0.5,\n    LAYER_SPACING: 2,\n    NODE_SPACING: 1,\n    SWIMLANE_SPACING: 1,\n    LINK_DIAMETER: 0.5\n  },\n  \n  // Button configuration\n  BUTTON: {\n    HEIGHT: 30,\n    SPACING: 10,\n    WIDTH: 90 // Reduced from 120 to fit narrower GUI\n  },\n  \n  // Validation limits\n  VALIDATION: {\n    MAX_LAYERS: 10,\n    MAX_NODES_PER_LAYER: 500,\n    MAX_CONNECTIONS_PER_NODE: 5,\n    MAX_TOTAL_NODES: 5000,\n    MAX_TOTAL_CONNECTIONS: 5000,\n    MAX_STRING_LENGTH: 50\n  }\n};",
      "patterns": {
        "functions": 0,
        "classes": 0,
        "interfaces": 0,
        "exports": 1,
        "imports": 0,
        "anyTypes": 0,
        "typeAssertions": 1,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/utils/nodePropertyHelpers.ts",
      "relativePath": "shared/utils/nodePropertyHelpers.ts",
      "name": "nodePropertyHelpers.ts",
      "size": 2599,
      "lines": 89,
      "lastModified": "2025-07-10T08:59:23.712Z",
      "content": "/**\n * Type-safe property access helpers for nodes\n * Part of F002 refactoring for improved type safety\n * Updated for T9: Make Axis Filters Dynamic - now supports any property structure\n */\n\nimport { Node } from \"../interfaces/simpleDataGenerator.interface\";\nimport { PersonProperties, AnimalProperties, isPersonNodeType, isAnimalNodeType } from \"../interfaces/nodeTypes\";\nimport { getNodePropertyValue } from \"./propertyDiscovery\";\n\n// Type guards for nodes with specific properties\nexport function isPersonNode(node: Node): node is Node & { \n  properties: PersonProperties \n} {\n  return isPersonNodeType(node.type) && node.properties !== undefined;\n}\n\nexport function isAnimalNode(node: Node): node is Node & {\n  properties: AnimalProperties\n} {\n  return isAnimalNodeType(node.type) && node.properties !== undefined;\n}\n\n// Safe property getters\nexport function getNodeProperty<K extends keyof (PersonProperties & AnimalProperties)>(\n  node: Node, \n  property: K\n): string | number | undefined {\n  if (!node.properties) {\n    return undefined;\n  }\n\n  // Type-specific property access\n  if (property === \"age\" && isPersonNode(node)) {\n    return node.properties.age;\n  }\n  \n  if ((property === \"petType\" || property === \"petColor\" || \n       property === \"firstName\" || property === \"lastName\") && isPersonNode(node)) {\n    return node.properties[property];\n  }\n  \n  if (property === \"animalType\" && isAnimalNode(node)) {\n    return node.properties.animalType;\n  }\n  \n  return undefined;\n}\n\n// Get age range for grouping\nexport function getAgeRange(node: Node): string {\n  if (!isPersonNode(node)) {\n    return \"Unknown\";\n  }\n  \n  const age = node.properties.age;\n  if (age < 20) return \"0-19\";\n  if (age < 40) return \"20-39\";\n  if (age < 60) return \"40-59\";\n  if (age < 80) return \"60-79\";\n  return \"80+\";\n}\n\n// Get full name for person nodes\nexport function getFullName(node: Node): string {\n  if (!isPersonNode(node)) {\n    return node.name;\n  }\n  \n  const { firstName, lastName } = node.properties;\n  return `${firstName} ${lastName}`;\n}\n\n// Property value resolver for any property - now generic\nexport function resolvePropertyValue(node: Node, propertyName: string): string {\n  // Handle special case for \"type\"\n  if (propertyName === \"type\") {\n    return node.type;\n  }\n  \n  // Handle age with range grouping (legacy support)\n  if (propertyName === \"age\" && isPersonNode(node)) {\n    return getAgeRange(node);\n  }\n  \n  // Use generic property discovery for all properties\n  const value = getNodePropertyValue(node, propertyName);\n  return value !== undefined ? tostring(value) : \"Unknown\";\n}",
      "patterns": {
        "functions": 6,
        "classes": 0,
        "interfaces": 0,
        "exports": 6,
        "imports": 3,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": [
          {
            "name": "isPersonNode",
            "type": "function",
            "isExported": true
          },
          {
            "name": "isAnimalNode",
            "type": "function",
            "isExported": true
          },
          {
            "name": "getAgeRange",
            "type": "function",
            "isExported": true
          },
          {
            "name": "getFullName",
            "type": "function",
            "isExported": true
          },
          {
            "name": "resolvePropertyValue",
            "type": "function",
            "isExported": true
          }
        ]
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/renderers/unifiedDataRenderer/core/dataGenerator/interfaces.ts",
      "relativePath": "shared/modules/renderers/unifiedDataRenderer/core/dataGenerator/interfaces.ts",
      "name": "interfaces.ts",
      "size": 2529,
      "lines": 116,
      "lastModified": "2025-07-11T02:35:17.370Z",
      "content": "/**\n * Interfaces for DataGenerator refactored modules\n */\n\nimport {\n  EnhancedGeneratorConfig,\n  LayerConfig,\n} from \"../../../../../interfaces/enhancedGenerator.interface\";\nimport {\n  Cluster,\n  Link,\n  Node,\n} from \"../../../../../interfaces/simpleDataGenerator.interface\";\n\n/**\n * Interface for node generation functionality\n */\nexport interface INodeGenerator {\n  /**\n   * Generate all nodes for a specific layer\n   */\n  generateLayerNodes(layer: LayerConfig, config: EnhancedGeneratorConfig): Node[];\n  \n  /**\n   * Create a single node with proper typing and properties\n   */\n  createNode(index: number, layerNumber: number, config: EnhancedGeneratorConfig): Node;\n}\n\n/**\n * Interface for link generation functionality\n */\nexport interface ILinkGenerator {\n  /**\n   * Generate all links between and within layers\n   */\n  generateAllLinks(\n    nodesByLayer: Map<number, Node[]>, \n    config: EnhancedGeneratorConfig\n  ): Link[];\n  \n  /**\n   * Ensure all nodes have at least one connection\n   */\n  ensureConnectivity(nodes: Node[], links: Link[], config: EnhancedGeneratorConfig): void;\n  \n  /**\n   * Create a single link between two nodes\n   */\n  createLink(sourceNode: Node, targetNode: Node, config: EnhancedGeneratorConfig): Link;\n}\n\n/**\n * Interface for test data processing functionality\n */\nexport interface ITestDataProcessor {\n  /**\n   * Generate cluster from harness test data\n   */\n  generateClusterFromTestData(config?: EnhancedGeneratorConfig): Cluster;\n  \n  /**\n   * Set whether to use test data mode\n   */\n  setUseTestData(enabled: boolean): void;\n  \n  /**\n   * Check if currently using test data\n   */\n  isUsingTestData(): boolean;\n}\n\n/**\n * Interface for property management functionality\n */\nexport interface IPropertyManager {\n  /**\n   * Discover and validate properties from generated nodes\n   */\n  discoverAndValidateProperties(nodes: Node[]): any[];\n}\n\n/**\n * Data transfer object for passing nodes between modules\n */\nexport interface NodesByLayer {\n  nodesByLayer: Map<number, Node[]>;\n  allNodes: Node[];\n}\n\n/**\n * Data transfer object for link generation results\n */\nexport interface LinkGenerationResult {\n  links: Link[];\n  isolatedNodeCount: number;\n  connectivityEnsured: boolean;\n}\n\n/**\n * Configuration for property assignment\n */\nexport interface PropertyAssignmentConfig {\n  numPetTypes: number;\n  useFullPropertySet: boolean;\n}\n\n/**\n * Metadata about discovered properties\n */\nexport interface PropertyMetadata {\n  name: string;\n  type: string;\n  values: any[];\n  isValidForAxis: boolean;\n}",
      "patterns": {
        "functions": 0,
        "classes": 0,
        "interfaces": 8,
        "exports": 8,
        "imports": 2,
        "anyTypes": 2,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/interfaces/enhancedGenerator.interface.ts",
      "relativePath": "shared/interfaces/enhancedGenerator.interface.ts",
      "name": "enhancedGenerator.interface.ts",
      "size": 2518,
      "lines": 74,
      "lastModified": "2025-07-10T20:46:00.095Z",
      "content": "/**\n * Interfaces for Enhanced Data Generator\n * Used by both client (GUI) and server (data generation)\n */\n\n// Layer configuration for enhanced data generator\nexport interface LayerConfig {\n  layerNumber: number;\n  numNodes: number;\n  connectionsPerNode: number;\n  nodeType?: string;\n  linkType?: string;\n}\n\n// Spacing configuration for visual layout\nexport interface SpacingConfig {\n  nodeHeight: number;\n  nodeRadius: number;\n  layerSpacing: number;\n  nodeSpacing: number;\n  swimlaneSpacing: number;\n  linkDiameter: number;\n  originYOffset?: number;\n}\n\n// Visualization control options\nexport interface VisualizationOptions {\n  showNodes: boolean;\n  showLinkLabels: boolean;\n  showConnectors: boolean;\n  allowSameLevelLinks: boolean;\n}\n\n// Spatial grouping configuration\nexport interface SpatialGrouping {\n  xGroupingProperty: string; // Property that determines X position grouping\n  zGroupingProperty: string; // Property that determines Z position grouping\n}\n\n// Legacy interface for backwards compatibility\nexport interface AxisMapping {\n  xAxis: string; // Deprecated: use xGroupingProperty\n  zAxis: string; // Deprecated: use zGroupingProperty\n  yAxis?: string; // Y-axis property for vertical grouping\n  xGroupingProperty?: string; // Optional for backwards compatibility\n  zGroupingProperty?: string; // Optional for backwards compatibility\n}\n\n// Visual mapping configuration for node colors\nexport interface VisualMapping {\n  backgroundColor: string; // Property name for background color mapping\n  borderColor: string; // Property name for border color mapping\n}\n\n// Y-axis configuration\nexport interface YAxisConfig {\n  useLayer: boolean; // true = use layer hierarchy, false = use property\n  property?: string; // Property name when not using layer\n}\n\n// Enhanced configuration that includes layers\nexport interface EnhancedGeneratorConfig {\n  numNodeTypes: number;\n  numLinkTypes: number;\n  numPetTypes?: number; // Number of pet types for Z position grouping (default: 5)\n  layers: LayerConfig[];\n  spacing?: SpacingConfig; // Optional for backward compatibility\n  visualization?: VisualizationOptions; // Optional for backward compatibility\n  spatialGrouping?: SpatialGrouping; // Spatial grouping configuration\n  axisMapping?: AxisMapping; // Deprecated: use spatialGrouping\n  visualMapping?: VisualMapping; // Optional for visual property mapping\n  yAxisConfig?: YAxisConfig; // Optional for Y-axis configuration\n  maxDataItems?: number; // Optional: maximum number of items to use from test data\n}",
      "patterns": {
        "functions": 0,
        "classes": 0,
        "interfaces": 9,
        "exports": 8,
        "imports": 0,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/ropeLabelMaker/utilities.ts",
      "relativePath": "shared/modules/ropeLabelMaker/utilities.ts",
      "name": "utilities.ts",
      "size": 2460,
      "lines": 88,
      "lastModified": "2025-07-06T02:19:00.653Z",
      "content": "/**\n * Utility functions for rope label creation\n */\n\nimport { ROPE_LABEL_CONSTANTS } from \"./constants\";\nimport { ParsedRelation } from \"./interfaces\";\n\n/**\n * Parses a relation name into its components\n * Pattern: \"source_RELATION_target\" -> { source, relation, target }\n */\nexport function parseRelationName(\n  relationName: string,\n  relationTypeName: string\n): ParsedRelation {\n  if (!relationName) {\n    return {\n      source: ROPE_LABEL_CONSTANTS.DEFAULTS.SOURCE_TEXT,\n      relation: relationTypeName,\n      target: ROPE_LABEL_CONSTANTS.DEFAULTS.TARGET_TEXT\n    };\n  }\n\n  // Pattern: \"source_RELATION_target\" -> { source, relation, target }\n  const splitPattern = `${ROPE_LABEL_CONSTANTS.PARSING.SEPARATOR}${relationTypeName}${ROPE_LABEL_CONSTANTS.PARSING.SEPARATOR}`;\n  const splitIndex = relationName.find(splitPattern);\n\n  if (splitIndex && splitIndex[0] !== undefined) {\n    const beforeIndex = splitIndex[0];\n    const afterIndex = beforeIndex + splitPattern.size();\n\n    const source = relationName.sub(1, beforeIndex - 1);\n    const target = relationName.sub(afterIndex);\n\n    // Replace underscores with spaces using gsub\n    const sourceFormatted = formatNodeName(source);\n    const targetFormatted = formatNodeName(target);\n\n    return {\n      source: sourceFormatted,\n      relation: relationTypeName,\n      target: targetFormatted,\n    };\n  }\n\n  // Fallback\n  return {\n    source: ROPE_LABEL_CONSTANTS.DEFAULTS.SOURCE_TEXT,\n    relation: relationTypeName,\n    target: ROPE_LABEL_CONSTANTS.DEFAULTS.TARGET_TEXT\n  };\n}\n\n/**\n * Formats a node name by replacing underscores with spaces\n */\nexport function formatNodeName(name: string): string {\n  return name.gsub(\"_\", \" \")[0];\n}\n\n/**\n * Calculates the label position between two attachments\n */\nexport function calculateLabelPosition(\n  attachment1: Attachment,\n  attachment2: Attachment\n): Vector3 {\n  const pos1 = attachment1.WorldPosition;\n  const pos2 = attachment2.WorldPosition;\n  \n  // Calculate midpoint\n  const midpoint = pos1.add(pos2).div(2);\n  \n  // Add Z offset for label visibility\n  return new Vector3(\n    midpoint.X,\n    midpoint.Y,\n    midpoint.Z + ROPE_LABEL_CONSTANTS.LABEL.Z_OFFSET\n  );\n}\n\n/**\n * Validates if a relation name follows the expected format\n */\nexport function validateRelationFormat(relationName: string): boolean {\n  const parts = relationName.split(ROPE_LABEL_CONSTANTS.PARSING.SEPARATOR);\n  return parts.size() >= ROPE_LABEL_CONSTANTS.PARSING.MIN_PARTS;\n}",
      "patterns": {
        "functions": 4,
        "classes": 0,
        "interfaces": 0,
        "exports": 4,
        "imports": 2,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": [
          {
            "name": "parseRelationName",
            "type": "function",
            "isExported": true
          },
          {
            "name": "formatNodeName",
            "type": "function",
            "isExported": true
          },
          {
            "name": "calculateLabelPosition",
            "type": "function",
            "isExported": true
          },
          {
            "name": "validateRelationFormat",
            "type": "function",
            "isExported": true
          }
        ]
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/renderers/constants/blockConstants.ts",
      "relativePath": "shared/modules/renderers/constants/blockConstants.ts",
      "name": "blockConstants.ts",
      "size": 2439,
      "lines": 62,
      "lastModified": "2025-07-11T03:11:57.388Z",
      "content": "/**\n * Centralized constants for block rendering and positioning\n * Part of F002 refactoring to eliminate magic numbers\n */\n\nimport { X_AXIS_COLORS, Z_AXIS_COLORS } from \"./robloxColors\";\n\nexport const BLOCK_CONSTANTS = {\n  DIMENSIONS: {\n    DEFAULT_HEIGHT: 3,\n    DEFAULT_WIDTH: 200,\n    DEFAULT_DEPTH: 200,\n    PLATFORM_SIZE: 100,\n    SHADOW_BUFFER: 2, // DEPRECATED: Use LAYOUT_CONSTANTS.SHADOW_PADDING instead\n    Z_PARALLEL_LANE_BUFFER: 4, // Extra Z-dimension buffer for Z-parallel lanes (formerly \"X-axis swimlanes\")\n    X_PARALLEL_LANE_BUFFER: 4, // Extra X-dimension buffer for X-parallel lanes (formerly \"Z-axis swimlanes\")\n    Z_FIGHTING_OFFSET: 0.1,\n    SHADOW_BLOCK_HEIGHT: 2,\n    MIN_BLOCK_SIZE: 1,\n    LABEL_Y_OFFSET: 0.001, // Prevents z-fighting with labels\n    UNIFORM_SHADOW_THICKNESS: 1.0, // Uniform thickness for all shadow layers\n    SHADOW_LAYER_DISPLACEMENT: 0.5, // Vertical displacement between shadow layer tops\n    Z_TO_X_SHADOW_LANE_SPACING: 0.5, // Vertical spacing between Z shadow lanes and X shadow lanes\n    Y_SHADOW_THICKNESS: 5, // Thickness of Y-parallel shadow blocks (T9.8.2)\n    Y_SHADOW_OFFSET: 2, // Vertical offset below nodes for Y shadows\n    Y_SHADOW_SPACING: 2, // Spacing between Y shadow blocks (T9.8.3)\n  },\n  COLORS: {\n    SHADOW: new Color3(0.5, 0.7, 1),\n    PLATFORM: new Color3(0.5, 0, 0.5), // Purple\n    Z_AXIS_COLORS: Z_AXIS_COLORS,\n    X_PARALLEL_LANE_COLORS: X_AXIS_COLORS,\n    Y_SHADOW_COLOR: new Color3(0.3, 0.3, 0.8), // Light blue for Y shadows\n  },\n  TRANSPARENCY: {\n    OPAQUE: 0,\n    SEMI_TRANSPARENT: 0.5,\n    FORCE_FIELD: 0.8,\n    Y_SHADOW: 0, // Fully opaque\n  },\n  MATERIALS: {\n    SHADOW: Enum.Material.Concrete,\n    PLATFORM: Enum.Material.Plastic,\n    SWIMLANE: Enum.Material.Concrete,\n  },\n  POSITIONING: {\n    MIN_GROUND_CLEARANCE: 5,\n    Z_DIMENSION_GROUP_SPACING: 5, // Spacing between groups along Z dimension\n    LABEL_OFFSET: 8,\n    X_PARALLEL_LANE_Y_OFFSET: 1, // Raises X-parallel lanes (formerly \"Z-axis swimlanes\") to prevent occlusion\n  },\n  LABEL_STYLING: {\n    BORDER_SIZE_PIXEL: 5, // Unified border width for all block labels\n    BORDER_COLOR: new Color3(0, 0, 0), // Black border\n    BORDER_MODE: Enum.BorderMode.Inset, // Internal border so it doesn't overflow\n    TEXT_COLOR: new Color3(0, 0, 0), // Black text\n    FONT: Enum.Font.SourceSansBold,\n    TEXT_SCALED: true,\n    BACKGROUND_TRANSPARENCY: 0, // Opaque background to show border\n  },\n};\n",
      "patterns": {
        "functions": 0,
        "classes": 0,
        "interfaces": 0,
        "exports": 1,
        "imports": 1,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/hexagonMaker/utilities.ts",
      "relativePath": "shared/modules/hexagonMaker/utilities.ts",
      "name": "utilities.ts",
      "size": 2436,
      "lines": 74,
      "lastModified": "2025-07-06T20:49:58.816Z",
      "content": "import { padNumber } from \"../../utils/stringUtils\";\nimport { HEXAGON_CONSTANTS } from \"./constants\";\n\nexport function generateHexagonName(stackIndex: number, hexIndex: number): string {\n  const hexStr = padNumber(hexIndex, 3);\n  const stackStr = padNumber(stackIndex, 3);\n  return `${HEXAGON_CONSTANTS.NAME_PREFIXES.HEXAGON}${hexStr}-${HEXAGON_CONSTANTS.NAME_PREFIXES.STACK}${stackStr}`;\n}\n\nexport function createCenterCube(\n  centerPosition: [number, number, number],\n  hexIndex: number,\n  stackIndex: number\n): Part {\n  const centerCube = new Instance(\"Part\");\n  centerCube.Name = `${HEXAGON_CONSTANTS.NAME_PREFIXES.CENTER_CUBE}-${HEXAGON_CONSTANTS.NAME_PREFIXES.HEXAGON}${padNumber(\n    hexIndex,\n    3\n  )}-${HEXAGON_CONSTANTS.NAME_PREFIXES.STACK}${padNumber(stackIndex, 3)}`;\n  centerCube.Size = new Vector3(\n    HEXAGON_CONSTANTS.CENTER_CUBE.SIZE,\n    HEXAGON_CONSTANTS.CENTER_CUBE.SIZE,\n    HEXAGON_CONSTANTS.CENTER_CUBE.SIZE\n  );\n  centerCube.Position = new Vector3(\n    centerPosition[0],\n    centerPosition[1],\n    centerPosition[2]\n  );\n  centerCube.Anchored = true;\n  centerCube.Transparency = HEXAGON_CONSTANTS.CENTER_CUBE.TRANSPARENCY;\n  centerCube.Color = Color3.fromRGB(\n    HEXAGON_CONSTANTS.CENTER_CUBE.COLOR_RGB[0],\n    HEXAGON_CONSTANTS.CENTER_CUBE.COLOR_RGB[1],\n    HEXAGON_CONSTANTS.CENTER_CUBE.COLOR_RGB[2]\n  );\n  centerCube.CastShadow = false;\n  \n  return centerCube;\n}\n\nexport function createCenterAttachment(\n  centerCube: Part,\n  hexIndex: number,\n  stackIndex: number\n): Attachment {\n  const centerAttachment = new Instance(\"Attachment\");\n  centerAttachment.Name = `${HEXAGON_CONSTANTS.NAME_PREFIXES.CENTER_ATTACHMENT}-${HEXAGON_CONSTANTS.NAME_PREFIXES.HEXAGON}${padNumber(\n    hexIndex,\n    3\n  )}-${HEXAGON_CONSTANTS.NAME_PREFIXES.STACK}${padNumber(stackIndex, 3)}`;\n  centerAttachment.Position = new Vector3(0, 0, 0);\n  centerAttachment.Parent = centerCube;\n  \n  return centerAttachment;\n}\n\nexport function calculateBarDimensions(width: number, height: number) {\n  // Calculate bar dimensions for a hexagon\n  // For a regular hexagon with width W:\n  // - Each side length = W/2 (radius)\n  // - To form a solid hexagon with 3 overlapping bars, bar width = radius * √3\n  const radius = width / 2;\n  const barLength = radius;\n  const barWidth = radius * math.sqrt(3); // Proper width for solid hexagon\n  const barHeight = height;\n  \n  return {\n    barLength,\n    barWidth,\n    barHeight,\n    radius\n  };\n}",
      "patterns": {
        "functions": 4,
        "classes": 0,
        "interfaces": 0,
        "exports": 4,
        "imports": 2,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": [
          {
            "name": "generateHexagonName",
            "type": "function",
            "isExported": true
          },
          {
            "name": "createCenterCube",
            "type": "function",
            "isExported": true
          },
          {
            "name": "createCenterAttachment",
            "type": "function",
            "isExported": true
          },
          {
            "name": "calculateBarDimensions",
            "type": "function",
            "isExported": true
          }
        ]
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/renderers/blocks/baseBlockCreator.ts",
      "relativePath": "shared/modules/renderers/blocks/baseBlockCreator.ts",
      "name": "baseBlockCreator.ts",
      "size": 2408,
      "lines": 86,
      "lastModified": "2025-07-09T02:28:39.258Z",
      "content": "/**\n * Base class for block creation with common functionality\n * Part of F002 refactoring to consolidate block creation logic\n */\n\nimport { BLOCK_CONSTANTS } from \"../constants/blockConstants\";\n\nexport abstract class BaseBlockCreator {\n  /**\n   * Create a base Part with standard properties\n   */\n  protected createBasePart(name: string, size: Vector3, position: Vector3): Part {\n    const part = new Instance(\"Part\");\n    part.Name = name;\n    part.Size = size;\n    part.Position = position;\n    part.Anchored = true;\n    part.TopSurface = Enum.SurfaceType.Smooth;\n    part.BottomSurface = Enum.SurfaceType.Smooth;\n    part.CanCollide = true;\n    return part;\n  }\n  \n  /**\n   * Apply material, color, and transparency to a part\n   */\n  protected applyMaterial(\n    part: Part, \n    material: Enum.Material, \n    color: Color3, \n    transparency: number\n  ): void {\n    part.Material = material;\n    part.Color = color;\n    part.Transparency = transparency;\n  }\n  \n  /**\n   * Create a block with full configuration\n   */\n  protected createBlock(config: {\n    name: string;\n    size: Vector3;\n    position: Vector3;\n    material: Enum.Material;\n    color: Color3;\n    transparency: number;\n    canCollide?: boolean;\n  }): Part {\n    const part = this.createBasePart(config.name, config.size, config.position);\n    this.applyMaterial(part, config.material, config.color, config.transparency);\n    \n    if (config.canCollide !== undefined) {\n      part.CanCollide = config.canCollide;\n    }\n    \n    return part;\n  }\n  \n  /**\n   * Calculate block dimensions with buffer\n   */\n  protected calculateBlockDimensions(\n    bounds: { minX: number; maxX: number; minZ: number; maxZ: number },\n    height: number = BLOCK_CONSTANTS.DIMENSIONS.DEFAULT_HEIGHT,\n    buffer: number = BLOCK_CONSTANTS.DIMENSIONS.SHADOW_BUFFER\n  ): { size: Vector3; position: Vector3 } {\n    const width = bounds.maxX - bounds.minX + buffer * 2;\n    const depth = bounds.maxZ - bounds.minZ + buffer * 2;\n    const centerX = (bounds.minX + bounds.maxX) / 2;\n    const centerZ = (bounds.minZ + bounds.maxZ) / 2;\n    \n    return {\n      size: new Vector3(width, height, depth),\n      position: new Vector3(centerX, 0, centerZ) // Y will be set by caller\n    };\n  }\n  \n  /**\n   * Get color from array with wraparound\n   */\n  protected getColorFromArray(colors: Color3[], index: number): Color3 {\n    return colors[index % colors.size()];\n  }\n  \n}",
      "patterns": {
        "functions": 0,
        "classes": 2,
        "interfaces": 0,
        "exports": 1,
        "imports": 1,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [
          {
            "name": "for",
            "methodCount": 0,
            "methods": []
          }
        ],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/renderers/unifiedDataRenderer/constants.ts",
      "relativePath": "shared/modules/renderers/unifiedDataRenderer/constants.ts",
      "name": "constants.ts",
      "size": 2349,
      "lines": 71,
      "lastModified": "2025-07-07T09:30:00.138Z",
      "content": "/**\n * Constants for Unified Data Renderer\n */\n\n// Color palettes from SimpleDataGeneratorService\nexport const COLOR_PALETTES = {\n  NODE_COLORS: [\n    [0.2, 0.4, 0.8],  // Blue\n    [0.8, 0.4, 0.2],  // Orange\n    [0.2, 0.8, 0.2],  // Green\n    [0.8, 0.2, 0.8],  // Magenta\n    [0.8, 0.8, 0.2],  // Yellow\n    [0.2, 0.8, 0.8],  // Cyan\n    [0.8, 0.2, 0.2],  // Red\n    [0.4, 0.2, 0.6],  // Purple\n    [0.6, 0.4, 0.2],  // Brown\n    [0.5, 0.5, 0.5],  // Gray\n  ] as [number, number, number][],\n\n  LINK_COLORS: [\n    [0.2, 0.8, 0.2],  // Green\n    [0.8, 0.2, 0.8],  // Magenta\n    [0.8, 0.8, 0.2],  // Yellow\n    [0.2, 0.8, 0.8],  // Cyan\n    [0.8, 0.2, 0.2],  // Red\n    [0.4, 0.2, 0.6],  // Purple\n    [0.6, 0.4, 0.2],  // Brown\n    [0.5, 0.5, 0.5],  // Gray\n    [0.9, 0.5, 0.1],  // Orange-Red\n    [0.1, 0.5, 0.9],  // Sky Blue\n  ] as [number, number, number][],\n};\n\n// Node type names\n// export const NODE_TYPE_NAMES = [\"People\", \"Animals\", \"Buildings\", \"Vehicles\", \"Plants\", \"Minerals\", \"Technology\", \"Food\", \"Tools\", \"Weather\"];\nexport const NODE_TYPE_NAMES = [\"man\", \"woman\", \"child\", \"grandparent\"];\n\n// Default animal types for Animals nodes\nexport const ANIMAL_TYPES = [\"Dog\", \"Cat\", \"Bird\", \"Fish\", \"Horse\", \"Rabbit\", \"Snake\", \"Bear\", \"Hamster\", \"Lizard\"];\n\n// Pet types for people nodes\nexport const PET_TYPES = [\"Dog\", \"Cat\", \"Bird\", \"Fish\", \"None\", \"Hamster\", \"Rabbit\"];\n\n// Pet colors for people nodes\nexport const PET_COLORS = [\"Brown\", \"Black\", \"White\", \"Gray\", \"Orange\", \"Golden\", \"Spotted\"];\n\n// Name lists for person nodes\nexport const FIRST_NAMES = [\n  \"James\", \"Mary\", \"John\", \"Patricia\", \"Robert\",\n  \"Jennifer\", \"Michael\", \"Linda\", \"William\", \"Elizabeth\"\n];\n\nexport const LAST_NAMES = [\n  \"Smith\", \"Johnson\", \"Williams\", \"Brown\", \"Jones\",\n  \"Garcia\", \"Miller\", \"Davis\", \"Rodriguez\", \"Martinez\"\n];\n\n// Country lists for person nodes\nexport const COUNTRIES_OF_BIRTH = [\n  \"United States\", \"Canada\", \"United Kingdom\", \"Germany\", \"France\",\n  \"Japan\", \"China\", \"India\", \"Brazil\", \"Australia\"\n];\n\nexport const COUNTRIES_OF_RESIDENCE = [\n  \"United States\", \"Canada\", \"United Kingdom\", \"Germany\", \"France\",\n  \"Japan\", \"China\", \"India\", \"Brazil\", \"Australia\",\n  \"Mexico\", \"Spain\", \"Italy\", \"Netherlands\", \"Sweden\"\n];\n\n// Default attachments for nodes\nexport const DEFAULT_ATTACHMENTS = [\"top\", \"bottom\", \"left\", \"right\", \"front\", \"back\"];",
      "patterns": {
        "functions": 0,
        "classes": 0,
        "interfaces": 0,
        "exports": 11,
        "imports": 0,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/interfaces/simpleDataGenerator.interface.ts",
      "relativePath": "shared/interfaces/simpleDataGenerator.interface.ts",
      "name": "simpleDataGenerator.interface.ts",
      "size": 2307,
      "lines": 72,
      "lastModified": "2025-07-10T08:42:50.789Z",
      "content": "// Interfaces for Simple Data Generator (R77)\n\nexport interface Node {\n  uuid: string;           // e.g., \"h-1234\", persistent across spatial configurations\n  name: string;           // Node name\n  type: string;  // Node type (now supports \"man\", \"woman\", \"child\", etc.)\n  color: [number, number, number];  // RGB color values (0-1 range)\n  position: {\n    x: number;\n    y: number;\n    z: number;\n  };\n  attachmentNames: string[];  // Array of attachment point names\n  \n  // Type-specific properties\n  properties?: {\n    // For People nodes (man, woman, child)\n    age?: number;\n    petType?: string;\n    petColor?: string;\n    firstName?: string;\n    lastName?: string;\n    countryOfBirth?: string;\n    countryOfResidence?: string;\n    \n    // For Animals nodes\n    animalType?: string;  // Now supports 10 different animal types\n    \n    // For Harness repository files\n    service?: string;\n    component?: string;\n    language?: string;\n    size?: string;\n    type?: string;\n    resourceDomain?: string;\n    operationType?: string;\n    apiPattern?: string;\n    apiComplexity?: string;\n    httpMethod?: string;\n    path?: string;\n  };\n}\n\nexport interface Link {\n  uuid: string;           // Link identifier\n  type: string;           // Link type (now supports up to 10 types)\n  sourceNodeUuid: string; // UUID of source node\n  targetNodeUuid: string; // UUID of target node\n  color: [number, number, number];  // RGB color values (0-1 range)\n}\n\nexport interface Group {\n  id: string;\n  name: string;\n  parentId?: string;      // For hierarchical parent-child relationships\n  nodes: Node[];          // Nodes in this group\n}\n\nexport interface Cluster {\n  groups: Group[];        // Each group represents a hierarchical tree\n  relations: Link[];      // All relationships between nodes\n  discoveredProperties?: string[];  // Properties discovered from nodes for dynamic axis mapping\n}\n\nexport interface GeneratorConfig {\n  numLevel1Nodes: number;   // Number of root/top-level nodes\n  numLevel2Nodes: number;   // Number of second-level nodes\n  numLevel3Nodes: number;   // Number of third-level nodes\n  childrenPerNode: number;  // Maximum children per parent node\n  numNodeTypes: number;     // Number of different node types to use\n  numLinkTypes: number;     // Number of different link types to use\n}",
      "patterns": {
        "functions": 0,
        "classes": 0,
        "interfaces": 5,
        "exports": 5,
        "imports": 0,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/hexagonMaker/standardizedInterfaces.ts",
      "relativePath": "shared/modules/hexagonMaker/standardizedInterfaces.ts",
      "name": "standardizedInterfaces.ts",
      "size": 2285,
      "lines": 97,
      "lastModified": "2025-07-08T10:10:20.993Z",
      "content": "/**\n * Standardized interfaces for hexagon maker\n * Following the IMaker pattern\n */\n\nimport { IVisualMakerConfig } from \"../../interfaces/IMaker\";\n\n/**\n * Standardized configuration for hexagon creation\n */\nexport interface IHexagonMakerConfig extends IVisualMakerConfig {\n  /** Width of the hexagon */\n  width?: number;\n  \n  /** Height of the hexagon */\n  height?: number;\n  \n  /** Labels for the hexagon bars */\n  labels?: string[];\n  \n  /** Stack index for hierarchical organization */\n  stackIndex?: number;\n  \n  /** Hexagon index within the stack */\n  hexIndex?: number;\n  \n  /** Optional GUID for tracking */\n  guid?: string;\n  \n  /** Properties for the bars */\n  barColor?: Color3;\n  barMaterial?: Enum.Material;\n  barTransparency?: number;\n}\n\n/**\n * Legacy hexagon configuration (for backward compatibility during migration)\n */\nexport interface HexagonConfigLegacy {\n  id?: string | number;\n  centerPosition?: [number, number, number];\n  width?: number;\n  height?: number;\n  barProps?: {\n    Color?: [number, number, number];\n    Material?: string;\n    Transparency?: number;\n    [key: string]: any;\n  };\n  labels?: string[];\n  stackIndex?: number;\n  hexIndex?: number;\n  guid?: string;\n}\n\n/**\n * Converts legacy config to standardized config\n */\nexport function convertLegacyHexagonConfig(legacy: HexagonConfigLegacy): IHexagonMakerConfig {\n  const config: IHexagonMakerConfig = {\n    id: legacy.id,\n    width: legacy.width,\n    height: legacy.height,\n    labels: legacy.labels,\n    stackIndex: legacy.stackIndex,\n    hexIndex: legacy.hexIndex,\n    guid: legacy.guid,\n  };\n\n  // Convert position\n  if (legacy.centerPosition) {\n    config.position = new Vector3(\n      legacy.centerPosition[0],\n      legacy.centerPosition[1],\n      legacy.centerPosition[2]\n    );\n  }\n\n  // Convert bar properties\n  if (legacy.barProps) {\n    if (legacy.barProps.Color) {\n      config.barColor = new Color3(\n        legacy.barProps.Color[0],\n        legacy.barProps.Color[1],\n        legacy.barProps.Color[2]\n      );\n    }\n    if (legacy.barProps.Material) {\n      config.barMaterial = legacy.barProps.Material as unknown as Enum.Material;\n    }\n    if (legacy.barProps.Transparency !== undefined) {\n      config.barTransparency = legacy.barProps.Transparency;\n    }\n  }\n\n  return config;\n}",
      "patterns": {
        "functions": 1,
        "classes": 0,
        "interfaces": 2,
        "exports": 3,
        "imports": 1,
        "anyTypes": 1,
        "typeAssertions": 2,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": [
          {
            "name": "convertLegacyHexagonConfig",
            "type": "function",
            "isExported": true
          }
        ]
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/renderers/unifiedDataRenderer/managers/platformShadowManager.ts",
      "relativePath": "shared/modules/renderers/unifiedDataRenderer/managers/platformShadowManager.ts",
      "name": "platformShadowManager.ts",
      "size": 2206,
      "lines": 69,
      "lastModified": "2025-07-11T03:08:40.325Z",
      "content": "/**\n * Platform and Shadow Manager\n * Handles creation of platform and shadow blocks\n */\n\nimport { PlatformBlockCreator } from \"../../blocks/platformBlockCreator\";\nimport { ShadowBlockCreator } from \"../../blocks/shadowBlockCreator\";\nimport { BLOCK_CONSTANTS } from \"../../constants/blockConstants\";\nimport { LAYOUT_CONSTANTS } from \"../../constants/layoutConstants\";\nimport {\n  LaneBounds,\n  PlatformShadowResult\n} from \"../types\";\n\nexport class PlatformShadowManager {\n  private platformCreator: PlatformBlockCreator;\n  private shadowCreator: ShadowBlockCreator;\n\n  constructor() {\n    this.platformCreator = new PlatformBlockCreator();\n    this.shadowCreator = new ShadowBlockCreator();\n  }\n\n  /**\n   * Creates platform and shadow blocks based on lane bounds\n   */\n  public createPlatformAndShadow(\n    targetOrigin: Vector3,\n    parentFolder: Folder,\n    allLaneBounds: LaneBounds\n  ): PlatformShadowResult {\n    // Create platform block\n    const platform = this.platformCreator.createPlatformBlock({\n      origin: targetOrigin,\n      parent: parentFolder,\n      height: BLOCK_CONSTANTS.DIMENSIONS.UNIFORM_SHADOW_THICKNESS,\n      size: BLOCK_CONSTANTS.DIMENSIONS.PLATFORM_SIZE\n    });\n\n    // Create shadow block sized to encompass all lanes\n    const shadow = this.shadowCreator.createGroupShadowBlock({\n      origin: targetOrigin,\n      parent: platform,\n      height: BLOCK_CONSTANTS.DIMENSIONS.UNIFORM_SHADOW_THICKNESS,\n      width: allLaneBounds.width + LAYOUT_CONSTANTS.SHADOW_PADDING.X_PADDING * 2,\n      depth: allLaneBounds.depth + LAYOUT_CONSTANTS.SHADOW_PADDING.Z_PADDING * 2,\n      buffer: BLOCK_CONSTANTS.DIMENSIONS.SHADOW_BUFFER\n    });\n\n    return { platform, shadow };\n  }\n\n  /**\n   * Cleans up any existing platform and shadow blocks\n   */\n  public cleanupExistingBlocks(parentFolder: Folder): void {\n    // Delete any existing platform and shadow blocks\n    const existingPlatform = parentFolder.FindFirstChild(\"PlatformBlock\");\n    if (existingPlatform) {\n      existingPlatform.Destroy();\n    }\n\n    // Also check for legacy flat block\n    const existingBlock = parentFolder.FindFirstChild(\"FlatBlockFoundation\");\n    if (existingBlock) {\n      existingBlock.Destroy();\n    }\n  }\n}",
      "patterns": {
        "functions": 0,
        "classes": 1,
        "interfaces": 0,
        "exports": 1,
        "imports": 5,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/hexStackMaker/hexStackMaker.ts",
      "relativePath": "shared/modules/hexStackMaker/hexStackMaker.ts",
      "name": "hexStackMaker.ts",
      "size": 2137,
      "lines": 74,
      "lastModified": "2025-07-09T02:36:52.835Z",
      "content": "/**\n * Standardized hex stack maker following IMaker pattern\n */\n\nimport { makeHexagon } from \"../hexagonMaker\";\nimport { IHexStackMakerConfig } from \"./standardizedInterfaces\";\nimport { HEX_STACK_CONSTANTS } from \"./constants\";\nimport { generateStackName, calculateLevelPosition } from \"./utilities\";\n\n/**\n * Default color palette as Color3 array\n */\nconst DEFAULT_COLOR_PALETTE = HEX_STACK_CONSTANTS.DEFAULT_COLOR_PALETTE.map(\n  color => new Color3(color[0], color[1], color[2])\n);\n\n/**\n * Creates a hex stack model with standardized configuration\n * @param config - Standardized hex stack configuration\n * @returns The created hex stack model\n */\nexport function makeHexStack(config: IHexStackMakerConfig): Model {\n  // Extract configuration with defaults\n  const {\n    id = 1,\n    position = new Vector3(0, 0, 0),\n    width = HEX_STACK_CONSTANTS.DEFAULT_WIDTH,\n    height = HEX_STACK_CONSTANTS.DEFAULT_HEIGHT,\n    count = HEX_STACK_CONSTANTS.DEFAULT_COUNT,\n    colors = DEFAULT_COLOR_PALETTE,\n    stackIndex = 1,\n    parent,\n  } = config;\n\n\n  const colorPalette = colors.size() > 0 ? colors : DEFAULT_COLOR_PALETTE;\n  const hexagons: Model[] = [];\n\n  // Create the stack model\n  const stackModel = new Instance(\"Model\");\n  const stackName = generateStackName(stackIndex);\n  stackModel.Name = stackName;\n\n  // Create stacked hexagons\n  for (let level = 0; level < count; level++) {\n    const levelPosition = calculateLevelPosition(\n      [position.X, position.Y, position.Z], // Convert to array for compatibility\n      level,\n      height\n    );\n    const levelColor = colorPalette[level % colorPalette.size()];\n\n    // Create a hexagon for this level using standardized version\n    const hexModel = makeHexagon({\n      id: `${id}_level${level + 1}`,\n      position: new Vector3(levelPosition[0], levelPosition[1], levelPosition[2]),\n      width: width,\n      height: height,\n      barColor: levelColor,\n      stackIndex: stackIndex,\n      hexIndex: level + 1,\n      parent: stackModel,\n    });\n\n    hexagons.push(hexModel);\n  }\n\n  // Set parent if provided\n  if (parent) {\n    stackModel.Parent = parent;\n  }\n\n  return stackModel;\n}",
      "patterns": {
        "functions": 1,
        "classes": 0,
        "interfaces": 0,
        "exports": 1,
        "imports": 4,
        "anyTypes": 0,
        "typeAssertions": 1,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": [
          {
            "name": "makeHexStack",
            "type": "function",
            "isExported": true
          }
        ]
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/client/main.client.ts",
      "relativePath": "client/main.client.ts",
      "name": "main.client.ts",
      "size": 2088,
      "lines": 53,
      "lastModified": "2025-07-09T07:53:12.742Z",
      "content": "/**\n * Main Client Entry Point\n * \n * This file serves as the primary entry point for all client-side functionality.\n * It is intentionally \"orphaned\" (not imported by other modules) because:\n * 1. It is the root bootstrapper for the client-side application\n * 2. Roblox automatically executes this file when placed in StarterPlayer.StarterPlayerScripts\n * 3. It initializes all client controllers and services that need to run on game start\n * \n * Architecture Note: This follows the \"composition root\" pattern where all\n * dependencies are wired together at the application's entry point.\n */\n\nimport { ConfigGUIController } from \"./controllers/configGUI.controller\";\nimport { AnimationTestGUIController } from \"./controllers/animationTestGUI.controller\";\n// import { ColorPickerController } from \"./controllers/_orphaned/colorPicker.controller\";\nimport { Players } from \"@rbxts/services\";\nimport { KeyboardShortcutsService } from \"./services/keyboardShortcuts.service\";\nimport { NodePropertiesInspectorService } from \"./services/nodePropertiesInspector/nodePropertiesInspector.service\";\n\n// Disable the default Roblox chat\nconst starterGui = game.GetService(\"StarterGui\");\nstarterGui.SetCoreGuiEnabled(Enum.CoreGuiType.Chat, false);\n\n// Wait for the player and character to be ready\nconst player = Players.LocalPlayer;\nif (!player.Character) {\n  player.CharacterAdded.Wait();\n}\n\n// Small delay to ensure everything is loaded\nwait(0.5);\n\n// Initialize the configuration GUI\nconst configGUIController = new ConfigGUIController();\nconfigGUIController.initialize();\n\n// Initialize the animation test GUI\nconst animationTestController = new AnimationTestGUIController();\nanimationTestController.initialize();\n\n// Initialize the color picker GUI (disabled - moved to _orphaned)\n// const colorPickerController = new ColorPickerController();\n// colorPickerController.initialize();\n\n// Initialize keyboard shortcuts service\nnew KeyboardShortcutsService();\n\n// Initialize node properties inspector\nconst nodeInspector = NodePropertiesInspectorService.getInstance();\nnodeInspector.initialize();\n\n",
      "patterns": {
        "functions": 0,
        "classes": 0,
        "interfaces": 0,
        "exports": 0,
        "imports": 6,
        "anyTypes": 0,
        "typeAssertions": 1,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/constants/axisDefaults.ts",
      "relativePath": "shared/constants/axisDefaults.ts",
      "name": "axisDefaults.ts",
      "size": 2077,
      "lines": 62,
      "lastModified": "2025-07-10T11:07:24.268Z",
      "content": "/**\n * Axis Default Constants\n * Part of T9: Make Axis Filters Dynamic\n * \n * Centralizes axis property defaults to facilitate migration from hardcoded values\n */\n\nexport const AXIS_DEFAULTS = {\n  // Legacy hardcoded defaults (to be phased out)\n  LEGACY_X_AXIS: \"type\",\n  LEGACY_Z_AXIS: \"petType\",\n  \n  // Dynamic defaults - will be set at runtime based on discovered properties\n  DYNAMIC_X_AXIS: undefined as string | undefined,\n  DYNAMIC_Z_AXIS: undefined as string | undefined,\n  \n  // Fallback values if no properties are discovered\n  FALLBACK_X_AXIS: \"property1\",\n  FALLBACK_Z_AXIS: \"property2\",\n  \n  // Minimum number of unique values required for a property to be valid for axis mapping\n  MIN_UNIQUE_VALUES_FOR_AXIS: 2\n};\n\n/**\n * Helper function to get X-axis default\n * @param discoveredProperties - Array of discovered properties from data\n * @returns The default X-axis property\n */\nexport function getDefaultXAxis(discoveredProperties?: string[]): string {\n  if (discoveredProperties && discoveredProperties.size() > 0) {\n    // Prefer \"httpMethod\" if it exists in discovered properties\n    const httpMethodIndex = discoveredProperties.indexOf(\"httpMethod\");\n    if (httpMethodIndex !== -1) {\n      return \"httpMethod\";\n    }\n    return discoveredProperties[0];\n  }\n  return AXIS_DEFAULTS.LEGACY_X_AXIS;\n}\n\n/**\n * Helper function to get Z-axis default\n * @param discoveredProperties - Array of discovered properties from data\n * @returns The default Z-axis property\n */\nexport function getDefaultZAxis(discoveredProperties?: string[]): string {\n  if (discoveredProperties && discoveredProperties.size() > 1) {\n    return discoveredProperties[1];\n  }\n  return AXIS_DEFAULTS.LEGACY_Z_AXIS;\n}\n\n/**\n * Checks if the given axis values are the legacy hardcoded defaults\n * @param xAxis - Current X-axis property\n * @param zAxis - Current Z-axis property\n * @returns True if both are legacy defaults\n */\nexport function isUsingLegacyDefaults(xAxis: string, zAxis: string): boolean {\n  return xAxis === AXIS_DEFAULTS.LEGACY_X_AXIS && zAxis === AXIS_DEFAULTS.LEGACY_Z_AXIS;\n}",
      "patterns": {
        "functions": 5,
        "classes": 0,
        "interfaces": 0,
        "exports": 4,
        "imports": 0,
        "anyTypes": 0,
        "typeAssertions": 2,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": [
          {
            "name": "getDefaultXAxis",
            "type": "function",
            "isExported": true
          },
          {
            "name": "getDefaultZAxis",
            "type": "function",
            "isExported": true
          },
          {
            "name": "isUsingLegacyDefaults",
            "type": "function",
            "isExported": true
          }
        ]
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/renderers/dataGeneratorRobloxRendererUtils/constants.ts",
      "relativePath": "shared/modules/renderers/dataGeneratorRobloxRendererUtils/constants.ts",
      "name": "constants.ts",
      "size": 2073,
      "lines": 79,
      "lastModified": "2025-07-06T17:28:27.816Z",
      "content": "/**\n * Constants for the Data Generator Roblox Renderer\n */\n\nexport const RENDERER_CONSTANTS = {\n  // Positioning constants for Roblox viewing\n  POSITIONING: {\n    COLUMN_SPACING: 10,  // 10 studs between columns (hexagons are 8 wide)\n    LEVEL_SPACING: 5,    // 5 studs between levels vertically\n    BASE_Y: 20,          // Start 20 studs above ground in the up/down axis\n  },\n  \n  // Hexagon dimensions\n  HEXAGON: {\n    WIDTH: 8,\n    HEIGHT: 1.5,\n  },\n  \n  // Rope properties\n  ROPE: {\n    THICKNESS: 0.4,\n    LENGTH_MULTIPLIER: 1.0, // No sag - exact distance\n  },\n  \n  // Link color mapping\n  LINK_COLORS: {\n    \"Parent-Child\": new BrickColor(\"Black\"),\n    \"Owns\": new BrickColor(\"Brown\"),\n    \"Wants\": new BrickColor(\"Bright violet\"),\n    \"Eats\": new BrickColor(\"Bright yellow\"),\n    \"Link1\": new BrickColor(\"Black\"),\n    \"Link2\": new BrickColor(\"Brown\"),\n    \"Link3\": new BrickColor(\"Bright violet\"),\n    \"Link4\": new BrickColor(\"Cyan\"),\n    \"Link5\": new BrickColor(\"Bright red\"),\n    \"Link6\": new BrickColor(\"Bright violet\"),\n    \"Link7\": new BrickColor(\"Brown\"),\n    \"Link8\": new BrickColor(\"Medium stone grey\"),\n    \"Link9\": new BrickColor(\"Bright orange\"),\n    \"Link10\": new BrickColor(\"Light blue\"),\n  },\n  \n  // Draw.io constants\n  DRAWIO: {\n    SCALE: {\n      X: 10,      // X-axis scale factor\n      Y: 10,      // Y-axis scale factor (doubled from 5)\n      Y_OFFSET: 400, // Y-axis offset for inversion\n    },\n    NODE: {\n      WIDTH: 120,\n      HEIGHT: 60,\n    },\n    EDGE_COLORS: {\n      \"Parent-Child\": \"#000000\",\n      \"Owns\": \"#8B4513\",\n      \"Wants\": \"#9370DB\",\n      \"Eats\": \"#FFD700\",\n      \"Link1\": \"#000000\",\n      \"Link2\": \"#8B4513\",\n      \"Link3\": \"#9370DB\",\n      \"Link4\": \"#00FFFF\",\n      \"Link5\": \"#FF0000\",\n      \"Link6\": \"#9370DB\",\n      \"Link7\": \"#8B4513\",\n      \"Link8\": \"#808080\",\n      \"Link9\": \"#FFA500\",\n      \"Link10\": \"#ADD8E6\",\n    },\n    NODE_COLORS: {\n      People: \"#4A90E2\",\n      Animals: \"#F5A623\",\n    },\n  },\n  \n  // Default fallback color\n  DEFAULT_COLOR: new BrickColor(\"Bright red\"),\n  DEFAULT_DRAWIO_COLOR: \"#FF0000\",\n};",
      "patterns": {
        "functions": 0,
        "classes": 0,
        "interfaces": 0,
        "exports": 1,
        "imports": 0,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/labelBlockMaker/utilities.ts",
      "relativePath": "shared/modules/labelBlockMaker/utilities.ts",
      "name": "utilities.ts",
      "size": 1965,
      "lines": 59,
      "lastModified": "2025-07-05T22:11:32.465Z",
      "content": "/**\n * Utility functions for label block creation\n */\n\nimport { createTextBox, createTextBoxWithCustomStyling } from \"../TextBoxMaker\";\nimport { LabelConfig, TextBoxProps } from \"./interfaces\";\n\nexport function createLabelsForBlock(\n  block: Part,\n  labels: LabelConfig,\n  textBoxOverrides: Partial<TextBoxProps>,\n  faceMap: [keyof LabelConfig, Enum.NormalId][]\n): void {\n  // Create labels for each specified face\n  faceMap.forEach(([faceKey, normalId]) => {\n    const labelConfig = labels[faceKey];\n    if (labelConfig) {\n      if (labelConfig.text) {\n        // Merge textBoxOverrides with individual label config\n        const mergedConfig = {\n          ...textBoxOverrides,\n          ...labelConfig,\n          text: labelConfig.text, // Ensure text is not overridden\n        };\n        \n        // Use custom styling if any styling properties are provided\n        if (\n          mergedConfig.textSize !== undefined ||\n          mergedConfig.backgroundColor !== undefined ||\n          mergedConfig.textColor !== undefined ||\n          mergedConfig.font !== undefined ||\n          mergedConfig.borderSizePixel !== undefined ||\n          mergedConfig.borderColor !== undefined ||\n          mergedConfig.textWrapped !== undefined\n        ) {\n          createTextBoxWithCustomStyling({\n            part: block,\n            face: normalId,\n            text: mergedConfig.text,\n            textSize: mergedConfig.textSize,\n            backgroundColor: mergedConfig.backgroundColor,\n            textColor: mergedConfig.textColor,\n            font: mergedConfig.font,\n            borderSizePixel: mergedConfig.borderSizePixel,\n            borderColor: mergedConfig.borderColor,\n            textWrapped: mergedConfig.textWrapped,\n          });\n        } else {\n          // Use simple text box for basic text\n          createTextBox({\n            part: block,\n            face: normalId,\n            text: mergedConfig.text,\n          });\n        }\n      }\n    }\n  });\n}",
      "patterns": {
        "functions": 2,
        "classes": 0,
        "interfaces": 0,
        "exports": 1,
        "imports": 2,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": [
          {
            "name": "createLabelsForBlock",
            "type": "function",
            "isExported": true
          }
        ]
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/renderers/unifiedDataRenderer/interfaces.ts",
      "relativePath": "shared/modules/renderers/unifiedDataRenderer/interfaces.ts",
      "name": "interfaces.ts",
      "size": 1847,
      "lines": 75,
      "lastModified": "2025-07-07T02:28:26.734Z",
      "content": "/**\n * Interfaces for Unified Data Renderer components\n */\n\nimport { EnhancedGeneratorConfig } from \"../../../interfaces/enhancedGenerator.interface\";\nimport { Cluster, Node } from \"../../../interfaces/simpleDataGenerator.interface\";\n\n/**\n * Interface for data generation functionality\n */\nexport interface IDataGenerator {\n  generateClusterFromLayers(config: EnhancedGeneratorConfig): Cluster;\n}\n\n/**\n * Interface for position calculation functionality\n */\nexport interface IPositionCalculator {\n  calculateLayerSwimLanePositions(cluster: Cluster, config: EnhancedGeneratorConfig): void;\n  centerBottomAtOrigin(cluster: Cluster, origin: Vector3, config?: EnhancedGeneratorConfig): void;\n}\n\n/**\n * Interface for node rendering functionality\n */\nexport interface INodeRenderer {\n  createHexagons(cluster: Cluster, nodesFolder: Folder, config?: EnhancedGeneratorConfig): Map<string, Model>;\n  renderCluster(cluster: Cluster, parentFolder: Folder, config?: EnhancedGeneratorConfig): void;\n}\n\n/**\n * Interface for update management functionality\n */\nexport interface IUpdateManager {\n  performIncrementalUpdate(\n    newConfig: EnhancedGeneratorConfig, \n    nodesFolder: Folder, \n    linksFolder: Folder, \n    origin: Vector3\n  ): void;\n}\n\n/**\n * Configuration for node creation\n */\nexport interface NodeCreationParams {\n  uuid: string;\n  name: string;\n  type: string;\n  colorIndex: number;\n  layerNum: number;\n  nodeIndex: number;\n}\n\n/**\n * Update plan for incremental updates\n */\nexport interface UpdatePlan {\n  nodesToAdd: Node[];\n  nodesToRemove: string[];\n  nodesToUpdate: Map<string, Node>;\n  layersToRemove: number[];\n}\n\n/**\n * Spacing configuration for rendering\n */\nexport interface SpacingConfig {\n  nodeHeight: number;\n  nodeRadius: number;\n  layerSpacing: number;\n  nodeSpacing: number;\n  swimlaneSpacing: number;\n  linkDiameter?: number;\n}",
      "patterns": {
        "functions": 0,
        "classes": 0,
        "interfaces": 7,
        "exports": 7,
        "imports": 2,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/barMaker/utilities.ts",
      "relativePath": "shared/modules/barMaker/utilities.ts",
      "name": "utilities.ts",
      "size": 1825,
      "lines": 49,
      "lastModified": "2025-07-06T20:51:06.075Z",
      "content": "import { padNumber } from \"../../utils/stringUtils\";\nimport { BAR_CONSTANTS } from \"./constants\";\n\nexport function makeAttachment(name: string, offset: number, id: string): Attachment {\n  const attachment = new Instance(\"Attachment\");\n  attachment.Name = id;\n  attachment.Position = new Vector3(0, 0, offset);\n  return attachment;\n}\n\nexport function makeCircle(\n  name: string,\n  x: number,\n  y: number,\n  z: number,\n  color: [number, number, number]\n): Part {\n  const circle = new Instance(\"Part\");\n  circle.Size = new Vector3(BAR_CONSTANTS.POINT_SIZE, BAR_CONSTANTS.POINT_SIZE, BAR_CONSTANTS.POINT_SIZE);\n  circle.Position = new Vector3(x, y, z);\n  circle.Anchored = true;\n  circle.Color = Color3.fromRGB(color[0] * 255, color[1] * 255, color[2] * 255);\n  circle.Material = Enum.Material.SmoothPlastic;\n  circle.Shape = Enum.PartType.Ball;\n  circle.CastShadow = false;\n  return circle;\n}\n\nexport function generateBarName(\n  stackIndex: number,\n  hexIndex: number,\n  barIndex: number\n): string {\n  const stackStr = padNumber(stackIndex, BAR_CONSTANTS.PAD_LENGTH);\n  const hexStr = padNumber(hexIndex, BAR_CONSTANTS.PAD_LENGTH);\n  const barStr = padNumber(barIndex, BAR_CONSTANTS.PAD_LENGTH);\n  return `${BAR_CONSTANTS.NAME_PREFIXES.BAR}${barStr}-${BAR_CONSTANTS.NAME_PREFIXES.HEX}${hexStr}-${BAR_CONSTANTS.NAME_PREFIXES.STACK}${stackStr}`;\n}\n\nexport function generateAttachmentName(\n  attachmentNumber: number,\n  hexIndex: number,\n  stackIndex: number\n): string {\n  const attStr = padNumber(attachmentNumber, BAR_CONSTANTS.PAD_LENGTH);\n  const hexStr = padNumber(hexIndex, BAR_CONSTANTS.PAD_LENGTH);\n  const stackStr = padNumber(stackIndex, BAR_CONSTANTS.PAD_LENGTH);\n  return `${BAR_CONSTANTS.NAME_PREFIXES.ATTACHMENT}${attStr}-${BAR_CONSTANTS.NAME_PREFIXES.HEX}${hexStr}-${BAR_CONSTANTS.NAME_PREFIXES.STACK}${stackStr}`;\n}",
      "patterns": {
        "functions": 4,
        "classes": 0,
        "interfaces": 0,
        "exports": 4,
        "imports": 2,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": [
          {
            "name": "makeAttachment",
            "type": "function",
            "isExported": true
          },
          {
            "name": "makeCircle",
            "type": "function",
            "isExported": true
          },
          {
            "name": "generateBarName",
            "type": "function",
            "isExported": true
          },
          {
            "name": "generateAttachmentName",
            "type": "function",
            "isExported": true
          }
        ]
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/client/services/configGui/components/axisMappingControls/components/visualCustomizationSection.ts",
      "relativePath": "client/services/configGui/components/axisMappingControls/components/visualCustomizationSection.ts",
      "name": "visualCustomizationSection.ts",
      "size": 1814,
      "lines": 74,
      "lastModified": "2025-07-10T17:44:34.346Z",
      "content": "import { getVisualProperties, UI_CONSTANTS } from \"../constants\";\nimport { createDropdown } from \"./dropdown\";\nimport { createSectionLabel, createLabel, createButton } from \"../utils/layoutManager\";\n\ninterface VisualCustomizationSectionProps {\n  parent: Frame;\n  backgroundColorValue: string;\n  borderColorValue: string;\n  onBackgroundColorChange: (value: string) => void;\n  onBorderColorChange: (value: string) => void;\n}\n\n/**\n * Creates the visual customization section of the controls\n */\nexport function createVisualCustomizationSection({\n  parent,\n  backgroundColorValue,\n  borderColorValue,\n  onBackgroundColorChange,\n  onBorderColorChange\n}: VisualCustomizationSectionProps): void {\n  // Section label\n  createSectionLabel(parent, \"Visual Customization\", 110);\n\n  // Background color row\n  createLabel(\n    parent,\n    \"background:\",\n    new UDim2(0, UI_CONSTANTS.SPACING.SECTION_MARGIN, 0, 130),\n    UI_CONSTANTS.SPACING.LABEL_WIDTH\n  );\n\n  const bgColorButton = createButton(\n    parent,\n    \"BgColorButton\",\n    backgroundColorValue,\n    new UDim2(0, 95, 0, 130),\n    150\n  );\n\n  // Border color row\n  createLabel(\n    parent,\n    \"border:\",\n    new UDim2(0, UI_CONSTANTS.SPACING.SECTION_MARGIN, 0, 155),\n    UI_CONSTANTS.SPACING.LABEL_WIDTH\n  );\n\n  const borderColorButton = createButton(\n    parent,\n    \"BorderColorButton\",\n    borderColorValue,\n    new UDim2(0, 95, 0, 155),\n    150\n  );\n\n  // Create dropdown functionality\n  createDropdown({\n    button: bgColorButton,\n    currentValue: backgroundColorValue,\n    onChange: onBackgroundColorChange,\n    parent: parent,\n    properties: getVisualProperties()\n  });\n\n  createDropdown({\n    button: borderColorButton,\n    currentValue: borderColorValue,\n    onChange: onBorderColorChange,\n    parent: parent,\n    properties: getVisualProperties()\n  });\n}",
      "patterns": {
        "functions": 1,
        "classes": 0,
        "interfaces": 1,
        "exports": 1,
        "imports": 3,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": [
          {
            "name": "createVisualCustomizationSection",
            "type": "function",
            "isExported": true
          }
        ]
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/hexStackMaker/standardizedInterfaces.ts",
      "relativePath": "shared/modules/hexStackMaker/standardizedInterfaces.ts",
      "name": "standardizedInterfaces.ts",
      "size": 1700,
      "lines": 73,
      "lastModified": "2025-07-08T10:10:20.992Z",
      "content": "/**\n * Standardized interfaces for hex stack maker\n * Following the IMaker pattern\n */\n\nimport { IVisualMakerConfig } from \"../../interfaces/IMaker\";\n\n/**\n * Standardized configuration for hex stack creation\n */\nexport interface IHexStackMakerConfig extends IVisualMakerConfig {\n  /** Width of each hexagon in the stack */\n  width?: number;\n  \n  /** Height of each hexagon in the stack */\n  height?: number;\n  \n  /** Number of hexagons to stack */\n  count?: number;\n  \n  /** Colors for each level (cycles if fewer than count) */\n  colors?: Color3[];\n  \n  /** Stack index for hierarchical organization */\n  stackIndex?: number;\n  \n  /** Labels for the hexagons */\n  labels?: string[];\n}\n\n/**\n * Legacy hex stack configuration (for backward compatibility during migration)\n */\nexport interface HexStackConfigLegacy {\n  id?: string | number;\n  centerPosition?: [number, number, number];\n  width?: number;\n  height?: number;\n  count?: number;\n  colors?: [number, number, number][];\n  stackIndex?: number;\n}\n\n/**\n * Converts legacy config to standardized config\n */\nexport function convertLegacyHexStackConfig(legacy: HexStackConfigLegacy): IHexStackMakerConfig {\n  const config: IHexStackMakerConfig = {\n    id: legacy.id,\n    width: legacy.width,\n    height: legacy.height,\n    count: legacy.count,\n    stackIndex: legacy.stackIndex,\n  };\n\n  // Convert position\n  if (legacy.centerPosition) {\n    config.position = new Vector3(\n      legacy.centerPosition[0],\n      legacy.centerPosition[1],\n      legacy.centerPosition[2]\n    );\n  }\n\n  // Convert colors\n  if (legacy.colors) {\n    config.colors = legacy.colors.map(color => \n      new Color3(color[0], color[1], color[2])\n    );\n  }\n\n  return config;\n}",
      "patterns": {
        "functions": 1,
        "classes": 0,
        "interfaces": 2,
        "exports": 3,
        "imports": 1,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": [
          {
            "name": "convertLegacyHexStackConfig",
            "type": "function",
            "isExported": true
          }
        ]
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/renderers/blocks/platformBlockCreator.ts",
      "relativePath": "shared/modules/renderers/blocks/platformBlockCreator.ts",
      "name": "platformBlockCreator.ts",
      "size": 1692,
      "lines": 65,
      "lastModified": "2025-07-09T02:29:27.764Z",
      "content": "/**\n * Platform Block Creator\n * Creates platform blocks for node visualization foundation\n * Part of F002 Phase 2 refactoring - T6\n */\n\nimport { BaseBlockCreator } from \"./baseBlockCreator\";\nimport { BLOCK_CONSTANTS } from \"../constants/blockConstants\";\n\nexport interface PlatformBlockConfig {\n  origin: Vector3;\n  parent: Instance;\n  height?: number;\n  size?: number;\n}\n\nexport class PlatformBlockCreator extends BaseBlockCreator {\n  /**\n   * Create a platform block with fixed size\n   */\n  public createPlatformBlock(config: PlatformBlockConfig): Part {\n    const {\n      origin,\n      parent,\n      height = BLOCK_CONSTANTS.DIMENSIONS.DEFAULT_HEIGHT,\n      size = BLOCK_CONSTANTS.DIMENSIONS.PLATFORM_SIZE\n    } = config;\n\n    const platformBlock = this.createBlock({\n      name: \"PlatformBlock\",\n      size: new Vector3(size, height, size),\n      position: new Vector3(\n        origin.X,\n        (height / 2) - BLOCK_CONSTANTS.DIMENSIONS.Z_FIGHTING_OFFSET,\n        origin.Z\n      ),\n      material: BLOCK_CONSTANTS.MATERIALS.PLATFORM,\n      color: BLOCK_CONSTANTS.COLORS.PLATFORM,\n      transparency: 1, // Fully transparent\n      canCollide: false\n    });\n\n    // Additional platform-specific properties\n    platformBlock.CastShadow = false;\n    platformBlock.Parent = parent;\n\n\n    return platformBlock;\n  }\n\n  /**\n   * Add texture to platform block\n   */\n  public addTextureToPlatform(platformBlock: Part, textureId?: string): void {\n    if (!textureId) return;\n\n    const texture = new Instance(\"Texture\");\n    texture.Texture = textureId;\n    texture.Face = Enum.NormalId.Top;\n    texture.StudsPerTileU = 10;\n    texture.StudsPerTileV = 10;\n    texture.Parent = platformBlock;\n\n  }\n}",
      "patterns": {
        "functions": 0,
        "classes": 1,
        "interfaces": 1,
        "exports": 2,
        "imports": 2,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/client/services/configGui/components/frame.ts",
      "relativePath": "client/services/configGui/components/frame.ts",
      "name": "frame.ts",
      "size": 1549,
      "lines": 49,
      "lastModified": "2025-07-08T09:55:07.690Z",
      "content": "import { GUI_CONSTANTS } from \"../constants\";\nimport { createUICorner } from \"../utilities\";\n\ninterface FrameOptions {\n  name: string;\n  parent: Instance;\n  position?: UDim2;\n  size?: UDim2;\n  backgroundColor?: Color3;\n  borderSizePixel?: number;\n}\n\n/**\n * Creates a generic frame with the given options\n */\nexport function createFrame(options: FrameOptions): Frame {\n  const frame = new Instance(\"Frame\");\n  frame.Name = options.name;\n  frame.Size = options.size || new UDim2(1, 0, 1, 0);\n  frame.Position = options.position || new UDim2(0, 0, 0, 0);\n  frame.BackgroundColor3 = options.backgroundColor || GUI_CONSTANTS.COLORS.BACKGROUND;\n  frame.BorderSizePixel = options.borderSizePixel !== undefined ? options.borderSizePixel : 0;\n  frame.Parent = options.parent;\n\n  // Add corner rounding if using default border\n  if (options.borderSizePixel === undefined || options.borderSizePixel === 0) {\n    createUICorner(frame);\n  }\n\n  return frame;\n}\n\n/**\n * Creates the main frame for the configuration GUI\n */\nexport function createMainFrame(parent: ScreenGui, size?: UDim2): Frame {\n  const configFrame = new Instance(\"Frame\");\n  configFrame.Name = GUI_CONSTANTS.NAMES.MAIN_FRAME;\n  configFrame.Size = size || new UDim2(0, GUI_CONSTANTS.FRAME.WIDTH, 0, GUI_CONSTANTS.FRAME.HEIGHT);\n  configFrame.Position = GUI_CONSTANTS.FRAME.POSITION;\n  configFrame.BackgroundColor3 = GUI_CONSTANTS.COLORS.BACKGROUND;\n  configFrame.BorderSizePixel = 0;\n  configFrame.Parent = parent;\n\n  // Add corner rounding\n  createUICorner(configFrame);\n\n  return configFrame;\n}",
      "patterns": {
        "functions": 2,
        "classes": 0,
        "interfaces": 1,
        "exports": 2,
        "imports": 2,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": [
          {
            "name": "createFrame",
            "type": "function",
            "isExported": true
          },
          {
            "name": "createMainFrame",
            "type": "function",
            "isExported": true
          }
        ]
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/client/services/configGui/components/axisMappingControls/types.ts",
      "relativePath": "client/services/configGui/components/axisMappingControls/types.ts",
      "name": "types.ts",
      "size": 1539,
      "lines": 58,
      "lastModified": "2025-07-10T20:36:41.965Z",
      "content": "import type { AxisMapping, VisualMapping } from \"../../../../../shared/interfaces/enhancedGenerator.interface\";\n\nexport interface AxisMappingControlsProps {\n  parent: Frame;\n  axisMapping?: AxisMapping;\n  visualMapping?: VisualMapping;\n  useLayerForYAxis?: boolean;\n  yAxisProperty?: string;\n  onAxisMappingChange: (axis: \"xAxis\" | \"zAxis\" | \"yAxis\", value: string) => void;\n  onVisualMappingChange: (mapping: keyof VisualMapping, value: string) => void;\n  onYAxisModeChange?: (useLayer: boolean) => void;\n  onYAxisPropertyChange?: (property: string) => void;\n}\n\nexport interface CompactAxisControlsProps {\n  gui: ScreenGui;\n  xAxisValue: string;\n  zAxisValue: string;\n  yAxisValue: string;\n  backgroundColorValue: string;\n  borderColorValue: string;\n  onXAxisChange: (value: string) => void;\n  onZAxisChange: (value: string) => void;\n  onYAxisChange: (value: string) => void;\n  onBackgroundColorChange: (value: string) => void;\n  onBorderColorChange: (value: string) => void;\n}\n\nexport interface DropdownProps {\n  button: TextButton;\n  currentValue: string;\n  onChange: (value: string) => void;\n  parent: Frame;\n  properties: string[];\n}\n\nexport interface RadioButtonProps {\n  parent: Frame;\n  position: UDim2;\n  text: string;\n  selected: boolean;\n  onSelect: () => void;\n}\n\nexport interface SectionProps {\n  parent: Frame;\n  title: string;\n  yPosition: number;\n}\n\nexport interface LabeledControlProps {\n  parent: Frame;\n  label: string;\n  yPosition: number;\n  value: string;\n  properties: string[];\n  onChange: (value: string) => void;\n}",
      "patterns": {
        "functions": 0,
        "classes": 0,
        "interfaces": 6,
        "exports": 6,
        "imports": 1,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/client/services/configGui/components/globalSettings.ts",
      "relativePath": "client/services/configGui/components/globalSettings.ts",
      "name": "globalSettings.ts",
      "size": 1504,
      "lines": 48,
      "lastModified": "2025-07-07T15:04:20.346Z",
      "content": "import { GUI_CONSTANTS } from \"../constants\";\nimport { createSpacingControls } from \"./spacingControls\";\nimport type { SpacingConfig } from \"../../../../shared/interfaces/enhancedGenerator.interface\";\n\ninterface GlobalSettingsProps {\n  parent: Frame;\n  spacing: SpacingConfig;\n  onSpacingChange: (field: keyof SpacingConfig, value: number) => void;\n}\n\nexport function createGlobalSettings({\n  parent,\n  spacing,\n  onSpacingChange\n}: GlobalSettingsProps): Frame {\n  // Create container\n  const container = new Instance(\"Frame\");\n  container.Name = \"GlobalSettings\";\n  container.Size = new UDim2(1, -20, 0, GUI_CONSTANTS.ENHANCED.GLOBAL_SETTINGS_HEIGHT);\n  container.Position = new UDim2(0, 0, 0, 0); // Position will be set by layout manager\n  container.BackgroundColor3 = new Color3(0.15, 0.15, 0.15);\n  container.BorderSizePixel = 0;\n  container.Parent = parent;\n\n  const containerCorner = new Instance(\"UICorner\");\n  containerCorner.CornerRadius = new UDim(0, 4);\n  containerCorner.Parent = container;\n\n  // Title\n  const title = new Instance(\"TextLabel\");\n  title.Size = new UDim2(1, -10, 0, 25);\n  title.Position = new UDim2(0, 5, 0, 5);\n  title.BackgroundTransparency = 1;\n  title.Font = GUI_CONSTANTS.TYPOGRAPHY.TITLE_FONT;\n  title.Text = \"Global Settings\";\n  title.TextColor3 = GUI_CONSTANTS.COLORS.TEXT;\n  title.TextScaled = true;\n  title.Parent = container;\n\n  // Add spacing controls\n  createSpacingControls({\n    parent: container,\n    spacing,\n    onSpacingChange\n  });\n\n  return container;\n}",
      "patterns": {
        "functions": 1,
        "classes": 0,
        "interfaces": 1,
        "exports": 1,
        "imports": 3,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": [
          {
            "name": "createGlobalSettings",
            "type": "function",
            "isExported": true
          }
        ]
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/interfaces/nodeTypes.ts",
      "relativePath": "shared/interfaces/nodeTypes.ts",
      "name": "nodeTypes.ts",
      "size": 1493,
      "lines": 54,
      "lastModified": "2025-07-07T09:31:22.193Z",
      "content": "/**\n * Strongly typed node type definitions\n * Part of F002 refactoring for improved type safety\n */\n\n// Core node type unions\nexport type PersonNodeType = \"man\" | \"woman\" | \"child\" | \"grandparent\";\nexport type AnimalNodeType = \"Animals\"; // Currently only one animal group type\nexport type NodeType = PersonNodeType | AnimalNodeType;\n\n// Property type definitions\nexport interface PersonProperties {\n  age: number;\n  petType: string;\n  petColor: string;\n  firstName: string;\n  lastName: string;\n  countryOfBirth: string;\n  countryOfResidence: string;\n}\n\nexport interface AnimalProperties {\n  animalType: string;\n}\n\n// Node property union\nexport type NodeProperties = PersonProperties | AnimalProperties;\n\n// Type guards\nexport function isPersonNodeType(nodeType: string): nodeType is PersonNodeType {\n  return [\"man\", \"woman\", \"child\", \"grandparent\"].includes(nodeType);\n}\n\nexport function isAnimalNodeType(nodeType: string): nodeType is AnimalNodeType {\n  return nodeType === \"Animals\";\n}\n\nexport function isValidNodeType(nodeType: string): nodeType is NodeType {\n  return isPersonNodeType(nodeType) || isAnimalNodeType(nodeType);\n}\n\n// Axis property names\nexport type AxisPropertyName = \"type\" | \"age\" | \"petType\" | \"petColor\" | \"firstName\" | \"lastName\" | \"countryOfBirth\" | \"countryOfResidence\";\n\nexport const AXIS_PROPERTIES: readonly AxisPropertyName[] = [\n  \"type\",\n  \"age\", \n  \"petType\",\n  \"petColor\",\n  \"firstName\",\n  \"lastName\",\n  \"countryOfBirth\",\n  \"countryOfResidence\"\n] as const;",
      "patterns": {
        "functions": 3,
        "classes": 0,
        "interfaces": 2,
        "exports": 11,
        "imports": 0,
        "anyTypes": 0,
        "typeAssertions": 1,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": [
          {
            "name": "isPersonNodeType",
            "type": "function",
            "isExported": true
          },
          {
            "name": "isAnimalNodeType",
            "type": "function",
            "isExported": true
          },
          {
            "name": "isValidNodeType",
            "type": "function",
            "isExported": true
          }
        ]
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/client/services/configGui/components/status.ts",
      "relativePath": "client/services/configGui/components/status.ts",
      "name": "status.ts",
      "size": 1472,
      "lines": 40,
      "lastModified": "2025-07-07T15:07:38.249Z",
      "content": "import { GUI_CONSTANTS } from \"../constants\";\n\ninterface StatusProps {\n  parent: Frame;\n  initialMessage?: string;\n}\n\nexport function createStatusArea({ parent, initialMessage = \"Ready\" }: StatusProps): TextLabel {\n  const statusLabel = new Instance(\"TextLabel\");\n  statusLabel.Name = \"StatusLabel\";\n  statusLabel.Size = new UDim2(1, -20, 0, 25);\n  statusLabel.Position = new UDim2(0, 10, 1, -35); // Position at bottom\n  statusLabel.BackgroundColor3 = new Color3(0.1, 0.1, 0.1);\n  statusLabel.BorderSizePixel = 0;\n  statusLabel.Font = GUI_CONSTANTS.TYPOGRAPHY.LABEL_FONT;\n  statusLabel.Text = `Status: ${initialMessage}`;\n  statusLabel.TextColor3 = GUI_CONSTANTS.COLORS.TEXT;\n  statusLabel.TextScaled = true;\n  statusLabel.TextXAlignment = Enum.TextXAlignment.Left;\n  statusLabel.Parent = parent;\n\n  const statusCorner = new Instance(\"UICorner\");\n  statusCorner.CornerRadius = new UDim(0, 4);\n  statusCorner.Parent = statusLabel;\n\n  return statusLabel;\n}\n\nexport function updateStatus(statusLabel: TextLabel, message: string, isError = false): void {\n  statusLabel.Text = `Status: ${message}`;\n  statusLabel.TextColor3 = isError ? GUI_CONSTANTS.COLORS.ERROR : GUI_CONSTANTS.COLORS.TEXT;\n  \n  // Flash effect for important messages\n  if (isError) {\n    const originalColor = statusLabel.BackgroundColor3;\n    statusLabel.BackgroundColor3 = new Color3(0.4, 0.1, 0.1);\n    wait(GUI_CONSTANTS.ANIMATION.FLASH_DURATION);\n    statusLabel.BackgroundColor3 = originalColor;\n  }\n}",
      "patterns": {
        "functions": 2,
        "classes": 0,
        "interfaces": 1,
        "exports": 2,
        "imports": 1,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": [
          {
            "name": "createStatusArea",
            "type": "function",
            "isExported": true
          },
          {
            "name": "updateStatus",
            "type": "function",
            "isExported": true
          }
        ]
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/labelBlockMaker/interfaces.ts",
      "relativePath": "shared/modules/labelBlockMaker/interfaces.ts",
      "name": "interfaces.ts",
      "size": 1320,
      "lines": 52,
      "lastModified": "2025-07-05T22:32:14.124Z",
      "content": "/**\n * Interfaces for label block creation\n */\n\nexport interface TextBoxProps {\n  text?: string;\n  textSize?: number;\n  backgroundColor?: Color3;\n  textColor?: Color3;\n  font?: Enum.Font;\n  borderSizePixel?: number;\n  borderColor?: Color3;\n  textWrapped?: boolean;\n}\n\nexport interface LabelConfig {\n  top?: TextBoxProps;\n  bottom?: TextBoxProps;\n  front?: TextBoxProps;\n  back?: TextBoxProps;\n  left?: TextBoxProps;\n  right?: TextBoxProps;\n}\n\nexport interface LabelBlockProps {\n  Size?: number; // Cube dimension (n x n x n)\n  Anchored?: boolean;\n  Color?: [number, number, number];\n  Material?: string;\n  Transparency?: number;\n  [key: string]: any; // Allow any additional Part properties\n}\n\nexport interface LabelBlockConfig {\n  id: string;\n  position?: { x: number; y: number; z: number };\n  rotation?: { x: number; y: number; z: number };\n  props?: LabelBlockProps;\n  labels?: LabelConfig;\n  textBoxOverrides?: Partial<TextBoxProps>;\n  parent?: Instance;\n}\n\nimport { LABEL_BLOCK_CONSTANTS } from \"./constants\";\n\nexport const defaultProps: LabelBlockProps = {\n  Size: LABEL_BLOCK_CONSTANTS.DEFAULT_SIZE,\n  Anchored: LABEL_BLOCK_CONSTANTS.DEFAULT_ANCHORED,\n  Color: LABEL_BLOCK_CONSTANTS.DEFAULT_COLOR,\n  Material: LABEL_BLOCK_CONSTANTS.DEFAULT_MATERIAL,\n  Transparency: LABEL_BLOCK_CONSTANTS.DEFAULT_TRANSPARENCY,\n};",
      "patterns": {
        "functions": 0,
        "classes": 0,
        "interfaces": 4,
        "exports": 5,
        "imports": 1,
        "anyTypes": 1,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/server/services/main/dev2features.ts",
      "relativePath": "server/services/main/dev2features.ts",
      "name": "dev2features.ts",
      "size": 1090,
      "lines": 34,
      "lastModified": "2025-07-06T17:28:27.815Z",
      "content": "/**\n * Dev2 Features\n * \n * This file contains feature imports and initialization for developer 2.\n * This allows multiple developers to work on features simultaneously\n * without causing merge conflicts in game.service.ts\n */\n\nimport { GroupAnimationTestService } from \"../groupAnimationTest.service\";\nimport { ColorsTestService } from \"../colorsTest.service\";\n\n// Feature flags\nconst RUN_ANIMATION_TEST = true; // Set to true to enable animation test\nconst RUN_COLORS_TEST = true; // Set to true to enable colors test\n\nexport function initializeDev2Features(myStuffFolder: Folder): void {\n  print(\"🔧 Initializing Dev2 features...\");\n\n  // Run animation test if enabled\n  if (RUN_ANIMATION_TEST) {\n    const animationTest = new GroupAnimationTestService();\n    animationTest.runTest(myStuffFolder);\n    print(\"🎬 Animation test initialized\");\n  }\n\n  // Run colors test if enabled\n  if (RUN_COLORS_TEST) {\n    const colorsTest = new ColorsTestService();\n    colorsTest.runTest(myStuffFolder);\n    print(\"🎨 Colors test initialized\");\n  }\n\n  // Add more dev2 features here as needed\n}",
      "patterns": {
        "functions": 1,
        "classes": 0,
        "interfaces": 0,
        "exports": 1,
        "imports": 2,
        "anyTypes": 0,
        "typeAssertions": 1,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": [
          {
            "name": "initializeDev2Features",
            "type": "function",
            "isExported": true
          }
        ]
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/renderers/constants/labelConstants.ts",
      "relativePath": "shared/modules/renderers/constants/labelConstants.ts",
      "name": "labelConstants.ts",
      "size": 982,
      "lines": 39,
      "lastModified": "2025-07-07T09:44:14.673Z",
      "content": "/**\n * Constants for label rendering\n * Part of F002 refactoring to eliminate magic numbers\n */\n\nexport const LABEL_CONSTANTS = {\n  COLORS: {\n    DEFAULT_TEXT: new Color3(1, 1, 1), // White\n    DEFAULT_BACKGROUND: new Color3(0, 0, 0), // Black\n    DEFAULT_BORDER: new Color3(0, 0, 0), // Black\n    SHADOW: new Color3(0, 0, 0), // Black for text shadows\n  },\n  TRANSPARENCY: {\n    BACKGROUND: 0.7,\n    PART: 1, // Invisible label part\n    TEXT_STROKE: 0.5,\n  },\n  SIZES: {\n    BILLBOARD_WIDTH: 100,\n    BILLBOARD_HEIGHT: 25,\n    PART_SIZE: 0.1,\n    FONT_SIZE: 75,\n    BORDER_SIZE: 10,\n    TEXT_SCALE_FACTOR: 0.9, // Text takes 90% of frame\n  },\n  OFFSETS: {\n    POSITION_OFFSET: 2, // Y offset above blocks\n    PLATFORM_EDGE_OFFSET: 8, // Distance from platform edge\n  },\n  FORMATTING: {\n    FONT: Enum.Font.SourceSans,\n    FONT_BOLD: Enum.Font.SourceSansBold,\n    SURFACE_GUI_PIXELS_PER_STUD: 50,\n  },\n  NAMES: {\n    LABEL_PREFIX: \"Label_\",\n    SURFACE_GUI_PREFIX: \"Label_\",\n  },\n};",
      "patterns": {
        "functions": 0,
        "classes": 0,
        "interfaces": 0,
        "exports": 1,
        "imports": 0,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/ropeLabelMaker/ropeLabelMaker.ts",
      "relativePath": "shared/modules/ropeLabelMaker/ropeLabelMaker.ts",
      "name": "ropeLabelMaker.ts",
      "size": 971,
      "lines": 40,
      "lastModified": "2025-07-06T02:19:20.674Z",
      "content": "/**\n * Main rope label creation module\n */\n\nimport { createLabelGroup } from \"../labelGroupMaker\";\nimport { RopeLabelProps } from \"./interfaces\";\nimport { parseRelationName } from \"./utilities\";\n\n/**\n * Creates a rope label with source, relation, and target text blocks\n */\nexport function createRopeLabel(props: RopeLabelProps): Model {\n  const {\n    ropeIndex,\n    relationTypeName,\n    sourceAttachment,\n    targetAttachment,\n    parent,\n    relationName = \"\"\n  } = props;\n\n  // Parse the relation name into components\n  const parsedRelation = parseRelationName(relationName, relationTypeName);\n\n  // Use the labelGroupMaker to create 3 separate blocks\n  const labelGroup = createLabelGroup({\n    ropeIndex,\n    sourceText: parsedRelation.source,\n    relationText: parsedRelation.relation,\n    targetText: parsedRelation.target,\n    sourceAttachment,\n    targetAttachment,\n    parent,\n    props: {\n      relationName: relationName,\n    },\n  });\n\n  return labelGroup;\n}",
      "patterns": {
        "functions": 1,
        "classes": 0,
        "interfaces": 0,
        "exports": 1,
        "imports": 3,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": [
          {
            "name": "createRopeLabel",
            "type": "function",
            "isExported": true
          }
        ]
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/client/services/configGui/interfaces.ts",
      "relativePath": "client/services/configGui/interfaces.ts",
      "name": "interfaces.ts",
      "size": 961,
      "lines": 35,
      "lastModified": "2025-07-10T09:33:36.193Z",
      "content": "import { LayerConfig, EnhancedGeneratorConfig } from \"../../../shared/interfaces/enhancedGenerator.interface\";\n\n// Re-export the shared interfaces for local use\nexport { LayerConfig, EnhancedGeneratorConfig };\n\nexport interface ConfigGUIServiceOptions {\n  onEnhancedConfigChange?: (config: EnhancedGeneratorConfig) => void;\n  onClearRequest?: () => void;\n  onUpdateRequest?: (config: EnhancedGeneratorConfig) => void;\n  position?: UDim2;\n  initialConfig?: EnhancedGeneratorConfig;\n}\n\nexport interface GUIState {\n  isVisible: boolean;\n  enhancedConfig: EnhancedGeneratorConfig;\n  gui?: ScreenGui;\n  configFrame?: Frame;\n  layerRows: Frame[];\n  statusLabel?: TextLabel;\n  discoveredProperties?: string[];\n  axisMappingConfig?: any; // Store axis mapping config for delayed creation\n}\n\nexport interface ComponentProps {\n  parent: Instance;\n  config?: Partial<{\n    size?: UDim2;\n    position?: UDim2;\n    backgroundColor?: Color3;\n    textColor?: Color3;\n  }>;\n}\n\n",
      "patterns": {
        "functions": 0,
        "classes": 0,
        "interfaces": 3,
        "exports": 5,
        "imports": 1,
        "anyTypes": 1,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/ropeLabelMaker/interfaces.ts",
      "relativePath": "shared/modules/ropeLabelMaker/interfaces.ts",
      "name": "interfaces.ts",
      "size": 911,
      "lines": 49,
      "lastModified": "2025-07-06T02:18:17.088Z",
      "content": "/**\n * Interfaces for the rope label maker module\n */\n\n/**\n * Properties required to create a rope label\n */\nexport interface RopeLabelProps {\n  ropeIndex: number;\n  relationTypeName: string;\n  sourceAttachment: Attachment;\n  targetAttachment: Attachment;\n  parent: Instance;\n  relationName?: string;\n}\n\n/**\n * Configuration for rope label creation\n */\nexport interface RopeLabelConfig {\n  ropeIndex: number;\n  relationTypeName: string;\n  sourceAttachment: Attachment;\n  targetAttachment: Attachment;\n  parent: Instance;\n  props?: { [key: string]: any };\n}\n\n/**\n * Parsed relation data structure\n */\nexport interface ParsedRelation {\n  source: string;\n  relation: string;\n  target: string;\n}\n\n/**\n * Options for customizing rope label appearance\n */\nexport interface RopeLabelOptions {\n  textSize?: number;\n  spacing?: number;\n  colors?: {\n    source?: Color3;\n    relation?: Color3;\n    target?: Color3;\n  };\n}",
      "patterns": {
        "functions": 0,
        "classes": 0,
        "interfaces": 4,
        "exports": 4,
        "imports": 0,
        "anyTypes": 1,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/renderers/constants/layoutConstants.ts",
      "relativePath": "shared/modules/renderers/constants/layoutConstants.ts",
      "name": "layoutConstants.ts",
      "size": 887,
      "lines": 29,
      "lastModified": "2025-07-10T21:53:52.206Z",
      "content": "/**\n * Constants for layout construction and lane dimensions\n * Part of F006 - ReDesign Layout Construction\n */\n\nexport const LAYOUT_CONSTANTS = {\n  LANE_DIMENSIONS: {\n    // Z-parallel lanes (vertical colored blocks)\n    Z_PARALLEL_LANE_WIDTH: 20, // Fixed width for Z-parallel lanes\n    \n    // X-parallel lanes (horizontal blocks)\n    X_PARALLEL_LANE_DEPTH: 4, // Fixed depth (Z dimension) for X-parallel lanes\n    X_PARALLEL_LANE_HEIGHT: 1, // Fixed height for X-parallel lanes\n  },\n  \n  LANE_SPACING: {\n    Z_PARALLEL_LANE_SPACING: 5, // Space between Z-parallel lanes\n  },\n  \n  SHADOW_PADDING: {\n    X_PADDING: 5, // Padding on left/right of all content\n    Z_PADDING: 5, // Padding on front/back of all content\n    Y_SHADOW_PADDING: 3, // Padding around Y-parallel shadow blocks\n  },\n  \n  NODE_SPACING: {\n    X_DIRECTION_NODE_SPACING: 3, // Space between nodes along X axis\n  }\n};",
      "patterns": {
        "functions": 0,
        "classes": 0,
        "interfaces": 0,
        "exports": 1,
        "imports": 0,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/renderers/constants/positionConstants.ts",
      "relativePath": "shared/modules/renderers/constants/positionConstants.ts",
      "name": "positionConstants.ts",
      "size": 881,
      "lines": 35,
      "lastModified": "2025-07-10T01:38:53.837Z",
      "content": "/**\n * Constants for position calculation and node arrangement\n * Part of F002 refactoring to eliminate magic numbers\n */\n\nexport const POSITION_CONSTANTS = {\n  MIN_GROUND_CLEARANCE: 5,\n  Z_DIMENSION_GROUP_SPACING: 5, // Spacing between groups along Z dimension\n  BASE_Y: 20, // Default base Y position for nodes\n  \n  AGE_RANGES: {\n    CHILD: { min: 0, max: 19, label: \"0-19\" },\n    YOUNG_ADULT: { min: 20, max: 39, label: \"20-39\" },\n    MIDDLE_AGED: { min: 40, max: 59, label: \"40-59\" },\n    SENIOR: { min: 60, max: 79, label: \"60-79\" },\n    ELDERLY: { min: 80, max: 999, label: \"80+\" },\n  },\n  \n  BOUNDS: {\n    INITIAL_MIN: math.huge,\n    INITIAL_MAX: -math.huge,\n  },\n  \n  LABEL: {\n    Y_OFFSET: 2,\n    X_OFFSET: -8,\n    Z_OFFSET: -8,\n    PLATFORM_EDGE_OFFSET: 8,\n  },\n  \n  SWIMLANE: {\n    GAP_MULTIPLIER: 1, // Additional gap between swimlanes\n    CENTERING_DIVISOR: 2,\n  },\n};",
      "patterns": {
        "functions": 0,
        "classes": 0,
        "interfaces": 0,
        "exports": 1,
        "imports": 0,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/client/services/configGui/components/axisMappingControls/utils/screenGuiManager.ts",
      "relativePath": "client/services/configGui/components/axisMappingControls/utils/screenGuiManager.ts",
      "name": "screenGuiManager.ts",
      "size": 868,
      "lines": 33,
      "lastModified": "2025-07-10T19:58:12.927Z",
      "content": "import { Players } from \"@rbxts/services\";\n\n// Store reference to the shared GUI\nlet axisDropdownGUI: ScreenGui | undefined;\n\n/**\n * Gets or creates the shared ScreenGui for axis dropdown controls\n */\nexport function getOrCreateScreenGui(): ScreenGui {\n  if (!axisDropdownGUI) {\n    const player = Players.LocalPlayer;\n    const playerGui = player.WaitForChild(\"PlayerGui\") as PlayerGui;\n    \n    axisDropdownGUI = new Instance(\"ScreenGui\");\n    axisDropdownGUI.Name = \"AxisDropdownGUI\";\n    axisDropdownGUI.ResetOnSpawn = false;\n    axisDropdownGUI.Parent = playerGui;\n  }\n  \n  return axisDropdownGUI;\n}\n\n/**\n * Destroys and recreates the axis dropdown GUI\n * Used to refresh the GUI when properties are discovered\n */\nexport function refreshAxisDropdownGUI(): void {\n  if (axisDropdownGUI) {\n    \n    axisDropdownGUI.Destroy();\n    axisDropdownGUI = undefined;\n  }\n}",
      "patterns": {
        "functions": 2,
        "classes": 0,
        "interfaces": 0,
        "exports": 2,
        "imports": 1,
        "anyTypes": 0,
        "typeAssertions": 1,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": [
          {
            "name": "getOrCreateScreenGui",
            "type": "function",
            "isExported": true
          },
          {
            "name": "refreshAxisDropdownGUI",
            "type": "function",
            "isExported": true
          }
        ]
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/barMaker/interfaces.ts",
      "relativePath": "shared/modules/barMaker/interfaces.ts",
      "name": "interfaces.ts",
      "size": 836,
      "lines": 36,
      "lastModified": "2025-07-07T09:30:00.138Z",
      "content": "import { BAR_CONSTANTS } from \"./constants\";\n\nexport interface BarProps {\n  Size: [number, number, number];\n  Anchored: boolean;\n  Color: [number, number, number];\n  Material: string;\n  Shape: string;\n  TopSurface: string;\n  BottomSurface: string;\n  Transparency: number;\n  BackgroundColor?: Color3;\n  BorderColor?: Color3;\n}\n\nexport interface BarConfig {\n  id: string;\n  position?: { x: number; y: number; z: number };\n  rotation?: { x: number; y: number; z: number };\n  props?: Partial<BarProps>;\n  label?: string;\n  stackIndex?: number;\n  hexIndex?: number;\n  barIndex?: number;\n}\n\nexport const defaultProps: BarProps = {\n  Size: BAR_CONSTANTS.DEFAULT_SIZE,\n  Anchored: true,\n  Color: BAR_CONSTANTS.DEFAULT_COLOR,\n  Material: \"SmoothPlastic\",\n  Shape: \"Block\",\n  TopSurface: \"Smooth\",\n  BottomSurface: \"Smooth\",\n  Transparency: 0,\n};",
      "patterns": {
        "functions": 0,
        "classes": 0,
        "interfaces": 2,
        "exports": 3,
        "imports": 1,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/interfaces/IService.ts",
      "relativePath": "shared/interfaces/IService.ts",
      "name": "IService.ts",
      "size": 819,
      "lines": 39,
      "lastModified": "2025-07-06T20:55:46.789Z",
      "content": "/**\n * IService - Interface for all services\n * \n * Defines the contract that all services must implement\n */\n\nexport interface IService {\n  /**\n   * Destroys the service and cleans up resources\n   */\n  destroy(): void;\n  \n  /**\n   * Checks if the service has been destroyed\n   */\n  isServiceDestroyed(): boolean;\n}\n\n/**\n * IServiceWithInit - Interface for services that require initialization\n */\nexport interface IServiceWithInit extends IService {\n  /**\n   * Initializes the service\n   * @returns Promise that resolves when initialization is complete\n   */\n  initialize(): Promise<void>;\n}\n\n/**\n * IServiceOptions - Base options for service configuration\n */\nexport interface IServiceOptions {\n  /** Optional name for the service instance */\n  name?: string;\n  \n  /** Optional debug mode flag */\n  debug?: boolean;\n}",
      "patterns": {
        "functions": 0,
        "classes": 0,
        "interfaces": 3,
        "exports": 3,
        "imports": 0,
        "anyTypes": 0,
        "typeAssertions": 1,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/server/main.server.ts",
      "relativePath": "server/main.server.ts",
      "name": "main.server.ts",
      "size": 799,
      "lines": 22,
      "lastModified": "2025-07-09T02:34:53.067Z",
      "content": "/**\n * Main Server Entry Point\n * \n * This file serves as the primary entry point for all server-side functionality.\n * It is intentionally \"orphaned\" (not imported by other modules) because:\n * 1. It is the root bootstrapper for the server-side application\n * 2. Roblox automatically executes this file when placed in ServerScriptService\n * 3. It initializes the main GameService which orchestrates all server operations\n * \n * Architecture Note: This follows the \"composition root\" pattern where the\n * application's main service is instantiated and started from a single entry point.\n * All other services are managed by GameService through dependency injection.\n */\n\n\nimport { GameService } from \"./services/main/game.service\";\n\n\nconst gameService = new GameService();\n\ngameService.startGame();\n",
      "patterns": {
        "functions": 0,
        "classes": 0,
        "interfaces": 0,
        "exports": 0,
        "imports": 1,
        "anyTypes": 0,
        "typeAssertions": 1,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/labelBlockMaker/constants.ts",
      "relativePath": "shared/modules/labelBlockMaker/constants.ts",
      "name": "constants.ts",
      "size": 770,
      "lines": 28,
      "lastModified": "2025-07-07T09:43:23.566Z",
      "content": "/**\n * Constants for label block creation\n */\n\nimport { BLOCK_CONSTANTS } from \"../renderers/constants/blockConstants\";\n\nexport const LABEL_BLOCK_CONSTANTS = {\n  // Default block properties\n  DEFAULT_SIZE: 8,\n  DEFAULT_COLOR: [0.5, 0.5, 0.5] as [number, number, number],\n  DEFAULT_MATERIAL: \"SmoothPlastic\",\n  DEFAULT_TRANSPARENCY: BLOCK_CONSTANTS.TRANSPARENCY.OPAQUE,\n  DEFAULT_ANCHORED: true,\n  \n  // Formatting\n  PAD_LENGTH: 3,\n  NAME_PREFIX: \"labelBlock\",\n  \n  // Face mapping for label placement\n  FACE_MAP: [\n    [\"top\", Enum.NormalId.Top],\n    [\"bottom\", Enum.NormalId.Bottom],\n    [\"front\", Enum.NormalId.Front],\n    [\"back\", Enum.NormalId.Back],\n    [\"left\", Enum.NormalId.Left],\n    [\"right\", Enum.NormalId.Right],\n  ] as [string, Enum.NormalId][],\n} as const;",
      "patterns": {
        "functions": 0,
        "classes": 0,
        "interfaces": 0,
        "exports": 1,
        "imports": 1,
        "anyTypes": 0,
        "typeAssertions": 1,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/client/services/configGui/components/title.ts",
      "relativePath": "client/services/configGui/components/title.ts",
      "name": "title.ts",
      "size": 746,
      "lines": 26,
      "lastModified": "2025-07-08T09:55:07.691Z",
      "content": "import { GUI_CONSTANTS } from \"../constants\";\n\ninterface TitleOptions {\n  text: string;\n  parent: Frame;\n  position?: UDim2;\n  size?: UDim2;\n}\n\n/**\n * Creates a title label with the given options\n */\nexport function createTitle(options: TitleOptions): TextLabel {\n  const title = new Instance(\"TextLabel\");\n  title.Name = GUI_CONSTANTS.NAMES.TITLE;\n  title.Size = options.size || new UDim2(1, 0, 0, GUI_CONSTANTS.TYPOGRAPHY.TITLE_HEIGHT);\n  title.Position = options.position || new UDim2(0, 0, 0, 0);\n  title.BackgroundTransparency = 1;\n  title.Text = options.text;\n  title.TextColor3 = GUI_CONSTANTS.COLORS.TEXT;\n  title.TextScaled = true;\n  title.Font = GUI_CONSTANTS.TYPOGRAPHY.TITLE_FONT;\n  title.Parent = options.parent;\n  \n  return title;\n}",
      "patterns": {
        "functions": 1,
        "classes": 0,
        "interfaces": 1,
        "exports": 1,
        "imports": 1,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": [
          {
            "name": "createTitle",
            "type": "function",
            "isExported": true
          }
        ]
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/ropeLabelMaker/constants.ts",
      "relativePath": "shared/modules/ropeLabelMaker/constants.ts",
      "name": "constants.ts",
      "size": 706,
      "lines": 39,
      "lastModified": "2025-07-06T02:18:34.339Z",
      "content": "/**\n * Constants for rope label creation\n */\n\nexport const ROPE_LABEL_CONSTANTS = {\n  // Dimensions\n  LABEL: {\n    HEIGHT: 1.5,\n    DEPTH: 0.1,\n    SPACING: 0.2,\n    Z_OFFSET: -3\n  },\n  \n  // Text configuration\n  TEXT: {\n    SIZE: 0.3,\n    COLORS: {\n      SOURCE: new Color3(0.5, 0.8, 1),    // Light blue\n      RELATION: new Color3(1, 0.8, 0.5),   // Orange\n      TARGET: new Color3(0.5, 1, 0.8)      // Light green\n    }\n  },\n  \n  // Parsing configuration\n  PARSING: {\n    SEPARATOR: \"_\",\n    MIN_PARTS: 3,\n    SOURCE_INDEX: 0,\n    RELATION_INDEX: 1,\n    TARGET_INDEX: 2\n  },\n  \n  // Label defaults\n  DEFAULTS: {\n    SOURCE_TEXT: \"source\",\n    RELATION_TEXT: \"relation\", \n    TARGET_TEXT: \"target\"\n  }\n};",
      "patterns": {
        "functions": 0,
        "classes": 0,
        "interfaces": 0,
        "exports": 1,
        "imports": 0,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/hexagonMaker/constants.ts",
      "relativePath": "shared/modules/hexagonMaker/constants.ts",
      "name": "constants.ts",
      "size": 701,
      "lines": 29,
      "lastModified": "2025-07-05T22:20:50.681Z",
      "content": "export const HEXAGON_CONSTANTS = {\n  // Default values\n  DEFAULT_CENTER_POSITION: [0, 2, 0] as [number, number, number],\n  DEFAULT_WIDTH: 10,\n  DEFAULT_HEIGHT: 0.5,\n  DEFAULT_LABELS: [\"Front\", \"Left\", \"Right\"],\n  \n  // Hexagon properties\n  NUM_BARS: 3,\n  ROTATION_ANGLE: 60, // degrees between bars\n  \n  // Bar properties\n  DEFAULT_BAR_COLOR: [0.9, 0.7, 0.3] as [number, number, number], // Golden\n  \n  // Center cube properties\n  CENTER_CUBE: {\n    SIZE: 0.1,\n    TRANSPARENCY: 0.4,\n    COLOR_RGB: [255, 255, 0] as [number, number, number] // Yellow\n  },\n  \n  // Name prefixes\n  NAME_PREFIXES: {\n    HEXAGON: \"h\",\n    STACK: \"st\",\n    CENTER_CUBE: \"centerCube\",\n    CENTER_ATTACHMENT: \"att000\"\n  }\n};",
      "patterns": {
        "functions": 0,
        "classes": 0,
        "interfaces": 0,
        "exports": 1,
        "imports": 0,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/hexStackMaker/constants.ts",
      "relativePath": "shared/modules/hexStackMaker/constants.ts",
      "name": "constants.ts",
      "size": 572,
      "lines": 23,
      "lastModified": "2025-07-05T22:54:23.441Z",
      "content": "export const HEX_STACK_CONSTANTS = {\n  // Default values\n  DEFAULT_CENTER_POSITION: [0, 2, 0] as [number, number, number],\n  DEFAULT_WIDTH: 10,\n  DEFAULT_HEIGHT: 0.5,\n  DEFAULT_COUNT: 4,\n  \n  // Color palette\n  DEFAULT_COLOR_PALETTE: [\n    [1, 0, 0],       // Red\n    [0.8, 0.6, 0.2], // Golden\n    [0, 1, 0],       // Green\n    [0, 0, 1],       // Blue\n    [0.5, 0, 0.5],   // Purple\n    [1, 0.5, 0],     // Orange\n    [0, 1, 1],       // Cyan\n    [1, 0, 0.5],     // Pink\n  ] as [number, number, number][],\n  \n  // Name formatting\n  NAME_PREFIX: \"st\",\n  PAD_LENGTH: 3\n};",
      "patterns": {
        "functions": 0,
        "classes": 0,
        "interfaces": 0,
        "exports": 1,
        "imports": 0,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/hexStackMaker/utilities.ts",
      "relativePath": "shared/modules/hexStackMaker/utilities.ts",
      "name": "utilities.ts",
      "size": 563,
      "lines": 16,
      "lastModified": "2025-07-05T22:54:23.441Z",
      "content": "import { padNumber } from \"../../utils/stringUtils\";\nimport { HEX_STACK_CONSTANTS } from \"./constants\";\n\nexport function generateStackName(stackIndex: number): string {\n  const stackStr = padNumber(stackIndex, HEX_STACK_CONSTANTS.PAD_LENGTH);\n  return `${HEX_STACK_CONSTANTS.NAME_PREFIX}${stackStr}`;\n}\n\nexport function calculateLevelPosition(\n  centerPosition: [number, number, number],\n  level: number,\n  height: number\n): [number, number, number] {\n  const levelY = centerPosition[1] + level * height;\n  return [centerPosition[0], levelY, centerPosition[2]];\n}",
      "patterns": {
        "functions": 2,
        "classes": 0,
        "interfaces": 0,
        "exports": 2,
        "imports": 2,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": [
          {
            "name": "generateStackName",
            "type": "function",
            "isExported": true
          },
          {
            "name": "calculateLevelPosition",
            "type": "function",
            "isExported": true
          }
        ]
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/utils/stringUtils.ts",
      "relativePath": "shared/utils/stringUtils.ts",
      "name": "stringUtils.ts",
      "size": 548,
      "lines": 22,
      "lastModified": "2025-07-05T22:11:32.466Z",
      "content": "/**\n * Shared string utility functions\n */\n\n/**\n * Pads a number with leading zeros to reach the specified length\n * @param num - The number to pad\n * @param length - The desired string length\n * @returns The padded string\n * @example\n * padNumber(5, 3) // returns \"005\"\n * padNumber(42, 3) // returns \"042\"\n * padNumber(123, 3) // returns \"123\"\n */\nexport function padNumber(num: number, length: number): string {\n  const str = tostring(num);\n  let result = str;\n  while (result.size() < length) {\n    result = \"0\" + result;\n  }\n  return result;\n}",
      "patterns": {
        "functions": 1,
        "classes": 0,
        "interfaces": 0,
        "exports": 1,
        "imports": 0,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": [
          {
            "name": "padNumber",
            "type": "function",
            "isExported": true
          }
        ]
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/barMaker/constants.ts",
      "relativePath": "shared/modules/barMaker/constants.ts",
      "name": "constants.ts",
      "size": 514,
      "lines": 21,
      "lastModified": "2025-07-05T22:17:36.423Z",
      "content": "export const BAR_CONSTANTS = {\n  // Default dimensions\n  DEFAULT_SIZE: [4, 2, 8] as [number, number, number],\n  DEFAULT_COLOR: [0.2, 0.4, 0.8] as [number, number, number],\n  \n  // Formatting\n  POINT_SIZE: 0.1,\n  PAD_LENGTH: 3,\n  \n  // Naming prefixes\n  NAME_PREFIXES: {\n    BAR: \"bar\",\n    ATTACHMENT: \"att\",\n    HEX: \"h\",\n    STACK: \"st\"\n  },\n  \n  // Circle colors\n  FRONT_CIRCLE_COLOR: [0, 1, 0] as [number, number, number], // Green\n  BACK_CIRCLE_COLOR: [1, 0, 0] as [number, number, number], // Red\n} as const;",
      "patterns": {
        "functions": 0,
        "classes": 0,
        "interfaces": 0,
        "exports": 1,
        "imports": 0,
        "anyTypes": 0,
        "typeAssertions": 1,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/client/services/configGui/index.ts",
      "relativePath": "client/services/configGui/index.ts",
      "name": "index.ts",
      "size": 493,
      "lines": 11,
      "lastModified": "2025-07-08T09:55:07.691Z",
      "content": "export { ConfigGUIService } from \"./makeConfigGui\";\nexport type { ConfigGUIServiceOptions } from \"./interfaces\";\nexport { GUIStateManager } from \"./stateManager\";\nexport { GUIEventHandlers } from \"./eventHandlers\";\nexport { ComponentFactory } from \"./componentFactory\";\nexport * from \"./validationHandlers\";\n\n// Export modular components\nexport { createDropdown } from \"./components/dropdown\";\nexport { createFrame } from \"./components/frame\";\nexport { createTitle } from \"./components/title\";",
      "patterns": {
        "functions": 0,
        "classes": 0,
        "interfaces": 0,
        "exports": 9,
        "imports": 0,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/labelBlockMaker/index.ts",
      "relativePath": "shared/modules/labelBlockMaker/index.ts",
      "name": "index.ts",
      "size": 398,
      "lines": 16,
      "lastModified": "2025-07-08T22:08:21.569Z",
      "content": "/**\n * Label Block Maker module\n * Exports all public APIs for creating label blocks\n */\n\n// Main exports\nexport { makeLabelBlock } from \"./labelBlockMaker\";\nexport type { ILabelBlockMakerConfig } from \"./standardizedInterfaces\";\n\n// Legacy types for reference (can be removed in future)\nexport type { \n  TextBoxProps, \n  LabelConfig, \n  LabelBlockProps, \n  LabelBlockConfig \n} from \"./interfaces\";",
      "patterns": {
        "functions": 0,
        "classes": 0,
        "interfaces": 0,
        "exports": 3,
        "imports": 0,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/client/services/configGui/utilities.ts",
      "relativePath": "client/services/configGui/utilities.ts",
      "name": "utilities.ts",
      "size": 344,
      "lines": 16,
      "lastModified": "2025-07-11T04:44:53.280Z",
      "content": "import { GUI_CONSTANTS } from \"./constants\";\n\n\n\n/**\n * Creates a UICorner instance with standard radius\n */\nexport function createUICorner(parent: GuiObject, radius?: UDim): UICorner {\n  const corner = new Instance(\"UICorner\");\n  corner.CornerRadius = radius || GUI_CONSTANTS.FRAME.CORNER_RADIUS;\n  corner.Parent = parent;\n  return corner;\n}\n\n\n",
      "patterns": {
        "functions": 1,
        "classes": 0,
        "interfaces": 0,
        "exports": 1,
        "imports": 1,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": [
          {
            "name": "createUICorner",
            "type": "function",
            "isExported": true
          }
        ]
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/renderers/blocks/index.ts",
      "relativePath": "shared/modules/renderers/blocks/index.ts",
      "name": "index.ts",
      "size": 283,
      "lines": 10,
      "lastModified": "2025-07-07T09:26:00.808Z",
      "content": "/**\n * Central export for all block creators\n * Part of F002 Phase 2 refactoring\n */\n\nexport * from \"./baseBlockCreator\";\nexport * from \"./platformBlockCreator\";\nexport * from \"./shadowBlockCreator\";\nexport * from \"./swimlaneBlockCreator\";\nexport * from \"./blockDimensionCalculator\";",
      "patterns": {
        "functions": 0,
        "classes": 0,
        "interfaces": 0,
        "exports": 6,
        "imports": 0,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/renderers/unifiedDataRenderer/core/dataGenerator/index.ts",
      "relativePath": "shared/modules/renderers/unifiedDataRenderer/core/dataGenerator/index.ts",
      "name": "index.ts",
      "size": 278,
      "lines": 9,
      "lastModified": "2025-07-11T04:50:01.795Z",
      "content": "/**\n * DataGenerator module exports\n */\n\nexport { NodeGenerator } from \"./nodeGenerator\";\nexport { LinkGenerator } from \"./linkGenerator\";\nexport { PropertyManager } from \"./propertyManager\";\nexport { TestDataProcessor } from \"./testDataProcessor\";\nexport * from \"./interfaces\";",
      "patterns": {
        "functions": 0,
        "classes": 0,
        "interfaces": 0,
        "exports": 5,
        "imports": 0,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/ropeLabelMaker/index.ts",
      "relativePath": "shared/modules/ropeLabelMaker/index.ts",
      "name": "index.ts",
      "size": 253,
      "lines": 12,
      "lastModified": "2025-07-06T02:19:33.861Z",
      "content": "/**\n * Rope Label Maker module\n * Exports all public APIs for creating rope labels\n */\n\nexport { createRopeLabel } from \"./ropeLabelMaker\";\nexport type { \n  RopeLabelProps, \n  RopeLabelConfig,\n  ParsedRelation,\n  RopeLabelOptions \n} from \"./interfaces\";",
      "patterns": {
        "functions": 0,
        "classes": 0,
        "interfaces": 0,
        "exports": 2,
        "imports": 0,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/hexStackMaker/index.ts",
      "relativePath": "shared/modules/hexStackMaker/index.ts",
      "name": "index.ts",
      "size": 242,
      "lines": 6,
      "lastModified": "2025-07-08T22:08:21.569Z",
      "content": "// Main exports\nexport { makeHexStack } from \"./hexStackMaker\";\nexport type { IHexStackMakerConfig } from \"./standardizedInterfaces\";\n\n// Legacy type for reference (can be removed in future)\nexport type { HexStackConfig } from \"./interfaces\";",
      "patterns": {
        "functions": 0,
        "classes": 0,
        "interfaces": 0,
        "exports": 3,
        "imports": 0,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/hexagonMaker/index.ts",
      "relativePath": "shared/modules/hexagonMaker/index.ts",
      "name": "index.ts",
      "size": 238,
      "lines": 6,
      "lastModified": "2025-07-08T22:08:21.569Z",
      "content": "// Main exports\nexport { makeHexagon } from \"./hexagonMaker\";\nexport type { IHexagonMakerConfig } from \"./standardizedInterfaces\";\n\n// Legacy type for reference (can be removed in future)\nexport type { HexagonConfig } from \"./interfaces\";",
      "patterns": {
        "functions": 0,
        "classes": 0,
        "interfaces": 0,
        "exports": 3,
        "imports": 0,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/barMaker/index.ts",
      "relativePath": "shared/modules/barMaker/index.ts",
      "name": "index.ts",
      "size": 233,
      "lines": 6,
      "lastModified": "2025-07-08T22:08:21.568Z",
      "content": "// Main exports\nexport { makeBar } from \"./barMaker\";\nexport type { IBarMakerConfig } from \"./standardizedInterfaces\";\n\n// Legacy types for reference (can be removed in future)\nexport type { BarConfig, BarProps } from \"./interfaces\";",
      "patterns": {
        "functions": 0,
        "classes": 0,
        "interfaces": 0,
        "exports": 3,
        "imports": 0,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/hexagonMaker/interfaces.ts",
      "relativePath": "shared/modules/hexagonMaker/interfaces.ts",
      "name": "interfaces.ts",
      "size": 231,
      "lines": 11,
      "lastModified": "2025-07-05T22:20:32.342Z",
      "content": "export interface HexagonConfig {\n  id?: number;\n  centerPosition?: [number, number, number];\n  width?: number;\n  height?: number;\n  barProps?: any;\n  labels?: string[];\n  stackIndex?: number;\n  hexIndex?: number;\n  guid?: string;\n}",
      "patterns": {
        "functions": 0,
        "classes": 0,
        "interfaces": 1,
        "exports": 1,
        "imports": 0,
        "anyTypes": 1,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/renderers/unifiedDataRenderer/index.ts",
      "relativePath": "shared/modules/renderers/unifiedDataRenderer/index.ts",
      "name": "index.ts",
      "size": 228,
      "lines": 9,
      "lastModified": "2025-07-06T20:27:08.308Z",
      "content": "/**\n * Unified Data Renderer Module\n * \n * Exports the main UnifiedDataRenderer class and related types\n */\n\nexport { UnifiedDataRenderer } from \"./unifiedDataRenderer\";\nexport * from \"./interfaces\";\nexport * from \"./constants\";",
      "patterns": {
        "functions": 0,
        "classes": 1,
        "interfaces": 0,
        "exports": 3,
        "imports": 0,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [
          {
            "name": "and",
            "methodCount": 0,
            "methods": []
          }
        ],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/hexStackMaker/interfaces.ts",
      "relativePath": "shared/modules/hexStackMaker/interfaces.ts",
      "name": "interfaces.ts",
      "size": 212,
      "lines": 9,
      "lastModified": "2025-07-05T22:54:23.441Z",
      "content": "export interface HexStackConfig {\n  id?: number;\n  centerPosition?: [number, number, number];\n  width?: number;\n  height?: number;\n  count?: number;\n  colors?: [number, number, number][];\n  stackIndex?: number;\n}",
      "patterns": {
        "functions": 0,
        "classes": 0,
        "interfaces": 1,
        "exports": 1,
        "imports": 0,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/client/services/configGui/components/axisMappingControls/index.ts",
      "relativePath": "client/services/configGui/components/axisMappingControls/index.ts",
      "name": "index.ts",
      "size": 179,
      "lines": 5,
      "lastModified": "2025-07-10T09:46:08.455Z",
      "content": "// Re-export main function for backward compatibility\nexport { createAxisMappingControls } from \"./main\";\n\n// Export types\nexport type { AxisMappingControlsProps } from \"./types\";",
      "patterns": {
        "functions": 1,
        "classes": 0,
        "interfaces": 0,
        "exports": 3,
        "imports": 0,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/modules/renderers/constants/index.ts",
      "relativePath": "shared/modules/renderers/constants/index.ts",
      "name": "index.ts",
      "size": 152,
      "lines": 7,
      "lastModified": "2025-07-07T09:26:00.809Z",
      "content": "/**\n * Central export for all renderer constants\n * Part of F002 refactoring\n */\n\nexport * from \"./blockConstants\";\nexport * from \"./positionConstants\";",
      "patterns": {
        "functions": 0,
        "classes": 0,
        "interfaces": 0,
        "exports": 3,
        "imports": 0,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    },
    {
      "path": "/Users/__projects/roblox-mapper-002-multi/cursor/src/shared/utils/validation/index.ts",
      "relativePath": "shared/utils/validation/index.ts",
      "name": "index.ts",
      "size": 146,
      "lines": 7,
      "lastModified": "2025-07-06T22:55:39.604Z",
      "content": "/**\n * Validation utilities export\n */\n\nexport * from \"./stringValidation\";\nexport * from \"./arrayValidation\";\nexport * from \"./configValidation\";",
      "patterns": {
        "functions": 0,
        "classes": 0,
        "interfaces": 0,
        "exports": 4,
        "imports": 0,
        "anyTypes": 0,
        "typeAssertions": 0,
        "todos": 0
      },
      "classAnalysis": {
        "classes": [],
        "methods": []
      }
    }
  ],
  "deadCode": [
    {
      "file": "shared/modules/renderers/unifiedDataRenderer/core/positionCalculator.ts",
      "type": "commented-code",
      "count": 1,
      "lines": 6
    },
    {
      "file": "shared/modules/renderers/unifiedDataRenderer/unifiedDataRenderer.ts",
      "type": "commented-code",
      "count": 1,
      "lines": 65
    },
    {
      "file": "client/services/configGui/components/yAxisControls.ts",
      "type": "unused-export",
      "items": [
        "createYAxisControls"
      ]
    },
    {
      "file": "shared/modules/renderers/blocks/yParallelShadowCreator.ts",
      "type": "unused-export",
      "items": [
        "YGroupBounds"
      ]
    },
    {
      "file": "shared/modules/renderers/unifiedDataRenderer/utils/colorMapper.ts",
      "type": "unused-export",
      "items": [
        "getNodeTextProperties"
      ]
    },
    {
      "file": "client/services/configGui/components/visualCustomizationControls.ts",
      "type": "unused-export",
      "items": [
        "createVisualCustomizationControls"
      ]
    },
    {
      "file": "shared/modules/renderers/flatBlockCreator.ts",
      "type": "commented-code",
      "count": 1,
      "lines": 6
    },
    {
      "file": "shared/modules/renderers/flatBlockCreator.ts",
      "type": "unused-export",
      "items": [
        "FlatBlockConfig",
        "FLAT_BLOCK_DEFAULTS",
        "createFlatBlocks",
        "createFlatBlock"
      ]
    },
    {
      "file": "shared/modules/renderers/verticalWallCreator.ts",
      "type": "unused-export",
      "items": [
        "VerticalWallConfig",
        "createFarZEdgeWall",
        "createFarXEdgeWall"
      ]
    },
    {
      "file": "client/services/configGui/components/nodeTypesSection.ts",
      "type": "unused-export",
      "items": [
        "createNodeTypesSection"
      ]
    },
    {
      "file": "shared/services/base/BaseService.ts",
      "type": "commented-code",
      "count": 1,
      "lines": 6
    },
    {
      "file": "client/services/configGui/components/dropdownTestControls.ts",
      "type": "unused-export",
      "items": [
        "DropdownTestControlsOptions",
        "createDropdownTestControls"
      ]
    },
    {
      "file": "server/services/graphInitializer.service.ts",
      "type": "unused-export",
      "items": [
        "GraphInitConfig"
      ]
    },
    {
      "file": "shared/modules/renderers/unifiedDataRenderer/core/nodeOrganizer.ts",
      "type": "unused-export",
      "items": [
        "OrganizedNodes"
      ]
    },
    {
      "file": "client/services/configGui/components/axisMappingControls/components/yAxisConfigSection.ts",
      "type": "unused-export",
      "items": [
        "createYAxisConfigSection"
      ]
    },
    {
      "file": "shared/utils/validation/stringValidation.ts",
      "type": "unused-export",
      "items": [
        "STRING_LIMITS",
        "validateString",
        "sanitizeString"
      ]
    },
    {
      "file": "shared/modules/renderers/unifiedDataRenderer/types.ts",
      "type": "unused-export",
      "items": [
        "PlatformBounds",
        "RendererConfig",
        "UpdateConfig",
        "isNode",
        "isLink",
        "isCluster"
      ]
    },
    {
      "file": "shared/modules/labelBlockMaker/standardizedInterfaces.ts",
      "type": "unused-export",
      "items": [
        "IFaceLabelConfig",
        "LabelBlockConfigLegacy",
        "convertLegacyLabelBlockConfig"
      ]
    },
    {
      "file": "client/services/configGui/components/axisMappingControls/utils/layoutManager.ts",
      "type": "unused-export",
      "items": [
        "applyCornerRadius"
      ]
    },
    {
      "file": "shared/modules/barMaker/standardizedInterfaces.ts",
      "type": "unused-export",
      "items": [
        "BarConfigLegacy",
        "convertLegacyBarConfig"
      ]
    },
    {
      "file": "shared/modules/TextLabelMaker.ts",
      "type": "unused-export",
      "items": [
        "createTextLabelWithCustomStyling"
      ]
    },
    {
      "file": "shared/modules/makeOriginBlock.ts",
      "type": "unused-export",
      "items": [
        "OriginBlockConfig"
      ]
    },
    {
      "file": "shared/interfaces/IMaker.ts",
      "type": "unused-export",
      "items": [
        "IMakerConfig",
        "IMakerResult",
        "IMakerFunction",
        "IMakerClass",
        "IConnectorMakerConfig"
      ]
    },
    {
      "file": "shared/modules/renderers/blocks/blockDimensionCalculator.ts",
      "type": "unused-export",
      "items": [
        "NodeBounds",
        "BlockDimensionCalculator"
      ]
    },
    {
      "file": "shared/modules/renderers/unifiedDataRenderer/core/dataGenerator/interfaces.ts",
      "type": "unused-export",
      "items": [
        "LinkGenerationResult",
        "PropertyAssignmentConfig",
        "PropertyMetadata"
      ]
    },
    {
      "file": "shared/interfaces/enhancedGenerator.interface.ts",
      "type": "unused-export",
      "items": [
        "SpatialGrouping"
      ]
    },
    {
      "file": "shared/modules/ropeLabelMaker/utilities.ts",
      "type": "unused-export",
      "items": [
        "formatNodeName",
        "calculateLabelPosition",
        "validateRelationFormat"
      ]
    },
    {
      "file": "shared/modules/hexagonMaker/standardizedInterfaces.ts",
      "type": "unused-export",
      "items": [
        "HexagonConfigLegacy",
        "convertLegacyHexagonConfig"
      ]
    },
    {
      "file": "client/main.client.ts",
      "type": "commented-code",
      "count": 1,
      "lines": 12
    },
    {
      "file": "shared/modules/renderers/unifiedDataRenderer/interfaces.ts",
      "type": "unused-export",
      "items": [
        "NodeCreationParams",
        "UpdatePlan"
      ]
    },
    {
      "file": "shared/modules/barMaker/utilities.ts",
      "type": "unused-export",
      "items": [
        "makeCircle"
      ]
    },
    {
      "file": "shared/modules/hexStackMaker/standardizedInterfaces.ts",
      "type": "unused-export",
      "items": [
        "HexStackConfigLegacy",
        "convertLegacyHexStackConfig"
      ]
    },
    {
      "file": "client/services/configGui/components/axisMappingControls/types.ts",
      "type": "unused-export",
      "items": [
        "LabeledControlProps"
      ]
    },
    {
      "file": "shared/interfaces/nodeTypes.ts",
      "type": "unused-export",
      "items": [
        "isValidNodeType",
        "AXIS_PROPERTIES"
      ]
    },
    {
      "file": "client/services/configGui/interfaces.ts",
      "type": "unused-export",
      "items": [
        "ComponentProps"
      ]
    },
    {
      "file": "shared/interfaces/IService.ts",
      "type": "unused-export",
      "items": [
        "IServiceWithInit"
      ]
    },
    {
      "file": "server/main.server.ts",
      "type": "commented-code",
      "count": 1,
      "lines": 13
    }
  ],
  "modularization": {
    "mainFile": {
      "path": "shared/modules/renderers/unifiedDataRenderer/core/dataGenerator.ts",
      "lines": 122,
      "classes": 0,
      "imports": 7
    },
    "moduleFiles": [
      {
        "path": "shared/modules/renderers/unifiedDataRenderer/core/dataGenerator/linkGenerator.ts",
        "lines": 334,
        "classes": 0
      },
      {
        "path": "shared/modules/renderers/unifiedDataRenderer/core/dataGenerator/testDataProcessor.ts",
        "lines": 211,
        "classes": 1
      },
      {
        "path": "shared/modules/renderers/unifiedDataRenderer/core/dataGenerator/nodeGenerator.ts",
        "lines": 174,
        "classes": 0
      },
      {
        "path": "shared/modules/renderers/unifiedDataRenderer/core/dataGenerator/propertyManager.ts",
        "lines": 187,
        "classes": 1
      },
      {
        "path": "shared/modules/renderers/unifiedDataRenderer/core/dataGenerator/interfaces.ts",
        "lines": 116,
        "classes": 0
      },
      {
        "path": "shared/modules/renderers/unifiedDataRenderer/core/dataGenerator/index.ts",
        "lines": 9,
        "classes": 0
      }
    ],
    "totalLines": 1476,
    "moduleCount": 6
  }
}